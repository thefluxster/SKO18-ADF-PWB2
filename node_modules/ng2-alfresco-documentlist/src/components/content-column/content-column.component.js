/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var content_column_list_component_1 = require("./content-column-list.component");
var ContentColumnComponent = (function () {
    function ContentColumnComponent(list) {
        this.list = list;
        this.type = 'text';
        this.sortable = false;
        this.title = '';
    }
    ContentColumnComponent.prototype.ngOnInit = function () {
        if (!this.srTitle && this.key === '$thumbnail') {
            this.srTitle = 'Thumbnail';
        }
    };
    ContentColumnComponent.prototype.ngAfterContentInit = function () {
        this.register();
    };
    ContentColumnComponent.prototype.register = function () {
        if (this.list) {
            return this.list.registerColumn(this);
        }
        return false;
    };
    return ContentColumnComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ContentColumnComponent.prototype, "key", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ContentColumnComponent.prototype, "type", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ContentColumnComponent.prototype, "format", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], ContentColumnComponent.prototype, "sortable", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ContentColumnComponent.prototype, "title", void 0);
__decorate([
    core_1.ContentChild(core_1.TemplateRef),
    __metadata("design:type", Object)
], ContentColumnComponent.prototype, "template", void 0);
__decorate([
    core_1.Input('sr-title'),
    __metadata("design:type", String)
], ContentColumnComponent.prototype, "srTitle", void 0);
__decorate([
    core_1.Input('class'),
    __metadata("design:type", String)
], ContentColumnComponent.prototype, "cssClass", void 0);
ContentColumnComponent = __decorate([
    core_1.Component({
        selector: 'content-column',
        template: ''
    }),
    __metadata("design:paramtypes", [content_column_list_component_1.ContentColumnListComponent])
], ContentColumnComponent);
exports.ContentColumnComponent = ContentColumnComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvY29udGVudC1jb2x1bW4vY29udGVudC1jb2x1bW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBc0c7QUFHdEcsaUZBQTZFO0FBTTdFLElBQWEsc0JBQXNCO0lBNkIvQixnQ0FBb0IsSUFBZ0M7UUFBaEMsU0FBSSxHQUFKLElBQUksQ0FBNEI7UUF2QnBELFNBQUksR0FBVyxNQUFNLENBQUM7UUFNdEIsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUcxQixVQUFLLEdBQVcsRUFBRSxDQUFDO0lBY29DLENBQUM7SUFFeEQseUNBQVEsR0FBUjtRQUNJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxLQUFLLFlBQVksQ0FBQyxDQUFDLENBQUM7WUFDN0MsSUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUM7UUFDL0IsQ0FBQztJQUNMLENBQUM7SUFFRCxtREFBa0IsR0FBbEI7UUFDSSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQUVELHlDQUFRLEdBQVI7UUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxDQUFDO1FBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBQ0wsNkJBQUM7QUFBRCxDQS9DQSxBQStDQyxJQUFBO0FBNUNHO0lBREMsWUFBSyxFQUFFOzttREFDSTtBQUdaO0lBREMsWUFBSyxFQUFFOztvREFDYztBQUd0QjtJQURDLFlBQUssRUFBRTs7c0RBQ087QUFHZjtJQURDLFlBQUssRUFBRTs7d0RBQ2tCO0FBRzFCO0lBREMsWUFBSyxFQUFFOztxREFDVztBQUduQjtJQURDLG1CQUFZLENBQUMsa0JBQVcsQ0FBQzs7d0RBQ1o7QUFNZDtJQURDLFlBQUssQ0FBQyxVQUFVLENBQUM7O3VEQUNGO0FBR2hCO0lBREMsWUFBSyxDQUFDLE9BQU8sQ0FBQzs7d0RBQ0U7QUEzQlIsc0JBQXNCO0lBSmxDLGdCQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsZ0JBQWdCO1FBQzFCLFFBQVEsRUFBRSxFQUFFO0tBQ2YsQ0FBQztxQ0E4QjRCLDBEQUEwQjtHQTdCM0Msc0JBQXNCLENBK0NsQztBQS9DWSx3REFBc0IiLCJmaWxlIjoiY29tcG9uZW50cy9jb250ZW50LWNvbHVtbi9jb250ZW50LWNvbHVtbi5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIENvbnRlbnRDaGlsZCwgVGVtcGxhdGVSZWYsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGFDb2x1bW4gfSBmcm9tICduZzItYWxmcmVzY28tZGF0YXRhYmxlJztcblxuaW1wb3J0IHsgQ29udGVudENvbHVtbkxpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbnRlbnQtY29sdW1uLWxpc3QuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdjb250ZW50LWNvbHVtbicsXG4gICAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnRDb2x1bW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQsIERhdGFDb2x1bW4ge1xuXG4gICAgQElucHV0KClcbiAgICBrZXk6IHN0cmluZztcblxuICAgIEBJbnB1dCgpXG4gICAgdHlwZTogc3RyaW5nID0gJ3RleHQnO1xuXG4gICAgQElucHV0KClcbiAgICBmb3JtYXQ6IHN0cmluZztcblxuICAgIEBJbnB1dCgpXG4gICAgc29ydGFibGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgdGl0bGU6IHN0cmluZyA9ICcnO1xuXG4gICAgQENvbnRlbnRDaGlsZChUZW1wbGF0ZVJlZilcbiAgICB0ZW1wbGF0ZTogYW55O1xuXG4gICAgLyoqXG4gICAgICogVGl0bGUgdG8gYmUgdXNlZCBmb3Igc2NyZWVuIHJlYWRlcnMuXG4gICAgICovXG4gICAgQElucHV0KCdzci10aXRsZScpXG4gICAgc3JUaXRsZTogc3RyaW5nO1xuXG4gICAgQElucHV0KCdjbGFzcycpXG4gICAgY3NzQ2xhc3M6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgbGlzdDogQ29udGVudENvbHVtbkxpc3RDb21wb25lbnQpIHt9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnNyVGl0bGUgJiYgdGhpcy5rZXkgPT09ICckdGh1bWJuYWlsJykge1xuICAgICAgICAgICAgdGhpcy5zclRpdGxlID0gJ1RodW1ibmFpbCc7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgICAgIHRoaXMucmVnaXN0ZXIoKTtcbiAgICB9XG5cbiAgICByZWdpc3RlcigpOiBib29sZWFuIHtcbiAgICAgICAgaWYgKHRoaXMubGlzdCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubGlzdC5yZWdpc3RlckNvbHVtbih0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuIl19
