/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { AlfrescoTranslationService, LogService } from 'ng2-alfresco-core';
import { ObjectDataTableAdapter, DataTableAdapter, DataRowEvent } from 'ng2-alfresco-datatable';
import { ActivitiTaskListService } from './../services/activiti-tasklist.service';
import { TaskQueryRequestRepresentationModel } from '../models/filter.model';
export declare class ActivitiTaskList implements OnInit, OnChanges {
    private translateService;
    private taskListService;
    private logService;
    appId: string;
    processDefinitionKey: string;
    state: string;
    assignment: string;
    sort: string;
    name: string;
    landingTaskId: string;
    requestNode: TaskQueryRequestRepresentationModel;
    data: DataTableAdapter;
    rowClick: EventEmitter<string>;
    onSuccess: EventEmitter<any>;
    onError: EventEmitter<any>;
    currentInstanceId: string;
    private defaultSchemaColumn;
    constructor(translateService: AlfrescoTranslationService, taskListService: ActivitiTaskListService, logService: LogService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private isPropertyChanged(changes);
    reload(): void;
    initDefaultSchemaColumns(): ObjectDataTableAdapter;
    private load(requestNode);
    private createDataRow(instances);
    private renderInstances(instances);
    selectTask(taskIdToSelect: string): void;
    getCurrentId(): string;
    isListEmpty(): boolean;
    onRowClick(event: DataRowEvent): void;
    private optimizeNames(istances);
    private createRequestNode();
}
