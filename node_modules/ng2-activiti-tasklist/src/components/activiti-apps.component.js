/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var activiti_tasklist_service_1 = require("./../services/activiti-tasklist.service");
var icon_model_1 = require("../models/icon.model");
var Observable_1 = require("rxjs/Observable");
var ActivitiApps = ActivitiApps_1 = (function () {
    function ActivitiApps(translateService, activitiTaskList) {
        var _this = this;
        this.translateService = translateService;
        this.activitiTaskList = activitiTaskList;
        this.layoutType = ActivitiApps_1.LAYOUT_GRID;
        this.appClick = new core_1.EventEmitter();
        this.error = new core_1.EventEmitter();
        this.appList = [];
        if (translateService) {
            translateService.addTranslationFolder('ng2-activiti-tasklist', 'node_modules/ng2-activiti-tasklist/src');
        }
        this.apps$ = new Observable_1.Observable(function (observer) { return _this.appsObserver = observer; }).share();
    }
    ActivitiApps.prototype.ngOnInit = function () {
        var _this = this;
        if (!this.isValidType()) {
            this.setDefaultLayoutType();
        }
        this.apps$.subscribe(function (app) {
            _this.appList.push(app);
        });
        this.iconsMDL = new icon_model_1.IconModel();
        this.load();
    };
    ActivitiApps.prototype.load = function () {
        var _this = this;
        this.activitiTaskList.getDeployedApplications().subscribe(function (res) {
            res.forEach(function (app) {
                if (app.defaultAppId === ActivitiApps_1.DEFAULT_TASKS_APP) {
                    app.name = ActivitiApps_1.DEFAULT_TASKS_APP_NAME;
                    app.theme = ActivitiApps_1.DEFAULT_TASKS_APP_THEME;
                    app.icon = ActivitiApps_1.DEFAULT_TASKS_APP_ICON;
                    _this.appsObserver.next(app);
                }
                else if (app.deploymentId) {
                    _this.appsObserver.next(app);
                }
            });
        }, function (err) {
            _this.error.emit(err);
        });
    };
    ActivitiApps.prototype.selectApp = function (app) {
        this.currentApp = app;
        this.appClick.emit(app);
    };
    ActivitiApps.prototype.isSelected = function (appId) {
        return (this.currentApp !== undefined && appId === this.currentApp.id);
    };
    ActivitiApps.prototype.isValidType = function () {
        if (this.layoutType && (this.layoutType === ActivitiApps_1.LAYOUT_LIST || this.layoutType === ActivitiApps_1.LAYOUT_GRID)) {
            return true;
        }
        return false;
    };
    ActivitiApps.prototype.setDefaultLayoutType = function () {
        this.layoutType = ActivitiApps_1.LAYOUT_GRID;
    };
    ActivitiApps.prototype.isList = function () {
        return this.layoutType === ActivitiApps_1.LAYOUT_LIST;
    };
    ActivitiApps.prototype.isGrid = function () {
        return this.layoutType === ActivitiApps_1.LAYOUT_GRID;
    };
    ActivitiApps.prototype.isEmpty = function () {
        return this.appList.length === 0;
    };
    ActivitiApps.prototype.getTheme = function (app) {
        return app.theme ? app.theme : '';
    };
    ActivitiApps.prototype.getBackgroundIcon = function (app) {
        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(app.icon);
    };
    return ActivitiApps;
}());
ActivitiApps.LAYOUT_LIST = 'LIST';
ActivitiApps.LAYOUT_GRID = 'GRID';
ActivitiApps.DEFAULT_TASKS_APP = 'tasks';
ActivitiApps.DEFAULT_TASKS_APP_NAME = 'Task App';
ActivitiApps.DEFAULT_TASKS_APP_THEME = 'theme-2';
ActivitiApps.DEFAULT_TASKS_APP_ICON = 'glyphicon-asterisk';
ActivitiApps.DEFAULT_TASKS_APP_MATERIAL_ICON = 'favorite_border';
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ActivitiApps.prototype, "layoutType", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ActivitiApps.prototype, "appClick", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ActivitiApps.prototype, "error", void 0);
ActivitiApps = ActivitiApps_1 = __decorate([
    core_1.Component({
        selector: 'activiti-apps',
        moduleId: module.id,
        template: "<div class=\"menu-container\" *ngIf=\"!isEmpty()\">     <ul class='mdl-list' *ngIf=\"isList()\">         <li class=\"mdl-list__item\" (click)=\"selectApp(app)\" *ngFor=\"let app of appList\">             <span class=\"mdl-list__item-primary-content\">             <i class=\"material-icons mdl-list__item-icon\">touch_app</i>             {{app.name}}             </span>         </li>     </ul>     <div class=\"mdl-grid\" *ngIf=\"isGrid()\">         <div (click)=\"selectApp(app)\" [ngClass]=\"['mdl-card mdl-cell',  getTheme(app)]\" *ngFor=\"let app of appList\">             <div class=\"logo\"><i class=\"material-icons\">{{getBackgroundIcon(app)}}</i></div>             <div class=\"mdl-card__title\">                 <h1 class=\"mdl-card__title-text application-title\">{{app.name}}</h1>             </div>             <div class=\"mdl-card__supporting-text\">                 <p>{{app.description}}</p>             </div>             <div class=\"mdl-card__actions mdl-card--border\">                 <i class=\"material-icons selectedIcon\" *ngIf=\"isSelected(app.id)\">done</i>             </div>         </div>     </div> </div>",
        styles: [":host {     width: 100%; }  .application-title {     color: white; }  .logo {     position: absolute;     right: 20px;     top: 20px; } .logo i{     font-size: 70px; } .theme-1 {     background-color: #269abc; } .theme-1 .logo i {     color: #168aac; } .theme-1 .mdl-card__actions i {     color: #168aac; } .theme-1 .mdl-card__actions i:hover {     color: #b7dfea; } .theme-2 {     background-color: #7da9b0; } .theme-2 .logo i {     color: #6d99a0; } .theme-2 .mdl-card__actions i {     color: #6d99a0; } .theme-2 .mdl-card__actions i:hover {  color: #def2f5; } .theme-3 {     background-color: #7689ab; } .theme-3 .logo i {     color: #66799b; } .theme-3 .mdl-card__actions i {     color: #66799b; } .theme-3 .mdl-card__actions i:hover {     color: #a2b4d6; } .theme-4 {     background-color: #c74e3e; } .theme-4 .logo i {     color: #b73e2e; } .theme-4 .mdl-card__actions i {     color: #b73e2e; } .theme-4 .mdl-card__actions i:hover {     color: #de8b80; } .theme-5 {     background-color: #fab96c; } .theme-5 .logo i {     color: #eaa95c; } .theme-5 .mdl-card__actions i {     color: #eaa95c; } .theme-5 .mdl-card__actions i:hover {     color: #fdd9ae; } .theme-6 {     background-color: #759d4c; } .theme-6 .logo i {     color: #658d3c; } .theme-6 .mdl-card__actions i {     color: #658d3c; } .theme-6 .mdl-card__actions i:hover {     color: #a8d07f; } .theme-7 {     background-color: #b1b489; } .theme-7 .logo i {     color: #a1a479; } .theme-7 .mdl-card__actions i {     color: #a1a479; } .theme-7 .mdl-card__actions i:hover {     color: #d9dcb2; } .theme-8 {     background-color: #a17299; } .theme-8 .logo i {     color: #916289; } .theme-8 .mdl-card__actions i {     color: #916289; } .theme-8 .mdl-card__actions i:hover {     color: #d0a8c9; } .theme-9 {     background-color: #696c67; } .theme-9 .logo i {     color: #595c57; } .theme-9 .mdl-card__actions i {     color: #595c57; } .theme-9 .mdl-card__actions i:hover {     color: #a6a9a4; } .theme-10 {     background-color: #cabb33; } .theme-10 .logo i {     color: #baab23; } .theme-10 .mdl-card__actions i {     color: #baab23; } .theme-10 .mdl-card__actions i:hover {     color: #efe79e; } .selectedIcon{     color: #e9f1f3!important; } .mdl-card__media {     margin: 0; }  .mdl-card__media > img {     max-width: 100%; }  .mdl-card__actions {     display: flex;     box-sizing:border-box;     align-items: center; } .mdl-card__actions > .mdl-button--icon {     margin-right: 3px;     margin-left: 3px; }  .mdl-card:hover {     box-shadow: 0 8px 10px 1px rgba(0, 0, 0, .14), 0 3px 14px 2px rgba(0, 0, 0, .12), 0 5px 5px -3px rgba(0, 0, 0, .2);     cursor: pointer; }"],
        providers: [activiti_tasklist_service_1.ActivitiTaskListService]
    }),
    __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoTranslationService,
        activiti_tasklist_service_1.ActivitiTaskListService])
], ActivitiApps);
exports.ActivitiApps = ActivitiApps;
var ActivitiApps_1;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
