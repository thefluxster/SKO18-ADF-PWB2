/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var task_details_model_1 = require("../models/task-details.model");
var activiti_tasklist_service_1 = require("./../services/activiti-tasklist.service");
var ActivitiTaskHeader = (function () {
    function ActivitiTaskHeader(translateService, activitiTaskService, logService) {
        this.translateService = translateService;
        this.activitiTaskService = activitiTaskService;
        this.logService = logService;
        this.formName = null;
        this.claim = new core_1.EventEmitter();
        if (translateService) {
            translateService.addTranslationFolder('ng2-activiti-tasklist', 'node_modules/ng2-activiti-tasklist/src');
        }
    }
    ActivitiTaskHeader.prototype.hasAssignee = function () {
        return (this.taskDetails && this.taskDetails.assignee) ? true : false;
    };
    ActivitiTaskHeader.prototype.isAssignedToMe = function () {
        return this.taskDetails.assignee ? true : false;
    };
    ActivitiTaskHeader.prototype.claimTask = function (taskId) {
        var _this = this;
        this.activitiTaskService.claimTask(taskId).subscribe(function (res) {
            _this.logService.info('Task claimed');
            _this.claim.emit(taskId);
        });
    };
    return ActivitiTaskHeader;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ActivitiTaskHeader.prototype, "formName", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", task_details_model_1.TaskDetailsModel)
], ActivitiTaskHeader.prototype, "taskDetails", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ActivitiTaskHeader.prototype, "claim", void 0);
ActivitiTaskHeader = __decorate([
    core_1.Component({
        selector: 'activiti-task-header',
        moduleId: module.id,
        template: "<div *ngIf=\"taskDetails\">     <div class=\"mdl-grid\">         <div class=\"mdl-cell mdl-cell--4-col\" data-automation-id=\"header-assignee\">             <span class=\"activiti-task-header__label\">{{ 'TASK_DETAILS.LABELS.ASSIGNEE' | translate }}: </span>             <span class=\"activiti-task-header__value\" *ngIf=\"hasAssignee()\">{{ taskDetails.assignee.firstName }} {{ taskDetails.assignee.lastName }}</span>             <span class=\"activiti-task-header__value\" *ngIf=\"!hasAssignee()\">{{ 'TASK_DETAILS.ASSIGNEE.NONE' | translate }}</span>         </div>         <div class=\"mdl-cell mdl-cell--4-col\" data-automation-id=\"header-due-date\">             <span class=\"activiti-task-header__label\">{{ 'TASK_DETAILS.LABELS.DUE' | translate }}: </span>             <span class=\"activiti-task-header__value\" *ngIf=\"taskDetails?.dueDate\">{{ taskDetails.dueDate }}</span>             <span class=\"activiti-task-header__value\" *ngIf=\"!taskDetails?.dueDate\">{{ 'TASK_DETAILS.DUE.NONE' |translate }}</span>         </div>         <div *ngIf=\"formName\" class=\"mdl-cell mdl-cell--4-col\" data-automation-id=\"header-form-name\">             <span class=\"activiti-task-header__label\">{{ 'TASK_DETAILS.LABELS.FORM' | translate }}: </span>             <span class=\"activiti-task-header__value\" *ngIf=\"formName\">{{ formName }}</span>             <span class=\"activiti-task-header__value\" *ngIf=\"!formName\">{{ 'TASK_DETAILS.FORM.NONE' | translate }}</span>         </div>          <button *ngIf=\"!isAssignedToMe()\" data-automation-id=\"header-claim-button\" type=\"button\" id=\"claim-task\"                 (click)=\"claimTask(taskDetails.id)\" class=\"mdl-button\">{{ 'TASK_DETAILS.BUTTON.CLAIM' | translate }}         </button>      </div> </div>",
        styles: [":host {     width: 100%; }  .activiti-task-header__label {     font-weight: bold; }  .activiti-task-header__value {     color: rgb(68, 138, 255); }  .material-icons {     cursor: pointer; }"]
    }),
    __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoTranslationService,
        activiti_tasklist_service_1.ActivitiTaskListService,
        ng2_alfresco_core_1.LogService])
], ActivitiTaskHeader);
exports.ActivitiTaskHeader = ActivitiTaskHeader;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvYWN0aXZpdGktdGFzay1oZWFkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBdUU7QUFDdkUsdURBQTJFO0FBQzNFLG1FQUFnRTtBQUNoRSxxRkFBa0Y7QUFRbEYsSUFBYSxrQkFBa0I7SUFXM0IsNEJBQW9CLGdCQUE0QyxFQUM1QyxtQkFBNEMsRUFDNUMsVUFBc0I7UUFGdEIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUE0QjtRQUM1Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXlCO1FBQzVDLGVBQVUsR0FBVixVQUFVLENBQVk7UUFWMUMsYUFBUSxHQUFXLElBQUksQ0FBQztRQU14QixVQUFLLEdBQXNCLElBQUksbUJBQVksRUFBTyxDQUFDO1FBSy9DLEVBQUUsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQztZQUNuQixnQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQyx1QkFBdUIsRUFBRSx3Q0FBd0MsQ0FBQyxDQUFDO1FBQzdHLENBQUM7SUFDTCxDQUFDO0lBRU0sd0NBQVcsR0FBbEI7UUFDSSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLEdBQUcsSUFBSSxHQUFHLEtBQUssQ0FBQztJQUMxRSxDQUFDO0lBRUQsMkNBQWMsR0FBZDtRQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQ3BELENBQUM7SUFFRCxzQ0FBUyxHQUFULFVBQVUsTUFBYztRQUF4QixpQkFNQztRQUxHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxDQUNoRCxVQUFDLEdBQVE7WUFDTCxLQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNyQyxLQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM1QixDQUFDLENBQUMsQ0FBQztJQUNYLENBQUM7SUFDTCx5QkFBQztBQUFELENBbENBLEFBa0NDLElBQUE7QUEvQkc7SUFEQyxZQUFLLEVBQUU7O29EQUNnQjtBQUd4QjtJQURDLFlBQUssRUFBRTs4QkFDSyxxQ0FBZ0I7dURBQUM7QUFHOUI7SUFEQyxhQUFNLEVBQUU7OEJBQ0YsbUJBQVk7aURBQWdDO0FBVDFDLGtCQUFrQjtJQU45QixnQkFBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLHNCQUFzQjtRQUNoQyxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDbkIsUUFBUSxFQUFFLDh1REFBOHVEO1FBQ3h2RCxNQUFNLEVBQUUsQ0FBQywrTEFBK0wsQ0FBQztLQUM1TSxDQUFDO3FDQVl3Qyw4Q0FBMEI7UUFDdkIsbURBQXVCO1FBQ2hDLDhCQUFVO0dBYmpDLGtCQUFrQixDQWtDOUI7QUFsQ1ksZ0RBQWtCIiwiZmlsZSI6ImNvbXBvbmVudHMvYWN0aXZpdGktdGFzay1oZWFkZXIuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFsZnJlc2NvVHJhbnNsYXRpb25TZXJ2aWNlLCBMb2dTZXJ2aWNlIH0gZnJvbSAnbmcyLWFsZnJlc2NvLWNvcmUnO1xuaW1wb3J0IHsgVGFza0RldGFpbHNNb2RlbCB9IGZyb20gJy4uL21vZGVscy90YXNrLWRldGFpbHMubW9kZWwnO1xuaW1wb3J0IHsgQWN0aXZpdGlUYXNrTGlzdFNlcnZpY2UgfSBmcm9tICcuLy4uL3NlcnZpY2VzL2FjdGl2aXRpLXRhc2tsaXN0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FjdGl2aXRpLXRhc2staGVhZGVyJyxcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxuICAgIHRlbXBsYXRlOiBcIjxkaXYgKm5nSWY9XFxcInRhc2tEZXRhaWxzXFxcIj4gICAgIDxkaXYgY2xhc3M9XFxcIm1kbC1ncmlkXFxcIj4gICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZGwtY2VsbCBtZGwtY2VsbC0tNC1jb2xcXFwiIGRhdGEtYXV0b21hdGlvbi1pZD1cXFwiaGVhZGVyLWFzc2lnbmVlXFxcIj4gICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImFjdGl2aXRpLXRhc2staGVhZGVyX19sYWJlbFxcXCI+e3sgJ1RBU0tfREVUQUlMUy5MQUJFTFMuQVNTSUdORUUnIHwgdHJhbnNsYXRlIH19OiA8L3NwYW4+ICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0aS10YXNrLWhlYWRlcl9fdmFsdWVcXFwiICpuZ0lmPVxcXCJoYXNBc3NpZ25lZSgpXFxcIj57eyB0YXNrRGV0YWlscy5hc3NpZ25lZS5maXJzdE5hbWUgfX0ge3sgdGFza0RldGFpbHMuYXNzaWduZWUubGFzdE5hbWUgfX08L3NwYW4+ICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0aS10YXNrLWhlYWRlcl9fdmFsdWVcXFwiICpuZ0lmPVxcXCIhaGFzQXNzaWduZWUoKVxcXCI+e3sgJ1RBU0tfREVUQUlMUy5BU1NJR05FRS5OT05FJyB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj4gICAgICAgICA8L2Rpdj4gICAgICAgICA8ZGl2IGNsYXNzPVxcXCJtZGwtY2VsbCBtZGwtY2VsbC0tNC1jb2xcXFwiIGRhdGEtYXV0b21hdGlvbi1pZD1cXFwiaGVhZGVyLWR1ZS1kYXRlXFxcIj4gICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImFjdGl2aXRpLXRhc2staGVhZGVyX19sYWJlbFxcXCI+e3sgJ1RBU0tfREVUQUlMUy5MQUJFTFMuRFVFJyB8IHRyYW5zbGF0ZSB9fTogPC9zcGFuPiAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiYWN0aXZpdGktdGFzay1oZWFkZXJfX3ZhbHVlXFxcIiAqbmdJZj1cXFwidGFza0RldGFpbHM/LmR1ZURhdGVcXFwiPnt7IHRhc2tEZXRhaWxzLmR1ZURhdGUgfX08L3NwYW4+ICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0aS10YXNrLWhlYWRlcl9fdmFsdWVcXFwiICpuZ0lmPVxcXCIhdGFza0RldGFpbHM/LmR1ZURhdGVcXFwiPnt7ICdUQVNLX0RFVEFJTFMuRFVFLk5PTkUnIHx0cmFuc2xhdGUgfX08L3NwYW4+ICAgICAgICAgPC9kaXY+ICAgICAgICAgPGRpdiAqbmdJZj1cXFwiZm9ybU5hbWVcXFwiIGNsYXNzPVxcXCJtZGwtY2VsbCBtZGwtY2VsbC0tNC1jb2xcXFwiIGRhdGEtYXV0b21hdGlvbi1pZD1cXFwiaGVhZGVyLWZvcm0tbmFtZVxcXCI+ICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0aS10YXNrLWhlYWRlcl9fbGFiZWxcXFwiPnt7ICdUQVNLX0RFVEFJTFMuTEFCRUxTLkZPUk0nIHwgdHJhbnNsYXRlIH19OiA8L3NwYW4+ICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0aS10YXNrLWhlYWRlcl9fdmFsdWVcXFwiICpuZ0lmPVxcXCJmb3JtTmFtZVxcXCI+e3sgZm9ybU5hbWUgfX08L3NwYW4+ICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJhY3Rpdml0aS10YXNrLWhlYWRlcl9fdmFsdWVcXFwiICpuZ0lmPVxcXCIhZm9ybU5hbWVcXFwiPnt7ICdUQVNLX0RFVEFJTFMuRk9STS5OT05FJyB8IHRyYW5zbGF0ZSB9fTwvc3Bhbj4gICAgICAgICA8L2Rpdj4gICAgICAgICAgPGJ1dHRvbiAqbmdJZj1cXFwiIWlzQXNzaWduZWRUb01lKClcXFwiIGRhdGEtYXV0b21hdGlvbi1pZD1cXFwiaGVhZGVyLWNsYWltLWJ1dHRvblxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBpZD1cXFwiY2xhaW0tdGFza1xcXCIgICAgICAgICAgICAgICAgIChjbGljayk9XFxcImNsYWltVGFzayh0YXNrRGV0YWlscy5pZClcXFwiIGNsYXNzPVxcXCJtZGwtYnV0dG9uXFxcIj57eyAnVEFTS19ERVRBSUxTLkJVVFRPTi5DTEFJTScgfCB0cmFuc2xhdGUgfX0gICAgICAgICA8L2J1dHRvbj4gICAgICA8L2Rpdj4gPC9kaXY+XCIsXG4gICAgc3R5bGVzOiBbXCI6aG9zdCB7ICAgICB3aWR0aDogMTAwJTsgfSAgLmFjdGl2aXRpLXRhc2staGVhZGVyX19sYWJlbCB7ICAgICBmb250LXdlaWdodDogYm9sZDsgfSAgLmFjdGl2aXRpLXRhc2staGVhZGVyX192YWx1ZSB7ICAgICBjb2xvcjogcmdiKDY4LCAxMzgsIDI1NSk7IH0gIC5tYXRlcmlhbC1pY29ucyB7ICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cIl1cbn0pXG5leHBvcnQgY2xhc3MgQWN0aXZpdGlUYXNrSGVhZGVyIHtcblxuICAgIEBJbnB1dCgpXG4gICAgZm9ybU5hbWU6IHN0cmluZyA9IG51bGw7XG5cbiAgICBASW5wdXQoKVxuICAgIHRhc2tEZXRhaWxzOiBUYXNrRGV0YWlsc01vZGVsO1xuXG4gICAgQE91dHB1dCgpXG4gICAgY2xhaW06IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IEFsZnJlc2NvVHJhbnNsYXRpb25TZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgYWN0aXZpdGlUYXNrU2VydmljZTogQWN0aXZpdGlUYXNrTGlzdFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBsb2dTZXJ2aWNlOiBMb2dTZXJ2aWNlKSB7XG4gICAgICAgIGlmICh0cmFuc2xhdGVTZXJ2aWNlKSB7XG4gICAgICAgICAgICB0cmFuc2xhdGVTZXJ2aWNlLmFkZFRyYW5zbGF0aW9uRm9sZGVyKCduZzItYWN0aXZpdGktdGFza2xpc3QnLCAnbm9kZV9tb2R1bGVzL25nMi1hY3Rpdml0aS10YXNrbGlzdC9zcmMnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBoYXNBc3NpZ25lZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLnRhc2tEZXRhaWxzICYmIHRoaXMudGFza0RldGFpbHMuYXNzaWduZWUpID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cblxuICAgIGlzQXNzaWduZWRUb01lKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrRGV0YWlscy5hc3NpZ25lZSA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG5cbiAgICBjbGFpbVRhc2sodGFza0lkOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5hY3Rpdml0aVRhc2tTZXJ2aWNlLmNsYWltVGFzayh0YXNrSWQpLnN1YnNjcmliZShcbiAgICAgICAgICAgIChyZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nU2VydmljZS5pbmZvKCdUYXNrIGNsYWltZWQnKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNsYWltLmVtaXQodGFza0lkKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cbn1cbiJdfQ==
