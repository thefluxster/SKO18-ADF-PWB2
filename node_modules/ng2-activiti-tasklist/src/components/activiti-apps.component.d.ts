/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, EventEmitter } from '@angular/core';
import { AlfrescoTranslationService } from 'ng2-alfresco-core';
import { ActivitiTaskListService } from './../services/activiti-tasklist.service';
import { AppDefinitionRepresentationModel } from '../models/filter.model';
import { Observable } from 'rxjs/Observable';
export declare class ActivitiApps implements OnInit {
    private translateService;
    private activitiTaskList;
    static LAYOUT_LIST: string;
    static LAYOUT_GRID: string;
    static DEFAULT_TASKS_APP: string;
    static DEFAULT_TASKS_APP_NAME: string;
    static DEFAULT_TASKS_APP_THEME: string;
    static DEFAULT_TASKS_APP_ICON: string;
    static DEFAULT_TASKS_APP_MATERIAL_ICON: string;
    layoutType: string;
    appClick: EventEmitter<AppDefinitionRepresentationModel>;
    error: EventEmitter<any>;
    private appsObserver;
    apps$: Observable<AppDefinitionRepresentationModel>;
    currentApp: AppDefinitionRepresentationModel;
    appList: AppDefinitionRepresentationModel[];
    private iconsMDL;
    constructor(translateService: AlfrescoTranslationService, activitiTaskList: ActivitiTaskListService);
    ngOnInit(): void;
    private load();
    selectApp(app: AppDefinitionRepresentationModel): void;
    isSelected(appId: number): boolean;
    isValidType(): boolean;
    setDefaultLayoutType(): void;
    isList(): boolean;
    isGrid(): boolean;
    isEmpty(): boolean;
    getTheme(app: AppDefinitionRepresentationModel): string;
    getBackgroundIcon(app: AppDefinitionRepresentationModel): string;
}
