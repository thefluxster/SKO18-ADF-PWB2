/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, EventEmitter, TemplateRef, OnChanges, SimpleChanges, DebugElement } from '@angular/core';
import { AlfrescoTranslationService, LogService } from 'ng2-alfresco-core';
import { ActivitiTaskListService } from './../services/activiti-tasklist.service';
import { TaskDetailsModel } from '../models/task-details.model';
import { User } from '../models/user.model';
import { FormService, FormModel, FormOutcomeEvent } from 'ng2-activiti-form';
export declare class ActivitiTaskDetails implements OnInit, OnChanges {
    private translateService;
    private activitiForm;
    private activitiTaskList;
    private logService;
    activiticomments: any;
    activitichecklist: any;
    errorDialog: DebugElement;
    taskId: string;
    showNextTask: boolean;
    showFormTitle: boolean;
    showFormCompleteButton: boolean;
    showFormSaveButton: boolean;
    readOnlyForm: boolean;
    showFormRefreshButton: boolean;
    peopleIconImageUrl: string;
    formSaved: EventEmitter<FormModel>;
    formCompleted: EventEmitter<FormModel>;
    formLoaded: EventEmitter<FormModel>;
    taskCreated: EventEmitter<TaskDetailsModel>;
    onError: EventEmitter<any>;
    executeOutcome: EventEmitter<FormOutcomeEvent>;
    taskDetails: TaskDetailsModel;
    taskFormName: string;
    taskPeople: User[];
    noTaskDetailsTemplateComponent: TemplateRef<any>;
    constructor(translateService: AlfrescoTranslationService, activitiForm: FormService, activitiTaskList: ActivitiTaskListService, logService: LogService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private reset();
    hasFormKey(): boolean;
    isTaskActive(): boolean;
    private loadDetails(taskId);
    isAssignedToMe(): boolean;
    private loadNextTask(processInstanceId, processDefinitionId);
    onComplete(): void;
    onFormSaved(form: FormModel): void;
    onFormCompleted(form: FormModel): void;
    onFormLoaded(form: FormModel): void;
    onChecklistTaskCreated(task: TaskDetailsModel): void;
    onFormError(error: any): void;
    onFormExecuteOutcome(event: FormOutcomeEvent): void;
    closeErrorDialog(): void;
    onClaimTask(taskId: string): void;
}
