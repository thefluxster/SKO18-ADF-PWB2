/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var tag_service_1 = require("../services/tag.service");
var TagList = (function () {
    function TagList(tagService) {
        this.tagService = tagService;
        this.resultsEmitter = new core_1.EventEmitter();
    }
    TagList.prototype.ngOnInit = function (changes) {
        return this.refreshTagEcm();
    };
    TagList.prototype.refreshTagEcm = function () {
        var _this = this;
        this.tagService.getAllTheTags().subscribe(function (data) {
            _this.tagsEntries = data.list.entries;
            _this.resultsEmitter.emit(_this.tagsEntries);
        });
    };
    return TagList;
}());
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], TagList.prototype, "resultsEmitter", void 0);
TagList = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'alfresco-tag-list',
        template: "<div class=\"tag-container\">     <div id=\"table-cards-container\">         <ul class=\"tag-list-control mdl-list\">             <li class=\"mdl-list__item tag-element\" *ngFor=\"let currentEntry of tagsEntries; let idx = index\">                 <span id=\"tag_name_{{idx}}\"  class=\"mdl-list__item-primary-content\">{{currentEntry.entry.tag}}</span>             </li>         </ul>     </div> </div>"
    }),
    __metadata("design:paramtypes", [tag_service_1.TagService])
], TagList);
exports.TagList = TagList;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvdGFnLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBZ0U7QUFDaEUsdURBQXFEO0FBY3JELElBQWEsT0FBTztJQVdoQixpQkFBb0IsVUFBc0I7UUFBdEIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQU4xQyxtQkFBYyxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDO0lBT3BDLENBQUM7SUFFRCwwQkFBUSxHQUFSLFVBQVMsT0FBTztRQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELCtCQUFhLEdBQWI7UUFBQSxpQkFLQztRQUpHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsU0FBUyxDQUFDLFVBQUMsSUFBSTtZQUMzQyxLQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ3JDLEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUMvQyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDTCxjQUFDO0FBQUQsQ0F4QkEsQUF3QkMsSUFBQTtBQW5CRztJQURDLGFBQU0sRUFBRTs7K0NBQzJCO0FBTDNCLE9BQU87SUFMbkIsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNuQixRQUFRLEVBQUUsbUJBQW1CO1FBQzdCLFFBQVEsRUFBRSxxWkFBcVo7S0FDbGEsQ0FBQztxQ0FZa0Msd0JBQVU7R0FYakMsT0FBTyxDQXdCbkI7QUF4QlksMEJBQU8iLCJmaWxlIjoiY29tcG9uZW50cy90YWctbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYWdTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvdGFnLnNlcnZpY2UnO1xuXG4vKipcbiAqXG4gKiBUaGlzIGNvbXBvbmVudCBwcm92aWRlIGEgbGlzdCBvZiBhbGwgdGhlIHRhZyBpbnNpZGUgdGhlIEVDTVxuICpcbiAqIEByZXR1cm5zIHtUYWdMaXN0fSAuXG4gKi9cblxuQENvbXBvbmVudCh7XG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICBzZWxlY3RvcjogJ2FsZnJlc2NvLXRhZy1saXN0JyxcbiAgICB0ZW1wbGF0ZTogXCI8ZGl2IGNsYXNzPVxcXCJ0YWctY29udGFpbmVyXFxcIj4gICAgIDxkaXYgaWQ9XFxcInRhYmxlLWNhcmRzLWNvbnRhaW5lclxcXCI+ICAgICAgICAgPHVsIGNsYXNzPVxcXCJ0YWctbGlzdC1jb250cm9sIG1kbC1saXN0XFxcIj4gICAgICAgICAgICAgPGxpIGNsYXNzPVxcXCJtZGwtbGlzdF9faXRlbSB0YWctZWxlbWVudFxcXCIgKm5nRm9yPVxcXCJsZXQgY3VycmVudEVudHJ5IG9mIHRhZ3NFbnRyaWVzOyBsZXQgaWR4ID0gaW5kZXhcXFwiPiAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9XFxcInRhZ19uYW1lX3t7aWR4fX1cXFwiICBjbGFzcz1cXFwibWRsLWxpc3RfX2l0ZW0tcHJpbWFyeS1jb250ZW50XFxcIj57e2N1cnJlbnRFbnRyeS5lbnRyeS50YWd9fTwvc3Bhbj4gICAgICAgICAgICAgPC9saT4gICAgICAgICA8L3VsPiAgICAgPC9kaXY+IDwvZGl2PlwiXG59KVxuZXhwb3J0IGNsYXNzIFRhZ0xpc3Qge1xuXG4gICAgdGFnc0VudHJpZXM6IGFueTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHJlc3VsdHNFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0b3JcbiAgICAgKiBAcGFyYW0gYXV0aFNlcnZpY2VcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRhZ1NlcnZpY2U6IFRhZ1NlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBuZ09uSW5pdChjaGFuZ2VzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZnJlc2hUYWdFY20oKTtcbiAgICB9XG5cbiAgICByZWZyZXNoVGFnRWNtKCkge1xuICAgICAgICB0aGlzLnRhZ1NlcnZpY2UuZ2V0QWxsVGhlVGFncygpLnN1YnNjcmliZSgoZGF0YSkgPT4ge1xuICAgICAgICAgICAgdGhpcy50YWdzRW50cmllcyA9IGRhdGEubGlzdC5lbnRyaWVzO1xuICAgICAgICAgICAgdGhpcy5yZXN1bHRzRW1pdHRlci5lbWl0KHRoaXMudGFnc0VudHJpZXMpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=
