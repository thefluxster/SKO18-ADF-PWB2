!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&"undefined"!=typeof require.resolve&&"undefined"!=typeof process&&process.platform&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], ["3","3d","4","f"], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
!function(e){function n(e,n){e=e.replace(l,"");var r=e.match(u),t=(r[1].split(",")[n]||"require").replace(s,""),i=p[t]||(p[t]=new RegExp(a+t+f,"g"));i.lastIndex=0;for(var o,c=[];o=i.exec(e);)c.push(o[2]||o[3]);return c}function r(e,n,t,o){if("object"==typeof e&&!(e instanceof Array))return r.apply(null,Array.prototype.splice.call(arguments,1,arguments.length-1));if("string"==typeof e&&"function"==typeof n&&(e=[e]),!(e instanceof Array)){if("string"==typeof e){var l=i.get(e);return l.__useDefault?l["default"]:l}throw new TypeError("Invalid require")}for(var a=[],f=0;f<e.length;f++)a.push(i["import"](e[f],o));Promise.all(a).then(function(e){n&&n.apply(null,e)},t)}function t(t,l,a){"string"!=typeof t&&(a=l,l=t,t=null),l instanceof Array||(a=l,l=["require","exports","module"].splice(0,a.length)),"function"!=typeof a&&(a=function(e){return function(){return e}}(a)),void 0===l[l.length-1]&&l.pop();var f,u,s;-1!=(f=o.call(l,"require"))&&(l.splice(f,1),t||(l=l.concat(n(a.toString(),f)))),-1!=(u=o.call(l,"exports"))&&l.splice(u,1),-1!=(s=o.call(l,"module"))&&l.splice(s,1);var p={name:t,deps:l,execute:function(n,t,o){for(var p=[],c=0;c<l.length;c++)p.push(n(l[c]));o.uri=o.id,o.config=function(){},-1!=s&&p.splice(s,0,o),-1!=u&&p.splice(u,0,t),-1!=f&&p.splice(f,0,function(e,t,l){return"string"==typeof e&&"function"!=typeof t?n(e):r.call(i,e,t,l,o.id)});var d=a.apply(-1==u?e:t,p);return"undefined"==typeof d&&o&&(d=o.exports),"undefined"!=typeof d?d:void 0}};if(t)c.anonDefine||c.isBundle?c.anonDefine&&c.anonDefine.name&&(c.anonDefine=null):c.anonDefine=p,c.isBundle=!0,i.registerDynamic(p.name,p.deps,!1,p.execute);else{if(c.anonDefine&&!c.anonDefine.name)throw new Error("Multiple anonymous defines in module "+t);c.anonDefine=p}}var i=$__System,o=Array.prototype.indexOf||function(e){for(var n=0,r=this.length;r>n;n++)if(this[n]===e)return n;return-1},l=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,a="(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",f="\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",u=/\(([^\)]*)\)/,s=/^\s+|\s+$/g,p={};t.amd={};var c={isBundle:!1,anonDefine:null};i.amdDefine=t,i.amdRequire=r}("undefined"!=typeof self?self:global);
$__System.registerDynamic("2", ["3", "4", "5", "6", "7"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var widget_visibility_service_1 = $__require("5");
    var form_rendering_service_1 = $__require("6");
    var index_1 = $__require("7");
    var FormFieldComponent = function () {
        function FormFieldComponent(formRenderingService, componentFactoryResolver, visibilityService, compiler) {
            this.formRenderingService = formRenderingService;
            this.componentFactoryResolver = componentFactoryResolver;
            this.visibilityService = visibilityService;
            this.compiler = compiler;
            this.field = null;
        }
        FormFieldComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.field) {
                var customTemplate = this.field.form.customFieldTemplates[this.field.type];
                if (customTemplate && this.hasController(this.field.type)) {
                    var factory = this.getComponentFactorySync(this.field.type, customTemplate);
                    this.componentRef = this.container.createComponent(factory);
                    var instance = this.componentRef.instance;
                    if (instance) {
                        instance.field = this.field;
                    }
                } else {
                    var componentType = this.formRenderingService.resolveComponentType(this.field);
                    if (componentType) {
                        var factory = this.componentFactoryResolver.resolveComponentFactory(componentType);
                        this.componentRef = this.container.createComponent(factory);
                        var instance = this.componentRef.instance;
                        instance.field = this.field;
                        instance.fieldChanged.subscribe(function (field) {
                            if (field && field.form) {
                                _this.visibilityService.refreshVisibility(field.form);
                            }
                        });
                    }
                }
            }
        };
        FormFieldComponent.prototype.ngOnDestroy = function () {
            if (this.componentRef) {
                this.componentRef.destroy();
                this.componentRef = null;
            }
        };
        FormFieldComponent.prototype.hasController = function (type) {
            return adf && adf.components && adf.components[type];
        };
        FormFieldComponent.prototype.getComponentFactorySync = function (type, template) {
            var componentInfo = adf.components[type];
            if (componentInfo.factory) {
                return componentInfo.factory;
            }
            var metadata = {
                selector: "runtime-component-" + type,
                template: template
            };
            var factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);
            componentInfo.factory = factory;
            return factory;
        };
        FormFieldComponent.prototype.createComponentFactorySync = function (compiler, metadata, componentClass) {
            var cmpClass = componentClass || function () {
                function RuntimeComponent() {}
                return RuntimeComponent;
            }();
            var decoratedCmp = core_1.Component(metadata)(cmpClass);
            var RuntimeComponentModule = function () {
                function RuntimeComponentModule() {}
                return RuntimeComponentModule;
            }();
            RuntimeComponentModule = __decorate([core_1.NgModule({ imports: [ng2_alfresco_core_1.CoreModule], declarations: [decoratedCmp] })], RuntimeComponentModule);
            var module = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);
            return module.componentFactories.find(function (x) {
                return x.componentType === decoratedCmp;
            });
        };
        return FormFieldComponent;
    }();
    __decorate([core_1.ViewChild('container', { read: core_1.ViewContainerRef }), __metadata("design:type", core_1.ViewContainerRef)], FormFieldComponent.prototype, "container", void 0);
    __decorate([core_1.Input(), __metadata("design:type", index_1.FormFieldModel)], FormFieldComponent.prototype, "field", void 0);
    FormFieldComponent = __decorate([core_1.Component({
        selector: 'form-field',
        template: "\n        <div [hidden]=\"!field?.isVisible\">\n            <div #container></div>\n        </div>\n    "
    }), __metadata("design:paramtypes", [form_rendering_service_1.FormRenderingService, core_1.ComponentFactoryResolver, widget_visibility_service_1.WidgetVisibilityService, core_1.Compiler])], FormFieldComponent);
    exports.FormFieldComponent = FormFieldComponent;
});
$__System.registerDynamic("8", ["3", "4", "9", "a", "b", "7", "c", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var ecm_model_service_1 = $__require("9");
    var form_service_1 = $__require("a");
    var node_service_1 = $__require("b");
    var index_1 = $__require("7");
    var index_2 = $__require("c");
    var widget_visibility_service_1 = $__require("5");
    var ActivitiForm = ActivitiForm_1 = function () {
        function ActivitiForm(formService, visibilityService, ecmModelService, nodeService, logService) {
            this.formService = formService;
            this.visibilityService = visibilityService;
            this.ecmModelService = ecmModelService;
            this.nodeService = nodeService;
            this.logService = logService;
            this.saveMetadata = false;
            this.showTitle = true;
            this.showCompleteButton = true;
            this.showSaveButton = true;
            this.showDebugButton = true;
            this.readOnly = false;
            this.showRefreshButton = true;
            this.showValidationIcon = true;
            this.formSaved = new core_1.EventEmitter();
            this.formCompleted = new core_1.EventEmitter();
            this.formLoaded = new core_1.EventEmitter();
            this.executeOutcome = new core_1.EventEmitter();
            this.onError = new core_1.EventEmitter();
            this.debugMode = false;
        }
        ActivitiForm.prototype.hasForm = function () {
            return this.form ? true : false;
        };
        ActivitiForm.prototype.isTitleEnabled = function () {
            if (this.showTitle) {
                if (this.form && this.form.taskName) {
                    return true;
                }
            }
            return false;
        };
        ActivitiForm.prototype.isOutcomeButtonEnabled = function (outcome) {
            if (this.form.readOnly) {
                return false;
            }
            if (outcome) {
                if (outcome.name === index_1.FormOutcomeModel.SAVE_ACTION) {
                    return true;
                }
                return this.form.isValid;
            }
            return false;
        };
        ActivitiForm.prototype.isOutcomeButtonVisible = function (outcome, isFormReadOnly) {
            if (outcome && outcome.name) {
                if (outcome.name === index_1.FormOutcomeModel.COMPLETE_ACTION) {
                    return this.showCompleteButton;
                }
                if (isFormReadOnly) {
                    return outcome.isSelected;
                }
                if (outcome.name === index_1.FormOutcomeModel.SAVE_ACTION) {
                    return this.showSaveButton;
                }
                if (outcome.name === index_1.FormOutcomeModel.START_PROCESS_ACTION) {
                    return false;
                }
                return true;
            }
            return false;
        };
        ActivitiForm.prototype.ngOnInit = function () {
            if (this.nodeId) {
                this.loadFormForEcmNode();
            } else {
                this.loadForm();
            }
        };
        ActivitiForm.prototype.ngAfterViewChecked = function () {
            this.setupMaterialComponents();
        };
        ActivitiForm.prototype.ngOnChanges = function (changes) {
            var taskId = changes['taskId'];
            if (taskId && taskId.currentValue) {
                this.getFormByTaskId(taskId.currentValue);
                return;
            }
            var formId = changes['formId'];
            if (formId && formId.currentValue) {
                this.getFormDefinitionByFormId(formId.currentValue);
                return;
            }
            var formName = changes['formName'];
            if (formName && formName.currentValue) {
                this.getFormDefinitionByFormName(formName.currentValue);
                return;
            }
        };
        ActivitiForm.prototype.onOutcomeClicked = function (outcome) {
            if (!this.readOnly && outcome && this.form) {
                var args = new index_1.FormOutcomeEvent(outcome);
                this.executeOutcome.emit(args);
                if (args.defaultPrevented) {
                    return false;
                }
                if (outcome.isSystem) {
                    if (outcome.id === ActivitiForm_1.SAVE_OUTCOME_ID) {
                        this.saveTaskForm();
                        return true;
                    }
                    if (outcome.id === ActivitiForm_1.COMPLETE_OUTCOME_ID) {
                        this.completeTaskForm();
                        return true;
                    }
                    if (outcome.id === ActivitiForm_1.START_PROCESS_OUTCOME_ID) {
                        this.completeTaskForm();
                        return true;
                    }
                    if (outcome.id === ActivitiForm_1.CUSTOM_OUTCOME_ID) {
                        this.onTaskSaved(this.form);
                        this.storeFormAsMetadata();
                        return true;
                    }
                } else {
                    if (outcome.name) {
                        this.onTaskSaved(this.form);
                        this.completeTaskForm(outcome.name);
                        return true;
                    }
                }
            }
            return false;
        };
        ActivitiForm.prototype.onRefreshClicked = function () {
            this.loadForm();
        };
        ActivitiForm.prototype.loadForm = function () {
            if (this.taskId) {
                this.getFormByTaskId(this.taskId);
                return;
            }
            if (this.formId) {
                this.getFormDefinitionByFormId(this.formId);
                return;
            }
            if (this.formName) {
                this.getFormDefinitionByFormName(this.formName);
                return;
            }
        };
        ActivitiForm.prototype.loadFormPorcessVariable = function (taskId) {
            var _this = this;
            this.formService.getTask(taskId).subscribe(function (task) {
                if (_this.isAProcessTask(task)) {
                    _this.visibilityService.getTaskProcessVariable(taskId).subscribe();
                }
            }, function (error) {
                _this.handleError(error);
            });
        };
        ActivitiForm.prototype.isAProcessTask = function (taskRepresentation) {
            return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';
        };
        ActivitiForm.prototype.setupMaterialComponents = function () {
            if (componentHandler) {
                componentHandler.upgradeAllRegistered();
                return true;
            }
            return false;
        };
        ActivitiForm.prototype.getFormByTaskId = function (taskId) {
            var _this = this;
            this.loadFormPorcessVariable(this.taskId);
            var data = this.data;
            this.formService.getTaskForm(taskId).subscribe(function (form) {
                _this.form = new index_1.FormModel(form, data, _this.readOnly, _this.formService);
                _this.onFormLoaded(_this.form);
            }, function (error) {
                _this.handleError(error);
            });
        };
        ActivitiForm.prototype.getFormDefinitionByFormId = function (formId) {
            var _this = this;
            this.formService.getFormDefinitionById(formId).subscribe(function (form) {
                _this.formName = form.name;
                _this.form = _this.parseForm(form);
                _this.onFormLoaded(_this.form);
            }, function (error) {
                _this.handleError(error);
            });
        };
        ActivitiForm.prototype.getFormDefinitionByFormName = function (formName) {
            var _this = this;
            this.formService.getFormDefinitionByName(formName).subscribe(function (id) {
                _this.formService.getFormDefinitionById(id).subscribe(function (form) {
                    _this.form = _this.parseForm(form);
                    _this.onFormLoaded(_this.form);
                }, function (error) {
                    _this.handleError(error);
                });
            }, function (error) {
                _this.handleError(error);
            });
        };
        ActivitiForm.prototype.saveTaskForm = function () {
            var _this = this;
            if (this.form && this.form.taskId) {
                this.formService.saveTaskForm(this.form.taskId, this.form.values).subscribe(function () {
                    _this.onTaskSaved(_this.form);
                    _this.storeFormAsMetadata();
                }, function (error) {
                    return _this.onTaskSavedError(_this.form, error);
                });
            }
        };
        ActivitiForm.prototype.completeTaskForm = function (outcome) {
            var _this = this;
            if (this.form && this.form.taskId) {
                this.formService.completeTaskForm(this.form.taskId, this.form.values, outcome).subscribe(function () {
                    _this.onTaskCompleted(_this.form);
                    _this.storeFormAsMetadata();
                }, function (error) {
                    return _this.onTaskCompletedError(_this.form, error);
                });
            }
        };
        ActivitiForm.prototype.handleError = function (err) {
            this.logService.error(err);
            this.onError.emit(err);
        };
        ActivitiForm.prototype.parseForm = function (json) {
            if (json) {
                var form = new index_1.FormModel(json, this.data, this.readOnly, this.formService);
                if (!json.fields) {
                    form.outcomes = this.getFormDefinitionOutcomes(form);
                }
                return form;
            }
            return null;
        };
        ActivitiForm.prototype.getFormDefinitionOutcomes = function (form) {
            return [new index_1.FormOutcomeModel(form, { id: '$custom', name: index_1.FormOutcomeModel.SAVE_ACTION, isSystem: true })];
        };
        ActivitiForm.prototype.checkVisibility = function (field) {
            if (field && field.form) {
                this.visibilityService.refreshVisibility(field.form);
            }
        };
        ActivitiForm.prototype.loadFormForEcmNode = function () {
            var _this = this;
            this.nodeService.getNodeMetadata(this.nodeId).subscribe(function (data) {
                _this.data = data.metadata;
                _this.loadFormFromActiviti(data.nodeType);
            }, this.handleError);
        };
        ActivitiForm.prototype.loadFormFromActiviti = function (nodeType) {
            var _this = this;
            this.formService.searchFrom(nodeType).subscribe(function (form) {
                if (!form) {
                    _this.formService.createFormFromANode(nodeType).subscribe(function (formMetadata) {
                        _this.loadFormFromFormId(formMetadata.id);
                    });
                } else {
                    _this.loadFormFromFormId(form.id);
                }
            }, function (error) {
                _this.handleError(error);
            });
        };
        ActivitiForm.prototype.loadFormFromFormId = function (formId) {
            this.formId = formId;
            this.loadForm();
        };
        ActivitiForm.prototype.storeFormAsMetadata = function () {
            var _this = this;
            if (this.saveMetadata) {
                this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe(function (type) {
                    _this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, ecm_model_service_1.EcmModelService.MODEL_NAMESPACE, _this.form.values, _this.path, _this.nameNode);
                }, function (error) {
                    _this.handleError(error);
                });
            }
        };
        ActivitiForm.prototype.onFormLoaded = function (form) {
            this.formLoaded.emit(form);
            this.formService.formLoaded.next(new index_2.FormEvent(form));
        };
        ActivitiForm.prototype.onTaskSaved = function (form) {
            this.formSaved.emit(form);
            this.formService.taskSaved.next(new index_2.FormEvent(form));
        };
        ActivitiForm.prototype.onTaskSavedError = function (form, error) {
            this.handleError(error);
            this.formService.taskSavedError.next(new index_2.FormErrorEvent(form, error));
        };
        ActivitiForm.prototype.onTaskCompleted = function (form) {
            this.formCompleted.emit(form);
            this.formService.taskCompleted.next(new index_2.FormEvent(form));
        };
        ActivitiForm.prototype.onTaskCompletedError = function (form, error) {
            this.handleError(error);
            this.formService.taskCompletedError.next(new index_2.FormErrorEvent(form, error));
        };
        return ActivitiForm;
    }();
    ActivitiForm.SAVE_OUTCOME_ID = '$save';
    ActivitiForm.COMPLETE_OUTCOME_ID = '$complete';
    ActivitiForm.START_PROCESS_OUTCOME_ID = '$startProcess';
    ActivitiForm.CUSTOM_OUTCOME_ID = '$custom';
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiForm.prototype, "taskId", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiForm.prototype, "nodeId", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiForm.prototype, "formId", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiForm.prototype, "formName", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "saveMetadata", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], ActivitiForm.prototype, "data", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiForm.prototype, "path", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiForm.prototype, "nameNode", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "showTitle", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "showCompleteButton", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "showSaveButton", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "showDebugButton", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "readOnly", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "showRefreshButton", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiForm.prototype, "showValidationIcon", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], ActivitiForm.prototype, "formSaved", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], ActivitiForm.prototype, "formCompleted", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], ActivitiForm.prototype, "formLoaded", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], ActivitiForm.prototype, "executeOutcome", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], ActivitiForm.prototype, "onError", void 0);
    ActivitiForm = ActivitiForm_1 = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'activiti-form',
        template: "<div>     <div *ngIf=\"!hasForm()\">         <h3 style=\"text-align: center\">Please select a Task</h3>     </div>     <div *ngIf=\"hasForm()\">         <div class=\"mdl-card mdl-shadow--2dp activiti-form-container\">             <div class=\"mdl-card__title\">                 <i *ngIf=\"showValidationIcon\" class=\"material-icons\">{{ form.isValid ? 'event_available' : 'event_busy' }}</i>                 <h2 *ngIf=\"isTitleEnabled()\" class=\"mdl-card__title-text\">{{form.taskName}}</h2>             </div>             <div class=\"mdl-card__media\">                 <div *ngIf=\"form.hasTabs()\">                     <tabs-widget [tabs]=\"form.tabs\" (formTabChanged)=\"checkVisibility($event);\"></tabs-widget>                 </div>                  <div *ngIf=\"!form.hasTabs() && form.hasFields()\">                     <div *ngFor=\"let field of form.fields\">                         <form-field [field]=\"field.field\"></form-field>                     </div>                 </div>             </div>             <div *ngIf=\"form.hasOutcomes()\" class=\"mdl-card__actions mdl-card--border\">                 <button *ngFor=\"let outcome of form.outcomes\"                         alfresco-mdl-button                         [disabled]=\"!isOutcomeButtonEnabled(outcome)\"                         [class.mdl-button--colored]=\"!outcome.isSystem\"                         [class.activiti-form-hide-button]=\"!isOutcomeButtonVisible(outcome, form.readOnly)\"                         (click)=\"onOutcomeClicked(outcome, $event)\">                     {{outcome.name}}                 </button>             </div>             <div  *ngIf=\"showRefreshButton\" class=\"mdl-card__menu\" >                 <button (click)=\"onRefreshClicked()\"                         class=\"mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-effect\">                     <i class=\"material-icons\">refresh</i>                 </button>             </div>         </div>     </div> </div> <!-- For debugging and data visualisation purposes, will be removed during future revisions --> <div  *ngIf=\"showDebugButton\" class=\"activiti-form-debug-container\">      <div style=\"float: right\">         <label class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\" for=\"switch-1\" [class.is-checked]=\"debugMode\">             <input type=\"checkbox\" id=\"switch-1\" class=\"mdl-switch__input\" [(ngModel)]=\"debugMode\">             <span class=\"mdl-switch__label\"></span>             <span class=\"debug-toggle-text\">Debug mode</span>         </label>     </div>      <div *ngIf=\"debugMode && hasForm()\">         <h4>Values</h4>         <pre>{{form.values | json}}</pre>          <h4>Form</h4>         <pre>{{form.json | json}}</pre>     </div> </div>",
        styles: [".activiti-form-container {     width: 100%;     min-height: 100px;     overflow: visible; }  .activiti-form-container > .mdl-card__media {     background-color: #fff; }  .activiti-form-debug-container {     padding: 10px; }  .activiti-form-debug-container .debug-toggle-text {     padding-left: 15px;     cursor: pointer; }  .activiti-form-debug-container .debug-toggle-text:hover {     font-weight: bold; }  .activiti-form-hide-button {     display: none; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, widget_visibility_service_1.WidgetVisibilityService, ecm_model_service_1.EcmModelService, node_service_1.NodeService, ng2_alfresco_core_1.LogService])], ActivitiForm);
    exports.ActivitiForm = ActivitiForm;
    var ActivitiForm_1;
});
$__System.registerDynamic("d", ["3", "4", "8", "a", "5", "7"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var activiti_form_component_1 = $__require("8");
    var form_service_1 = $__require("a");
    var widget_visibility_service_1 = $__require("5");
    var index_1 = $__require("7");
    var ActivitiStartForm = function (_super) {
        __extends(ActivitiStartForm, _super);
        function ActivitiStartForm(translate, formService, visibilityService, logService) {
            var _this = _super.call(this, formService, visibilityService, null, null, logService) || this;
            _this.translate = translate;
            _this.showOutcomeButtons = true;
            _this.showRefreshButton = true;
            _this.readOnlyForm = false;
            _this.outcomeClick = new core_1.EventEmitter();
            _this.outcomesContainer = null;
            if (_this.translate) {
                _this.translate.addTranslationFolder('ng2-activiti-form', 'node_modules/ng2-activiti-form/src');
            }
            _this.showTitle = false;
            return _this;
        }
        ActivitiStartForm.prototype.ngOnChanges = function (changes) {
            var processDefinitionId = changes['processDefinitionId'];
            if (processDefinitionId && processDefinitionId.currentValue) {
                this.visibilityService.cleanProcessVariable();
                this.getStartFormDefinition(processDefinitionId.currentValue);
                return;
            }
            var processId = changes['processId'];
            if (processId && processId.currentValue) {
                this.visibilityService.cleanProcessVariable();
                this.loadStartForm(processId.currentValue);
                return;
            }
        };
        ActivitiStartForm.prototype.loadStartForm = function (processId) {
            var _this = this;
            this.formService.getStartFormInstance(processId).subscribe(function (form) {
                _this.formName = form.name;
                form.processDefinitionId = _this.processDefinitionId;
                _this.form = _this.parseForm(form);
                _this.form.readOnly = _this.readOnlyForm;
                _this.formLoaded.emit(_this.form);
            }, function (error) {
                return _this.handleError(error);
            });
        };
        ActivitiStartForm.prototype.getStartFormDefinition = function (processId) {
            var _this = this;
            this.formService.getStartFormDefinition(processId).subscribe(function (form) {
                _this.formName = form.processDefinitionName;
                _this.form = _this.parseForm(form);
                _this.form.readOnly = _this.readOnlyForm;
                _this.formLoaded.emit(_this.form);
            }, function (error) {
                return _this.handleError(error);
            });
        };
        ActivitiStartForm.prototype.isOutcomeButtonVisible = function (outcome, isFormReadOnly) {
            if (outcome && outcome.isSystem && (outcome.name === index_1.FormOutcomeModel.SAVE_ACTION || outcome.name === index_1.FormOutcomeModel.COMPLETE_ACTION)) {
                return false;
            } else if (outcome && outcome.name === index_1.FormOutcomeModel.START_PROCESS_ACTION) {
                return true;
            }
            return _super.prototype.isOutcomeButtonVisible.call(this, outcome, isFormReadOnly);
        };
        ActivitiStartForm.prototype.saveTaskForm = function () {};
        ActivitiStartForm.prototype.onRefreshClicked = function () {
            if (this.processDefinitionId) {
                this.visibilityService.cleanProcessVariable();
                this.getStartFormDefinition(this.processDefinitionId);
            } else if (this.processId) {
                this.visibilityService.cleanProcessVariable();
                this.loadStartForm(this.processId);
            }
        };
        ActivitiStartForm.prototype.completeTaskForm = function (outcome) {
            this.outcomeClick.emit(outcome);
        };
        return ActivitiStartForm;
    }(activiti_form_component_1.ActivitiForm);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiStartForm.prototype, "processDefinitionId", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], ActivitiStartForm.prototype, "processId", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiStartForm.prototype, "showOutcomeButtons", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiStartForm.prototype, "showRefreshButton", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], ActivitiStartForm.prototype, "readOnlyForm", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], ActivitiStartForm.prototype, "outcomeClick", void 0);
    __decorate([core_1.ViewChild('outcomesContainer', {}), __metadata("design:type", core_1.ElementRef)], ActivitiStartForm.prototype, "outcomesContainer", void 0);
    ActivitiStartForm = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'activiti-start-form',
        template: "<div>     <div *ngIf=\"hasForm()\">         <div class=\"mdl-card mdl-shadow--2dp activiti-form-container\">             <div class=\"mdl-card__title\">                 <i class=\"material-icons\">{{ form.isValid ? 'event_available' : 'event_busy' }}</i>                 <h2 *ngIf=\"isTitleEnabled()\" class=\"mdl-card__title-text\">{{form.taskName}}</h2>             </div>             <div class=\"mdl-card__media\">                 <div *ngIf=\"form.hasTabs()\">                     <tabs-widget [tabs]=\"form.tabs\" (formTabChanged)=\"checkVisibility($event);\"></tabs-widget>                 </div>                  <div *ngIf=\"!form.hasTabs() && form.hasFields()\">                     <div *ngFor=\"let field of form.fields\">                         <form-field [field]=\"field.field\"></form-field>                     </div>                 </div>             </div>             <div *ngIf=\"showOutcomeButtons && form.hasOutcomes()\" class=\"mdl-card__actions mdl-card--border\" #outcomesContainer>                 <button *ngFor=\"let outcome of form.outcomes\"                         alfresco-mdl-button                         [disabled]=\"!isOutcomeButtonEnabled(outcome)\"                         [class.mdl-button--colored]=\"!outcome.isSystem\"                         [class.activiti-form-hide-button]=\"!isOutcomeButtonVisible(outcome, form.readOnly)\"                         (click)=\"onOutcomeClicked(outcome, $event)\">                     {{outcome.name}}                 </button>             </div>             <div  *ngIf=\"showRefreshButton\" class=\"mdl-card__menu\" >                 <button (click)=\"onRefreshClicked()\"                         class=\"mdl-button mdl-button--icon mdl-js-button mdl-js-ripple-effect\">                     <i class=\"material-icons\">refresh</i>                 </button>             </div>         </div>     </div> </div>",
        styles: [".activiti-form-container {     width: 100%;     min-height: 100px;     overflow: visible; }  .activiti-form-container > .mdl-card__media {     background-color: #fff; }  .activiti-form-debug-container {     padding: 10px; }  .activiti-form-debug-container .debug-toggle-text {     padding-left: 15px;     cursor: pointer; }  .activiti-form-debug-container .debug-toggle-text:hover {     font-weight: bold; }  .activiti-form-hide-button {     display: none; }"]
    }), __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoTranslationService, form_service_1.FormService, widget_visibility_service_1.WidgetVisibilityService, ng2_alfresco_core_1.LogService])], ActivitiStartForm);
    exports.ActivitiStartForm = ActivitiStartForm;
});
$__System.registerDynamic("e", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var NodeMetadata = function () {
        function NodeMetadata(metadata, nodeType) {
            this.metadata = metadata;
            this.nodeType = nodeType;
        }
        return NodeMetadata;
    }();
    exports.NodeMetadata = NodeMetadata;
});
$__System.registerDynamic("b", ["3", "4", "f", "e"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var Rx_1 = $__require("f");
    var node_metadata_model_1 = $__require("e");
    var NodeService = function () {
        function NodeService(apiService) {
            this.apiService = apiService;
        }
        NodeService.prototype.getNodeMetadata = function (nodeId) {
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().nodes.getNodeInfo(nodeId)).map(this.cleanMetadataFromSemicolon);
        };
        NodeService.prototype.createNodeMetadata = function (nodeType, nameSpace, data, path, name) {
            var properties = {};
            for (var key in data) {
                if (data[key]) {
                    properties[nameSpace + ':' + key] = data[key];
                }
            }
            return this.createNode(name || this.generateUuid(), nodeType, properties, path);
        };
        NodeService.prototype.createNode = function (name, nodeType, properties, path) {
            var body = {
                name: name,
                nodeType: nodeType,
                properties: properties,
                relativePath: path
            };
            var apiService = this.apiService.getInstance();
            return Rx_1.Observable.fromPromise(apiService.nodes.addNode('-root-', body, {}));
        };
        NodeService.prototype.generateUuid = function () {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                var r = Math.random() * 16 | 0,
                    v = c === 'x' ? r : r & 0x3 | 0x8;
                return v.toString(16);
            });
        };
        NodeService.prototype.cleanMetadataFromSemicolon = function (data) {
            var metadata = {};
            if (data && data.properties) {
                for (var key in data.properties) {
                    if (key) {
                        if (key.indexOf(':') !== -1) {
                            metadata[key.split(':')[1]] = data.properties[key];
                        } else {
                            metadata[key] = data.properties[key];
                        }
                    }
                }
            }
            return new node_metadata_model_1.NodeMetadata(metadata, data.nodeType);
        };
        return NodeService;
    }();
    NodeService = __decorate([core_1.Injectable(), __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoApiService])], NodeService);
    exports.NodeService = NodeService;
});
$__System.registerDynamic("6", ["3", "10"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var index_1 = $__require("10");
    var FormRenderingService = function () {
        function FormRenderingService() {
            this.types = {
                'text': DefaultTypeResolver.fromType(index_1.TextWidget),
                'integer': DefaultTypeResolver.fromType(index_1.NumberWidget),
                'multi-line-text': DefaultTypeResolver.fromType(index_1.MultilineTextWidget),
                'boolean': DefaultTypeResolver.fromType(index_1.CheckboxWidget),
                'dropdown': DefaultTypeResolver.fromType(index_1.DropdownWidget),
                'date': DefaultTypeResolver.fromType(index_1.DateWidget),
                'amount': DefaultTypeResolver.fromType(index_1.AmountWidget),
                'radio-buttons': DefaultTypeResolver.fromType(index_1.RadioButtonsWidget),
                'hyperlink': DefaultTypeResolver.fromType(index_1.HyperlinkWidget),
                'readonly': DefaultTypeResolver.fromType(index_1.DisplayValueWidget),
                'readonly-text': DefaultTypeResolver.fromType(index_1.DisplayTextWidget),
                'typeahead': DefaultTypeResolver.fromType(index_1.TypeaheadWidget),
                'people': DefaultTypeResolver.fromType(index_1.PeopleWidget),
                'functional-group': DefaultTypeResolver.fromType(index_1.FunctionalGroupWidget),
                'dynamic-table': DefaultTypeResolver.fromType(index_1.DynamicTableWidget),
                'container': DefaultTypeResolver.fromType(index_1.ContainerWidget),
                'group': DefaultTypeResolver.fromType(index_1.ContainerWidget)
            };
            this.types['upload'] = function (field) {
                if (field) {
                    var params = field.params;
                    if (params && params.link) {
                        return index_1.AttachWidget;
                    }
                    return index_1.UploadWidget;
                }
                return index_1.UnknownWidget;
            };
        }
        FormRenderingService.prototype.getComponentTypeResolver = function (fieldType, defaultValue) {
            if (defaultValue === void 0) {
                defaultValue = index_1.UnknownWidget;
            }
            if (fieldType) {
                return this.types[fieldType] || DefaultTypeResolver.fromType(defaultValue);
            }
            return DefaultTypeResolver.fromType(defaultValue);
        };
        FormRenderingService.prototype.setComponentTypeResolver = function (fieldType, resolver, override) {
            if (override === void 0) {
                override = false;
            }
            if (!fieldType) {
                throw new Error("fieldType is null or not defined");
            }
            if (!resolver) {
                throw new Error("resolver is null or not defined");
            }
            var existing = this.types[fieldType];
            if (existing && !override) {
                throw new Error("already mapped, use override option if you intend replacing existing mapping.");
            }
            this.types[fieldType] = resolver;
        };
        FormRenderingService.prototype.resolveComponentType = function (field, defaultValue) {
            if (defaultValue === void 0) {
                defaultValue = index_1.UnknownWidget;
            }
            if (field) {
                var resolver = this.getComponentTypeResolver(field.type, defaultValue);
                return resolver(field);
            }
            return defaultValue;
        };
        return FormRenderingService;
    }();
    FormRenderingService = __decorate([core_1.Injectable(), __metadata("design:paramtypes", [])], FormRenderingService);
    exports.FormRenderingService = FormRenderingService;
    var DefaultTypeResolver = function () {
        function DefaultTypeResolver() {}
        DefaultTypeResolver.fromType = function (type) {
            return function (field) {
                return type;
            };
        };
        return DefaultTypeResolver;
    }();
    exports.DefaultTypeResolver = DefaultTypeResolver;
});
$__System.registerDynamic("11", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var UnknownWidget = function (_super) {
        __extends(UnknownWidget, _super);
        function UnknownWidget() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return UnknownWidget;
    }(widget_component_1.WidgetComponent);
    UnknownWidget = __decorate([core_1.Component({
        selector: 'unknown-widget',
        template: "\n        <div>\n            <i class=\"material-icons\">error_outline</i>\n            <span style=\"color: red\">Unknown type: {{field.type}}</span>\n        </div>\n    "
    })], UnknownWidget);
    exports.UnknownWidget = UnknownWidget;
});
$__System.registerDynamic("13", ["3"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var TabsWidget = function () {
        function TabsWidget() {
            this.tabs = [];
            this.formTabChanged = new core_1.EventEmitter();
            this.visibleTabs = [];
        }
        TabsWidget.prototype.hasTabs = function () {
            return this.tabs && this.tabs.length > 0;
        };
        TabsWidget.prototype.ngAfterContentChecked = function () {
            this.filterVisibleTabs();
        };
        TabsWidget.prototype.ngAfterViewInit = function () {
            this.setupMaterialComponents();
        };
        TabsWidget.prototype.filterVisibleTabs = function () {
            this.visibleTabs = this.tabs.filter(function (tab) {
                return tab.isVisible;
            });
        };
        TabsWidget.prototype.setupMaterialComponents = function () {
            if (componentHandler) {
                componentHandler.upgradeAllRegistered();
                return true;
            }
            return false;
        };
        TabsWidget.prototype.tabChanged = function (field) {
            this.formTabChanged.emit(field);
        };
        return TabsWidget;
    }();
    __decorate([core_1.Input(), __metadata("design:type", Array)], TabsWidget.prototype, "tabs", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], TabsWidget.prototype, "formTabChanged", void 0);
    TabsWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'tabs-widget',
        template: "<div *ngIf=\"hasTabs()\" class=\"alfresco-tabs-widget\">     <div alfresco-mdl-tabs>         <div class=\"mdl-tabs__tab-bar\">             <a *ngFor=\"let tab of visibleTabs; let isFirst = first\"                id=\"title-{{tab.id}}\"                [href]=\"'#' + tab.id\"                class=\"mdl-tabs__tab\" [class.is-active]=\"isFirst\">                 {{tab.title}}             </a>         </div>         <div *ngFor=\"let tab of visibleTabs; let isFirst = first\"              class=\"mdl-tabs__panel\"              [class.is-active]=\"isFirst\"              [attr.id]=\"tab.id\">              <div *ngFor=\"let field of tab.fields\">                 <form-field [field]=\"field.field\"></form-field>              </div>         </div>     </div> </div>"
    })], TabsWidget);
    exports.TabsWidget = TabsWidget;
});
$__System.registerDynamic("14", ["15", "16"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var container_model_1 = $__require("15");
    var form_field_types_1 = $__require("16");
    var ContainerWidgetModel = function (_super) {
        __extends(ContainerWidgetModel, _super);
        function ContainerWidgetModel(field) {
            var _this = _super.call(this, field) || this;
            _this.columns = [];
            _this.isExpanded = true;
            if (_this.field) {
                _this.columns = _this.field.columns || [];
                _this.isExpanded = !_this.isCollapsedByDefault();
            }
            return _this;
        }
        ContainerWidgetModel.prototype.isGroup = function () {
            return this.type === form_field_types_1.FormFieldTypes.GROUP;
        };
        ContainerWidgetModel.prototype.isCollapsible = function () {
            var allowCollapse = false;
            if (this.isGroup() && this.field.params['allowCollapse']) {
                allowCollapse = this.field.params['allowCollapse'];
            }
            return allowCollapse;
        };
        ContainerWidgetModel.prototype.isCollapsedByDefault = function () {
            var collapseByDefault = false;
            if (this.isCollapsible() && this.field.params['collapseByDefault']) {
                collapseByDefault = this.field.params['collapseByDefault'];
            }
            return collapseByDefault;
        };
        return ContainerWidgetModel;
    }(container_model_1.ContainerModel);
    exports.ContainerWidgetModel = ContainerWidgetModel;
});
$__System.registerDynamic("17", ["3", "14", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var container_widget_model_1 = $__require("14");
    var widget_component_1 = $__require("12");
    var ContainerWidget = function (_super) {
        __extends(ContainerWidget, _super);
        function ContainerWidget() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ContainerWidget.prototype.onExpanderClicked = function () {
            if (this.content && this.content.isCollapsible()) {
                this.content.isExpanded = !this.content.isExpanded;
            }
        };
        ContainerWidget.prototype.ngOnInit = function () {
            if (this.field) {
                this.content = new container_widget_model_1.ContainerWidgetModel(this.field);
            }
        };
        ContainerWidget.prototype.ngAfterViewInit = function () {
            this.setupMaterialComponents();
        };
        ContainerWidget.prototype.setupMaterialComponents = function () {
            if (componentHandler) {
                componentHandler.upgradeAllRegistered();
                return true;
            }
            return false;
        };
        return ContainerWidget;
    }(widget_component_1.WidgetComponent);
    ContainerWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'container-widget',
        template: "<div class=\"container-widget\">     <div [ngClass]=\"{'hidden':!(content?.isGroup() && content?.isVisible)}\" class=\"container-widget__header\">         <h4 class=\"container-widget__header-text\" id=\"container-header\"             [class.collapsible]=\"content?.isCollapsible()\">             <button *ngIf=\"content?.isCollapsible()\"                     alfresco-mdl-button                     class=\"mdl-button--icon\"                     (click)=\"onExpanderClicked()\">                 <i class=\"material-icons\">{{ content?.isExpanded ? 'expand_less' : 'expand_more' }}</i>             </button>             <span (click)=\"onExpanderClicked()\" id=\"container-header-label\">{{content.name}}</span>         </h4>     </div>     <div class=\"mdl-grid container-widget__mdl-grid\" [ngClass]=\"{'hidden':!(content?.isVisible && content?.isExpanded)}\">         <div *ngFor=\"let col of content.columns\" class=\"mdl-cell mdl-cell--{{col.size}}-col\">             <div class=\"mdl-grid container-widget__mdl-grid\" *ngIf=\"col.hasFields()\">                 <div *ngFor=\"let field of col.fields\" class=\"mdl-cell mdl-cell--12-col\">                     <form-field [field]=\"field\"></form-field>                 </div>             </div>         </div>     </div> </div>",
        styles: [".container-widget {}  .container-widget__header {}  .container-widget__header-text {     border-bottom: 1px solid rgba(0,0,0,.87);     margin-left: 10px;     margin-right: 10px;     cursor: default;      user-select: none;     -webkit-user-select: none;   /* Chrome/Safari/Opera */     -moz-user-select: none;      /* Firefox */     -ms-user-select: none;       /* IE/Edge */     -webkit-touch-callout: none; /* iOS Safari */ }  .container-widget__header-text.collapsible {     cursor: pointer; }  .container-widget__mdl-grid {     align-items: center; }"]
    })], ContainerWidget);
    exports.ContainerWidget = ContainerWidget;
});
$__System.registerDynamic("18", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var TextWidget = function (_super) {
        __extends(TextWidget, _super);
        function TextWidget() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return TextWidget;
    }(widget_component_1.WidgetComponent);
    TextWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'text-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield text-widget\"      [class.text-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            [attr.id]=\"field.id\"            [attr.required]=\"isRequired()\"            [(ngModel)]=\"field.value\"            (ngModelChange)=\"onFieldChanged(field)\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".text-widget {     width: 100%; }   .text-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .text-widget__invalid .mdl-textfield__label {     color: #d50000; }  .text-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .text-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    })], TextWidget);
    exports.TextWidget = TextWidget;
});
$__System.registerDynamic("19", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var NumberWidget = function (_super) {
        __extends(NumberWidget, _super);
        function NumberWidget() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return NumberWidget;
    }(widget_component_1.WidgetComponent);
    NumberWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'number-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield number-widget\"      [class.number-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            pattern=\"-?[0-9]*(\\.[0-9]+)?\"            [attr.id]=\"field.id\"            [attr.required]=\"isRequired()\"            [(ngModel)]=\"field.value\"            (ngModelChange)=\"checkVisibility(field)\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".number-widget {     width: 100%; }  .number-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .number-widget__invalid .mdl-textfield__label {     color: #d50000; }  .number-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .number-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    })], NumberWidget);
    exports.NumberWidget = NumberWidget;
});
$__System.registerDynamic("1a", ["3", "12", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var widget_visibility_service_1 = $__require("5");
    var CheckboxWidget = function (_super) {
        __extends(CheckboxWidget, _super);
        function CheckboxWidget(visibilityService) {
            var _this = _super.call(this) || this;
            _this.visibilityService = visibilityService;
            return _this;
        }
        CheckboxWidget.prototype.onChange = function () {
            this.visibilityService.refreshVisibility(this.field.form);
        };
        return CheckboxWidget;
    }(widget_component_1.WidgetComponent);
    CheckboxWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'checkbox-widget',
        template: "<label class=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\" [attr.for]=\"field.id\">     <input type=\"checkbox\"            [attr.id]=\"field.id\"            [attr.required]=\"isRequired()\"            class=\"mdl-checkbox__input\"            [checked]=\"field.value\"            [(ngModel)]=\"field.value\"            (ngModelChange)=\"onChange()\"            [disabled]=\"field.readOnly\">     <span class=\"mdl-checkbox__label\">{{field.name}}</span> </label>"
    }), __metadata("design:paramtypes", [widget_visibility_service_1.WidgetVisibilityService])], CheckboxWidget);
    exports.CheckboxWidget = CheckboxWidget;
});
$__System.registerDynamic("1b", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var MultilineTextWidget = function (_super) {
        __extends(MultilineTextWidget, _super);
        function MultilineTextWidget() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return MultilineTextWidget;
    }(widget_component_1.WidgetComponent);
    MultilineTextWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'multiline-text-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield multiline-text-widget\"      [class.multiline-text-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}</label>     <textarea class=\"mdl-textfield__input\"               type=\"text\"               rows= \"3\"               [attr.id]=\"field.id\"               [attr.required]=\"isRequired()\"               [(ngModel)]=\"field.value\"               (ngModelChange)=\"checkVisibility(field)\"               [disabled]=\"field.readOnly\"               placeholder=\"{{field.placeholder}}\">     </textarea>     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".multiline-text-widget {     width: 100%; }  .multiline-text-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .multiline-text-widget__invalid .mdl-textfield__label {     color: #d50000; }  .multiline-text-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .multiline-text-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    })], MultilineTextWidget);
    exports.MultilineTextWidget = MultilineTextWidget;
});
$__System.registerDynamic("1c", ["3", "4", "a", "12", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var form_service_1 = $__require("a");
    var widget_component_1 = $__require("12");
    var widget_visibility_service_1 = $__require("5");
    var DropdownWidget = function (_super) {
        __extends(DropdownWidget, _super);
        function DropdownWidget(formService, visibilityService, logService) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.visibilityService = visibilityService;
            _this.logService = logService;
            return _this;
        }
        DropdownWidget.prototype.ngOnInit = function () {
            if (this.field && this.field.restUrl) {
                if (this.field.form.taskId) {
                    this.getValuesByTaskId();
                } else {
                    this.getValuesByProcessDefinitionId();
                }
            }
        };
        DropdownWidget.prototype.getValuesByTaskId = function () {
            var _this = this;
            this.formService.getRestFieldValues(this.field.form.taskId, this.field.id).subscribe(function (result) {
                var options = [];
                if (_this.field.emptyOption) {
                    options.push(_this.field.emptyOption);
                }
                _this.field.options = options.concat(result || []);
                _this.field.updateForm();
            }, function (err) {
                return _this.handleError(err);
            });
        };
        DropdownWidget.prototype.getValuesByProcessDefinitionId = function () {
            var _this = this;
            this.formService.getRestFieldValuesByProcessId(this.field.form.processDefinitionId, this.field.id).subscribe(function (result) {
                var options = [];
                if (_this.field.emptyOption) {
                    options.push(_this.field.emptyOption);
                }
                _this.field.options = options.concat(result || []);
                _this.field.updateForm();
            }, function (err) {
                return _this.handleError(err);
            });
        };
        DropdownWidget.prototype.getOptionValue = function (option, fieldValue) {
            var optionValue = '';
            if (option.id === 'empty' || option.name !== fieldValue) {
                optionValue = option.id;
            } else {
                optionValue = option.name;
            }
            return optionValue;
        };
        DropdownWidget.prototype.checkVisibility = function () {
            this.visibilityService.refreshVisibility(this.field.form);
        };
        DropdownWidget.prototype.handleError = function (error) {
            this.logService.error(error);
        };
        return DropdownWidget;
    }(widget_component_1.WidgetComponent);
    DropdownWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'dropdown-widget',
        template: "<div class=\"dropdown-widget\"      [class.dropdown-widget__invalid]=\"!field.isValid\" *ngIf=\"field?.isVisible\">     <label class=\"dropdown-widget__label\" [attr.for]=\"field.id\">{{field.name}}</label>     <select class=\"dropdown-widget__select\"             [attr.id]=\"field.id\"             [(ngModel)]=\"field.value\"             (ngModelChange)=\"checkVisibility(field)\">         <option *ngFor=\"let opt of field.options\" [value]=\"getOptionValue(opt, field.value)\" [id]=\"opt.id\">{{opt.name}}</option>     </select>     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".dropdown-widget {     width: 100%;     padding-top: 20px;     padding-bottom: 20px; }  .dropdown-widget__select {     width: 100%;     margin-top: 5px;     margin-bottom: 5px; }  .dropdown-widget__invalid .dropdown-widget__select {     border-color: #d50000; }  .dropdown-widget__invalid .dropdown-widget__label {     color: #d50000; }  .dropdown-widget__invalid .dropdown-widget__label:after {     background-color: #d50000; }  .dropdown-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, widget_visibility_service_1.WidgetVisibilityService, ng2_alfresco_core_1.LogService])], DropdownWidget);
    exports.DropdownWidget = DropdownWidget;
});
$__System.registerDynamic("1d", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var HyperlinkWidget = function (_super) {
        __extends(HyperlinkWidget, _super);
        function HyperlinkWidget() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.linkUrl = widget_component_1.WidgetComponent.DEFAULT_HYPERLINK_URL;
            _this.linkText = null;
            return _this;
        }
        HyperlinkWidget.prototype.ngOnInit = function () {
            if (this.field) {
                this.linkUrl = this.getHyperlinkUrl(this.field);
                this.linkText = this.getHyperlinkText(this.field);
            }
        };
        return HyperlinkWidget;
    }(widget_component_1.WidgetComponent);
    HyperlinkWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'hyperlink-widget',
        template: "<div class=\"hyperlink-widget\">     <div>         <span>{{field.name}}</span>     </div>     <div>         <a [href]=\"linkUrl\" target=\"_blank\" rel=\"nofollow\">{{linkText}}</a>     </div> </div>",
        styles: [".hyperlink-widget {}"]
    })], HyperlinkWidget);
    exports.HyperlinkWidget = HyperlinkWidget;
});
$__System.registerDynamic("1e", ["3", "4", "12", "a", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var widget_component_1 = $__require("12");
    var form_service_1 = $__require("a");
    var widget_visibility_service_1 = $__require("5");
    var RadioButtonsWidget = function (_super) {
        __extends(RadioButtonsWidget, _super);
        function RadioButtonsWidget(formService, visibilityService, logService) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.visibilityService = visibilityService;
            _this.logService = logService;
            return _this;
        }
        RadioButtonsWidget.prototype.ngOnInit = function () {
            if (this.field && this.field.restUrl) {
                if (this.field.form.taskId) {
                    this.getOptionsByTaskId();
                } else {
                    this.getOptionsByProcessDefinitionId();
                }
            }
        };
        RadioButtonsWidget.prototype.getOptionsByTaskId = function () {
            var _this = this;
            this.formService.getRestFieldValues(this.field.form.taskId, this.field.id).subscribe(function (result) {
                _this.field.options = result || [];
                _this.field.updateForm();
            }, function (err) {
                return _this.handleError(err);
            });
        };
        RadioButtonsWidget.prototype.getOptionsByProcessDefinitionId = function () {
            var _this = this;
            this.formService.getRestFieldValuesByProcessId(this.field.form.processDefinitionId, this.field.id).subscribe(function (result) {
                _this.field.options = result || [];
                _this.field.updateForm();
            }, function (err) {
                return _this.handleError(err);
            });
        };
        RadioButtonsWidget.prototype.onOptionClick = function (optionSelected) {
            this.field.value = optionSelected;
            this.checkVisibility();
        };
        RadioButtonsWidget.prototype.checkVisibility = function () {
            this.visibilityService.refreshVisibility(this.field.form);
        };
        RadioButtonsWidget.prototype.handleError = function (error) {
            this.logService.error(error);
        };
        return RadioButtonsWidget;
    }(widget_component_1.WidgetComponent);
    RadioButtonsWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'radio-buttons-widget',
        template: "<div class=\"radio-buttons-widget\"      [class.radio-buttons-widget__invalid]=\"!field.isValid\" [id]=\"field.id\" *ngIf=\"field?.isVisible\">     <label class=\"radio-buttons-widget__label\" [attr.for]=\"field.id\">{{field.name}}</label>     <div *ngFor=\"let opt of field.options\">         <label [id]=\"opt.id\" [attr.for]=\"field.id + '-' + opt.id\" class=\"mdl-radio mdl-js-radio\">             <input type=\"radio\"                    class=\"mdl-radio__button\"                    [checked]=\"field.value === opt.id\"                    [attr.id]=\"field.id + '-' + opt.id\"                    [attr.name]=\"field.id\"                    [attr.value]=\"opt.id\"                    [disabled]=\"field.readOnly\"                    (click)=\"onOptionClick(opt.id)\">             <span class=\"mdl-radio__label\">{{opt.name}}</span>         </label>     </div>     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".radio-buttons-widget {}  .radio-buttons-widget__invalid .mdl-radio__label {     color: #d50000; }  .radio-buttons-widget__invalid .radio-buttons-widget__label {     color: #d50000; }  .radio-buttons-widget__invalid .radio-buttons-widget__label:after {     background-color: #d50000; }  .radio-buttons-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, widget_visibility_service_1.WidgetVisibilityService, ng2_alfresco_core_1.LogService])], RadioButtonsWidget);
    exports.RadioButtonsWidget = RadioButtonsWidget;
});
$__System.registerDynamic("1f", ["3", "20", "4", "12", "16", "a", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var moment = $__require("20");
    var ng2_alfresco_core_1 = $__require("4");
    var widget_component_1 = $__require("12");
    var form_field_types_1 = $__require("16");
    var form_service_1 = $__require("a");
    var widget_visibility_service_1 = $__require("5");
    var DisplayValueWidget = function (_super) {
        __extends(DisplayValueWidget, _super);
        function DisplayValueWidget(formService, visibilityService, logService) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.visibilityService = visibilityService;
            _this.logService = logService;
            _this.rows = [];
            _this.columns = [];
            _this.visibleColumns = [];
            _this.hasFile = false;
            return _this;
        }
        DisplayValueWidget.prototype.ngOnInit = function () {
            if (this.field) {
                this.value = this.field.value;
                this.visibilityService.refreshEntityVisibility(this.field);
                if (this.field.params) {
                    var originalField = this.field.params['field'];
                    if (originalField && originalField.type) {
                        this.fieldType = originalField.type;
                        switch (originalField.type) {
                            case form_field_types_1.FormFieldTypes.BOOLEAN:
                                this.value = this.field.value === 'true' ? true : false;
                                break;
                            case form_field_types_1.FormFieldTypes.FUNCTIONAL_GROUP:
                                if (this.field.value) {
                                    this.value = this.field.value.name;
                                } else {
                                    this.value = null;
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.PEOPLE:
                                var model = this.field.value;
                                if (model) {
                                    var displayName = model.firstName + " " + model.lastName;
                                    this.value = displayName.trim();
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.UPLOAD:
                                var files = this.field.value || [];
                                if (files.length > 0) {
                                    this.value = decodeURI(files[0].name);
                                    this.id = files[0].id;
                                    this.hasFile = true;
                                } else {
                                    this.value = null;
                                    this.hasFile = false;
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.TYPEAHEAD:
                                this.loadRestFieldValue();
                                break;
                            case form_field_types_1.FormFieldTypes.DROPDOWN:
                                if (this.field.restUrl) {
                                    this.loadRestFieldValue();
                                } else {
                                    this.value = this.field.value;
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.RADIO_BUTTONS:
                                if (this.field.restUrl) {
                                    this.loadRestFieldValue();
                                } else {
                                    this.loadRadioButtonValue();
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.DATE:
                                if (this.value) {
                                    var d = moment(this.value.split('T')[0], 'YYYY-M-D');
                                    if (d.isValid()) {
                                        this.value = d.format('D-M-YYYY');
                                    }
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.AMOUNT:
                                if (this.value) {
                                    var currency = this.field.currency || '$';
                                    this.value = currency + " " + this.field.value;
                                }
                                break;
                            case form_field_types_1.FormFieldTypes.HYPERLINK:
                                this.linkUrl = this.getHyperlinkUrl(this.field);
                                this.linkText = this.getHyperlinkText(this.field);
                                break;
                            case form_field_types_1.FormFieldTypes.DYNAMIC_TABLE:
                                var json = this.field.json;
                                if (json.columnDefinitions) {
                                    this.columns = json.columnDefinitions.map(function (obj) {
                                        return obj;
                                    });
                                    this.visibleColumns = this.columns.filter(function (col) {
                                        return col.visible;
                                    });
                                }
                                if (json.value) {
                                    this.rows = json.value.map(function (obj) {
                                        return { selected: false, value: obj };
                                    });
                                }
                                break;
                            default:
                                this.value = this.field.value;
                                break;
                        }
                    }
                }
                this.visibilityService.refreshVisibility(this.field.form);
            }
        };
        DisplayValueWidget.prototype.loadRadioButtonValue = function () {
            var _this = this;
            var options = this.field.options || [];
            var toSelect = options.find(function (item) {
                return item.id === _this.field.value;
            });
            if (toSelect) {
                this.value = toSelect.name;
            } else {
                this.value = this.field.value;
            }
        };
        DisplayValueWidget.prototype.loadRestFieldValue = function () {
            if (this.field.form.taskId) {
                this.getValuesByTaskId();
            } else {
                this.getValuesByProcessDefinitionId();
            }
        };
        DisplayValueWidget.prototype.getValuesByProcessDefinitionId = function () {
            var _this = this;
            this.formService.getRestFieldValuesByProcessId(this.field.form.processDefinitionId, this.field.id).subscribe(function (result) {
                var options = result || [];
                var toSelect = options.find(function (item) {
                    return item.id === _this.field.value;
                });
                _this.field.options = options;
                if (toSelect) {
                    _this.value = toSelect.name;
                } else {
                    _this.value = _this.field.value;
                }
                _this.visibilityService.refreshVisibility(_this.field.form);
            }, function (error) {
                _this.logService.error(error);
                _this.value = _this.field.value;
            });
        };
        DisplayValueWidget.prototype.getValuesByTaskId = function () {
            var _this = this;
            this.formService.getRestFieldValues(this.field.form.taskId, this.field.id).subscribe(function (result) {
                var options = result || [];
                var toSelect = options.find(function (item) {
                    return item.id === _this.field.value;
                });
                _this.field.options = options;
                if (toSelect) {
                    _this.value = toSelect.name;
                } else {
                    _this.value = _this.field.value;
                }
                _this.visibilityService.refreshVisibility(_this.field.form);
            }, function (error) {
                _this.logService.error(error);
                _this.value = _this.field.value;
            });
        };
        DisplayValueWidget.prototype.getCellValue = function (row, column) {
            var result = row.value[column.id];
            if (column.type === 'Dropdown') {
                if (result) {
                    return result.name;
                }
            }
            if (column.type === 'Boolean') {
                return result ? true : false;
            }
            if (column.type === 'Date') {
                if (result) {
                    return moment(result.split('T')[0], 'YYYY-MM-DD').format('D-M-YYYY');
                }
            }
            if (column.type === 'Amount') {
                return (column.amountCurrency || '$') + ' ' + (result || 0);
            }
            return result || '';
        };
        return DisplayValueWidget;
    }(widget_component_1.WidgetComponent);
    DisplayValueWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'display-value-widget',
        template: "<div [ngSwitch]=\"fieldType\" class=\"display-value-widget\" *ngIf=\"field?.isVisible\">     <div *ngSwitchCase=\"'boolean'\">         <label class=\"mdl-checkbox mdl-js-checkbox\" [attr.for]=\"field.id\" >             <input type=\"checkbox\"                    [attr.id]=\"field.id\"                    [checked]=\"field.value\"                    [(ngModel)]=\"value\"                    class=\"mdl-checkbox__input\"                    disabled>             <span class=\"mdl-checkbox__label\">{{field.name}}</span>         </label>     </div>     <div *ngSwitchCase=\"'text'\"          class=\"mdl-textfield mdl-js-textfield text-widget\">         <label [attr.for]=\"field.id\">{{field.name}}</label>         <input             class=\"mdl-textfield__input\"             type=\"text\"             [attr.id]=\"field.id\"             [value]=\"value\"             disabled>     </div>     <div *ngSwitchCase=\"'multi-line-text'\"          class=\"mdl-textfield mdl-js-textfield multiline-text-widget\">         <textarea class=\"mdl-textfield__input\"                   type=\"text\"                   rows=\"3\"                   [value]=\"value\"                   [attr.id]=\"field.id\"                   disabled>         </textarea>         <label class=\"mdl-textfield__label\" [attr.for]=\"field.id\">{{field.name}}</label>     </div>     <div *ngSwitchCase=\"'hyperlink'\" class=\"hyperlink-widget\">         <div>             <div>                 <span>{{field.name}}</span>             </div>             <div>                 <a [href]=\"linkUrl\" target=\"_blank\" rel=\"nofollow\">{{linkText}}</a>             </div>         </div>     </div>     <div *ngSwitchCase=\"'dynamic-table'\">          <div class=\"display-value-widget__dynamic-table\">             <div>{{field.name}}</div>             <div class=\"display-value-dynamic-table-widget__table-container\">                 <table class=\"mdl-data-table mdl-js-data-table\">                     <thead>                     <tr>                         <th *ngFor=\"let column of visibleColumns\"                             class=\"mdl-data-table__cell--non-numeric is-disabled\">                             {{column.name}}                         </th>                     </tr>                     </thead>                     <tbody>                     <tr *ngFor=\"let row of rows\">                         <td *ngFor=\"let column of visibleColumns\"                             class=\"mdl-data-table__cell--non-numeric is-disabled\">                             {{ getCellValue(row, column) }}                         </td>                     </tr>                     </tbody>                 </table>             </div>         </div>     </div>     <div *ngSwitchCase=\"'upload'\">         <div class=\"upload-widget\">             <div>                 <label class=\"upload-widget__label\" [attr.for]=\"field.id\">{{field.name}}</label>             </div>             <div>                 <img *ngIf=\"hasFile\" class=\"img-upload-widget\" src=\"{{settingsService.bpmHost}}/activiti-app/app/rest/content/{{id}}/raw\">             </div>             <div>                 <i *ngIf=\"hasFile\" class=\"material-icons upload-widget__icon\">attachment</i>                 <span *ngIf=\"hasFile\" class=\"upload-widget__file\">{{value}}</span>             </div>         </div>     </div>     <div *ngSwitchDefault          class=\"mdl-textfield mdl-js-textfield text-widget is-disabled is-dirty is-upgraded\">         <label [attr.for]=\"field.id\">{{field.name}}</label>         <input             class=\"mdl-textfield__input\"             type=\"text\"             [attr.id]=\"field.id\"             [value]=\"value\"             disabled>     </div> </div>",
        styles: [".display-value-widget {     width: 100%; }  .display-value-widget__dynamic-table {     padding: 8px; }  .display-value-widget__dynamic-table .is-disabled {     background-color: transparent;     border-bottom: 1px dotted rgba(0, 0, 0, .12);     color: rgba(0, 0, 0, .26); }  .display-value-widget__dynamic-table table {     width: 100%; }  .display-value-dynamic-table-widget__table-container {     overflow-y: auto;     width: 100%; }   .upload-widget {     width: 100%;     word-break: break-all; }  .upload-widget__icon {     float: left;     color: rgba(0, 0, 0, .26); }  .upload-widget__file {     float: left;     margin-top: 4px;     color: rgba(0, 0, 0, .26); }  .upload-widget__label {     color: rgba(0, 0, 0, .26); }  .img-upload-widget {     width: 100px;     height: 100px;     padding: 2px;     border: 1px solid rgba(117, 117, 117, 0.57);     box-shadow: 1px 1px 2px #dddddd;     background-color: #ffffff; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, widget_visibility_service_1.WidgetVisibilityService, ng2_alfresco_core_1.LogService])], DisplayValueWidget);
    exports.DisplayValueWidget = DisplayValueWidget;
});
$__System.registerDynamic("21", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var DisplayTextWidget = function (_super) {
        __extends(DisplayTextWidget, _super);
        function DisplayTextWidget() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return DisplayTextWidget;
    }(widget_component_1.WidgetComponent);
    DisplayTextWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'display-text-widget',
        template: "<div class=\"display-text-widget\">     <span>{{field.value}}</span> </div>",
        styles: [".display-text-widget {}"]
    })], DisplayTextWidget);
    exports.DisplayTextWidget = DisplayTextWidget;
});
$__System.registerDynamic("22", ["3", "4", "12", "a"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var widget_component_1 = $__require("12");
    var form_service_1 = $__require("a");
    var UploadWidget = function (_super) {
        __extends(UploadWidget, _super);
        function UploadWidget(formService, logService) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.logService = logService;
            return _this;
        }
        UploadWidget.prototype.ngOnInit = function () {
            if (this.field && this.field.value && this.field.value.length > 0) {
                this.hasFile = true;
                var file = this.field.value[0];
                this.fileName = file.name;
                this.displayText = decodeURI(file.name);
            }
        };
        UploadWidget.prototype.reset = function () {
            this.hasFile = false;
            this.fileName = null;
            this.displayText = null;
            if (this.field) {
                this.field.value = null;
                this.field.json.value = null;
            }
        };
        UploadWidget.prototype.onFileChanged = function (event) {
            var _this = this;
            var files = event.target.files;
            if (files && files.length > 0) {
                var file = files[0];
                this.formService.createTemporaryRawRelatedContent(file).subscribe(function (response) {
                    _this.logService.info(response);
                    _this.field.value = [response];
                    _this.field.json.value = [response];
                }, function (error) {
                    _this.logService.error(error);
                    window.alert('Error uploading file. See console output for more details.');
                });
            }
        };
        return UploadWidget;
    }(widget_component_1.WidgetComponent);
    UploadWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'upload-widget',
        template: "<div class=\"upload-widget\"      [class.upload-widget__invalid]=\"!field.isValid\">     <label class=\"upload-widget__label\" [attr.for]=\"field.id\">{{field.name}}</label>     <div>         <i *ngIf=\"hasFile\" class=\"material-icons upload-widget__icon\">attachment</i>         <span *ngIf=\"hasFile\" class=\"upload-widget__file\">{{displayText}}</span>         <input *ngIf=\"!hasFile\"                #file                type=\"file\"                [attr.id]=\"field.id\"                class=\"upload-widget__file\"                (change)=\"onFileChanged($event)\">         <button *ngIf=\"hasFile\" (click)=\"reset(file);\"                 class=\"mdl-button mdl-js-button mdl-button--icon upload-widget__reset\">             <i class=\"material-icons\">highlight_off</i>         </button>     </div>     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".upload-widget {     width:100%;     word-break: break-all; }  .upload-widget__icon {     float: left; }  .upload-widget__file {     float: left;     margin-top: 4px; }  .upload-widget__reset {     float: left;     margin-top: -2px; }  .upload-widget__invalid .upload-widget__label {     color: #d50000; }  .upload-widget__invalid .upload-widget__label:after {     background-color: #d50000; }  .upload-widget__invalid .upload-widget__file {     color: #d50000; }  .upload-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, ng2_alfresco_core_1.LogService])], UploadWidget);
    exports.UploadWidget = UploadWidget;
});
$__System.registerDynamic("23", ["3", "f", "4"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var Rx_1 = $__require("f");
    var ng2_alfresco_core_1 = $__require("4");
    var ActivitiAlfrescoContentService = ActivitiAlfrescoContentService_1 = function () {
        function ActivitiAlfrescoContentService(apiService, logService) {
            this.apiService = apiService;
            this.logService = logService;
        }
        ActivitiAlfrescoContentService.prototype.getAlfrescoNodes = function (accountId, folderId) {
            var _this = this;
            var apiService = this.apiService.getInstance();
            var accountShortId = accountId.replace('alfresco-', '');
            return Rx_1.Observable.fromPromise(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId)).map(this.toJsonArray).catch(function (err) {
                return _this.handleError(err);
            });
        };
        ActivitiAlfrescoContentService.prototype.linkAlfrescoNode = function (accountId, node, siteId) {
            var _this = this;
            var apiService = this.apiService.getInstance();
            return Rx_1.Observable.fromPromise(apiService.activiti.contentApi.createTemporaryRelatedContent({
                link: true,
                name: node.title,
                simpleType: node.simpleType,
                source: accountId,
                sourceId: node.id + '@' + siteId
            })).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        ActivitiAlfrescoContentService.prototype.toJson = function (res) {
            if (res) {
                return res || {};
            }
            return {};
        };
        ActivitiAlfrescoContentService.prototype.toJsonArray = function (res) {
            if (res) {
                return res.data || [];
            }
            return [];
        };
        ActivitiAlfrescoContentService.prototype.handleError = function (error) {
            var errMsg = ActivitiAlfrescoContentService_1.UNKNOWN_ERROR_MESSAGE;
            if (error) {
                errMsg = error.message ? error.message : error.status ? error.status + " - " + error.statusText : ActivitiAlfrescoContentService_1.GENERIC_ERROR_MESSAGE;
            }
            this.logService.error(errMsg);
            return Rx_1.Observable.throw(errMsg);
        };
        return ActivitiAlfrescoContentService;
    }();
    ActivitiAlfrescoContentService.UNKNOWN_ERROR_MESSAGE = 'Unknown error';
    ActivitiAlfrescoContentService.GENERIC_ERROR_MESSAGE = 'Server error';
    ActivitiAlfrescoContentService = ActivitiAlfrescoContentService_1 = __decorate([core_1.Injectable(), __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoApiService, ng2_alfresco_core_1.LogService])], ActivitiAlfrescoContentService);
    exports.ActivitiAlfrescoContentService = ActivitiAlfrescoContentService;
    var ActivitiAlfrescoContentService_1;
});
$__System.registerDynamic("24", ["3", "4", "12", "23", "25"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var widget_component_1 = $__require("12");
    var activiti_alfresco_service_1 = $__require("23");
    var form_field_model_1 = $__require("25");
    var AttachWidget = function (_super) {
        __extends(AttachWidget, _super);
        function AttachWidget(contentService, logService) {
            var _this = _super.call(this) || this;
            _this.contentService = contentService;
            _this.logService = logService;
            _this.fieldChanged = new core_1.EventEmitter();
            return _this;
        }
        AttachWidget.prototype.ngOnInit = function () {
            if (this.field) {
                var params = this.field.params;
                if (params && params.fileSource && params.fileSource.selectedFolder) {
                    this.selectedFolderSiteId = params.fileSource.selectedFolder.siteId;
                    this.selectedFolderSiteName = params.fileSource.selectedFolder.site;
                    this.setupFileBrowser();
                    this.getExternalContentNodes();
                }
            }
        };
        AttachWidget.prototype.setupFileBrowser = function () {
            if (this.field) {
                var params = this.field.params;
                this.selectedFolderPathId = params.fileSource.selectedFolder.pathId;
                this.selectedFolderAccountId = params.fileSource.selectedFolder.accountId;
            }
        };
        AttachWidget.prototype.getLinkedFileName = function () {
            var result = this.fileName;
            if (this.selectedFile && this.selectedFile.title) {
                result = this.selectedFile.title;
            }
            if (this.field && this.field.value && this.field.value.length > 0 && this.field.value[0].name) {
                result = this.field.value[0].name;
            }
            return result;
        };
        AttachWidget.prototype.getExternalContentNodes = function () {
            var _this = this;
            this.contentService.getAlfrescoNodes(this.selectedFolderAccountId, this.selectedFolderPathId).subscribe(function (nodes) {
                return _this.selectedFolderNodes = nodes;
            }, function (error) {
                return _this.logService.error(error);
            });
        };
        AttachWidget.prototype.selectFile = function (node, $event) {
            var _this = this;
            this.contentService.linkAlfrescoNode(this.selectedFolderAccountId, node, this.selectedFolderSiteId).subscribe(function (link) {
                _this.selectedFile = node;
                _this.field.value = [link];
                _this.field.json.value = [link];
                _this.closeDialog();
                _this.fieldChanged.emit(_this.field);
            });
        };
        AttachWidget.prototype.selectFolder = function (node, $event) {
            this.selectedFolderPathId = node.id;
            this.getExternalContentNodes();
        };
        AttachWidget.prototype.showDialog = function () {
            this.setupFileBrowser();
            this.getExternalContentNodes();
            if (this.dialog) {
                if (!this.dialog.nativeElement.showModal) {
                    dialogPolyfill.registerDialog(this.dialog.nativeElement);
                }
                this.dialog.nativeElement.showModal();
                return true;
            }
            return false;
        };
        AttachWidget.prototype.closeDialog = function () {
            if (this.dialog) {
                this.dialog.nativeElement.close();
            }
        };
        AttachWidget.prototype.cancel = function () {
            this.closeDialog();
        };
        AttachWidget.prototype.reset = function () {
            this.field.value = null;
            this.field.json.value = null;
        };
        AttachWidget.prototype.hasFile = function () {
            return this.field && this.field.value;
        };
        return AttachWidget;
    }(widget_component_1.WidgetComponent);
    __decorate([core_1.Input(), __metadata("design:type", form_field_model_1.FormFieldModel)], AttachWidget.prototype, "field", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], AttachWidget.prototype, "fieldChanged", void 0);
    __decorate([core_1.ViewChild('dialog'), __metadata("design:type", Object)], AttachWidget.prototype, "dialog", void 0);
    AttachWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'attach-widget',
        template: "<div class=\"attach-widget\">      <label [attr.for]=\"field.id\">{{field.name}}</label>     <div>         <span *ngIf=\"hasFile()\" class=\"attach-widget__file mdl-chip\"><span class=\"mdl-chip__text\">{{getLinkedFileName()}}</span></span>         <button #browseFile (click)=\"showDialog();\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect attach-widget__browser\">             <i class=\"material-icons\">image</i>             Browse {{selectedFolderSiteName}}         </button>         <button *ngIf=\"hasFile\" (click)=\"reset(file);\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect attach-widget__reset\">Clear</button>     </div> </div>  <dialog class=\"mdl-dialog\" #dialog>     <h4 class=\"mdl-dialog__title\">Select content</h4>     <div class=\"mdl-dialog__content\">         <ul class='mdl-list'>             <li class=\"mdl-list__item\" *ngFor=\"let node of selectedFolderNodes\">             <span class=\"mdl-list__item-primary-content\" *ngIf=\"node.folder\">             <i class=\"material-icons mdl-list__item-icon\">folder</i>             <a (click)=\"selectFolder(node, $event)\">{{node.title}}</a>             </span>             <span class=\"mdl-list__item-primary-content\" *ngIf=\"!node.folder\">             <i class=\"material-icons mdl-list__item-icon\">description</i>             <a (click)=\"selectFile(node, $event)\">{{node.title}}</a>             </span>             </li>         </ul>     </div>     <div class=\"mdl-dialog__actions\">         <button type=\"button\" (click)=\"cancel()\" class=\"mdl-button close\">Cancel</button>     </div> </dialog>",
        styles: [".attach-widget {     width:100% }  .attach-widget__icon {     float: left; }  .attach-widget__file {     margin-top: 4px; }  .attach-widget__reset {     margin-top: 4px; }"]
    }), __metadata("design:paramtypes", [activiti_alfresco_service_1.ActivitiAlfrescoContentService, ng2_alfresco_core_1.LogService])], AttachWidget);
    exports.AttachWidget = AttachWidget;
});
$__System.registerDynamic("26", ["3", "4", "a", "12", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var form_service_1 = $__require("a");
    var widget_component_1 = $__require("12");
    var widget_visibility_service_1 = $__require("5");
    var TypeaheadWidget = function (_super) {
        __extends(TypeaheadWidget, _super);
        function TypeaheadWidget(formService, visibilityService, logService) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.visibilityService = visibilityService;
            _this.logService = logService;
            _this.popupVisible = false;
            _this.minTermLength = 1;
            _this.options = [];
            return _this;
        }
        TypeaheadWidget.prototype.ngOnInit = function () {
            if (this.field.form.taskId) {
                this.getValuesByTaskId();
            } else {
                this.getValuesByProcessDefinitionId();
            }
        };
        TypeaheadWidget.prototype.getValuesByTaskId = function () {
            var _this = this;
            this.formService.getRestFieldValues(this.field.form.taskId, this.field.id).subscribe(function (result) {
                var options = result || [];
                _this.field.options = options;
                var fieldValue = _this.field.value;
                if (fieldValue) {
                    var toSelect = options.find(function (item) {
                        return item.id === fieldValue;
                    });
                    if (toSelect) {
                        _this.value = toSelect.name;
                    }
                }
                _this.field.updateForm();
                _this.visibilityService.refreshEntityVisibility(_this.field);
            }, function (err) {
                return _this.handleError(err);
            });
        };
        TypeaheadWidget.prototype.getValuesByProcessDefinitionId = function () {
            var _this = this;
            this.formService.getRestFieldValuesByProcessId(this.field.form.processDefinitionId, this.field.id).subscribe(function (result) {
                var options = result || [];
                _this.field.options = options;
                var fieldValue = _this.field.value;
                if (fieldValue) {
                    var toSelect = options.find(function (item) {
                        return item.id === fieldValue;
                    });
                    if (toSelect) {
                        _this.value = toSelect.name;
                    }
                }
                _this.field.updateForm();
                _this.visibilityService.refreshEntityVisibility(_this.field);
            }, function (err) {
                return _this.handleError(err);
            });
        };
        TypeaheadWidget.prototype.getOptions = function () {
            var val = this.value.toLocaleLowerCase();
            return this.field.options.filter(function (item) {
                var name = item.name.toLocaleLowerCase();
                return name.indexOf(val) > -1;
            });
        };
        TypeaheadWidget.prototype.onKeyUp = function (event) {
            if (this.value && this.value.length >= this.minTermLength) {
                this.options = this.getOptions();
                this.popupVisible = this.options.length > 0;
            } else {
                this.popupVisible = false;
            }
        };
        TypeaheadWidget.prototype.onBlur = function () {
            var _this = this;
            setTimeout(function () {
                _this.flushValue();
                _this.checkVisibility();
            }, 200);
        };
        TypeaheadWidget.prototype.flushValue = function () {
            this.popupVisible = false;
            var options = this.field.options || [];
            var lValue = this.value ? this.value.toLocaleLowerCase() : null;
            var field = options.find(function (item) {
                return item.name && item.name.toLocaleLowerCase() === lValue;
            });
            if (field) {
                this.field.value = field.id;
                this.value = field.name;
            } else {
                this.field.value = null;
                this.value = null;
            }
            this.field.updateForm();
        };
        TypeaheadWidget.prototype.onItemClick = function (item, event) {
            if (item) {
                this.field.value = item.id;
                this.value = item.name;
                this.checkVisibility();
            }
            if (event) {
                event.preventDefault();
            }
        };
        TypeaheadWidget.prototype.handleError = function (error) {
            this.logService.error(error);
        };
        TypeaheadWidget.prototype.checkVisibility = function () {
            this.visibilityService.refreshVisibility(this.field.form);
        };
        return TypeaheadWidget;
    }(widget_component_1.WidgetComponent);
    TypeaheadWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'typeahead-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield typeahead-widget\"      [class.is-dirty]=\"value\"      [class.typeahead-widget__invalid]=\"!field.isValid\" id=\"typehead-div\" *ngIf=\"field.isVisible\">     <label [attr.for]=\"field.id\">{{field.name}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            [attr.id]=\"field.id\"            [(ngModel)]=\"value\"            (keyup)=\"onKeyUp($event)\"            (blur)=\"onBlur()\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div> <div class=\"typeahead-autocomplete mdl-shadow--2dp\" *ngIf=\"options.length > 0 && popupVisible\">     <ul>         <li *ngFor=\"let item of options\"             [attr.id]=\"field.id +'-'+item.id\"             class=\"mdl-menu__item\"             (click)=\"onItemClick(item, $event)\">             {{item.name}}         </li>     </ul> </div>",
        styles: [".typeahead-widget {     width: 100%; }  .typeahead-autocomplete {     background-color: #fff;     position: relative;     max-height: 200px;     overflow-y: auto;     z-index: 5;     color: #555;     margin: -15px 0 0 0; }  .typeahead-autocomplete > ul {     list-style-type: none;     position: static;      height: auto;     width: auto;     min-width: 124px;     padding: 8px 0;     margin: 0;      box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);     border-radius: 2px; }  .typeahead-autocomplete > ul > li {     opacity: 1; }    .typeahead-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .typeahead-widget__invalid .mdl-textfield__label {     color: #d50000; }  .typeahead-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .typeahead-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, widget_visibility_service_1.WidgetVisibilityService, ng2_alfresco_core_1.LogService])], TypeaheadWidget);
    exports.TypeaheadWidget = TypeaheadWidget;
});
$__System.registerDynamic("27", ["3", "12", "a"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var form_service_1 = $__require("a");
    var FunctionalGroupWidget = function (_super) {
        __extends(FunctionalGroupWidget, _super);
        function FunctionalGroupWidget(formService, elementRef) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.elementRef = elementRef;
            _this.popupVisible = false;
            _this.groups = [];
            _this.minTermLength = 1;
            return _this;
        }
        FunctionalGroupWidget.prototype.ngOnInit = function () {
            var _this = this;
            if (this.field) {
                var group = this.field.value;
                if (group) {
                    this.value = group.name;
                }
                var params = this.field.params;
                if (params && params['restrictWithGroup']) {
                    var restrictWithGroup = params['restrictWithGroup'];
                    this.groupId = restrictWithGroup.id;
                }
                if (this.value) {
                    this.formService.getWorkflowGroups(this.value, this.groupId).subscribe(function (result) {
                        return _this.groups = result || [];
                    });
                }
            }
        };
        FunctionalGroupWidget.prototype.onKeyUp = function (event) {
            var _this = this;
            if (this.value && this.value.length >= this.minTermLength) {
                this.formService.getWorkflowGroups(this.value, this.groupId).subscribe(function (result) {
                    _this.groups = result || [];
                    _this.popupVisible = _this.groups.length > 0;
                });
            } else {
                this.popupVisible = false;
            }
        };
        FunctionalGroupWidget.prototype.onBlur = function () {
            var _this = this;
            setTimeout(function () {
                _this.flushValue();
            }, 200);
        };
        FunctionalGroupWidget.prototype.flushValue = function () {
            var _this = this;
            this.popupVisible = false;
            var option = this.groups.find(function (item) {
                return item.name.toLocaleLowerCase() === _this.value.toLocaleLowerCase();
            });
            if (option) {
                this.field.value = option;
                this.value = option.name;
            } else {
                this.field.value = null;
                this.value = null;
            }
            this.field.updateForm();
        };
        FunctionalGroupWidget.prototype.onItemClick = function (item, event) {
            if (item) {
                this.field.value = item;
                this.value = item.name;
            }
            if (event) {
                event.preventDefault();
            }
        };
        FunctionalGroupWidget.prototype.setupMaterialComponents = function (handler) {
            _super.prototype.setupMaterialComponents.call(this, handler);
            if (handler) {
                if (this.elementRef && this.value) {
                    this.setupMaterialTextField(this.elementRef, handler, this.value);
                    return true;
                }
            }
            return false;
        };
        return FunctionalGroupWidget;
    }(widget_component_1.WidgetComponent);
    FunctionalGroupWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'functional-group-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield functional-group-widget\"      [class.functional-group-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            [attr.id]=\"field.id\"            [(ngModel)]=\"value\"            (ngModelChange)=\"checkVisibility(field)\"            (keyup)=\"onKeyUp($event)\"            (blur)=\"onBlur()\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div> <div class=\"functional-group-widget--autocomplete mdl-shadow--2dp\" *ngIf=\"popupVisible && groups.length > 0\">     <ul>         <li *ngFor=\"let item of groups\"             class=\"mdl-menu__item\"             (click)=\"onItemClick(item, $event)\">             {{item.name}}         </li>     </ul> </div>",
        styles: [".functional-group-widget {     width: 100%; }  .functional-group-widget--autocomplete {     background-color: #fff;     position: absolute;     z-index: 5;     color: #555;     margin: -15px 0 0 0; }  .functional-group-widget--autocomplete > ul {     list-style-type: none;     position: static;      height: auto;     width: auto;     min-width: 124px;     padding: 8px 0;     margin: 0;      box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);     border-radius: 2px; }  .functional-group-widget--autocomplete > ul > li {     opacity: 1; }  .people-widget--autocomplete > ul > li {     opacity: 1; }  .functional-group-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .functional-group-widget__invalid .mdl-textfield__label {     color: #d50000; }  .functional-group-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .functional-group-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, core_1.ElementRef])], FunctionalGroupWidget);
    exports.FunctionalGroupWidget = FunctionalGroupWidget;
});
$__System.registerDynamic("28", ["3", "12", "a"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var form_service_1 = $__require("a");
    var PeopleWidget = function (_super) {
        __extends(PeopleWidget, _super);
        function PeopleWidget(formService, elementRef) {
            var _this = _super.call(this) || this;
            _this.formService = formService;
            _this.elementRef = elementRef;
            _this.popupVisible = false;
            _this.minTermLength = 1;
            _this.users = [];
            return _this;
        }
        PeopleWidget.prototype.ngOnInit = function () {
            var _this = this;
            if (this.field) {
                var user = this.field.value;
                if (user) {
                    this.value = this.getDisplayName(user);
                }
                var params = this.field.params;
                if (params && params['restrictWithGroup']) {
                    var restrictWithGroup = params['restrictWithGroup'];
                    this.groupId = restrictWithGroup.id;
                }
                if (this.value) {
                    this.formService.getWorkflowUsers(this.value, this.groupId).subscribe(function (result) {
                        return _this.users = result || [];
                    });
                }
            }
        };
        PeopleWidget.prototype.onKeyUp = function (event) {
            var _this = this;
            if (this.value && this.value.length >= this.minTermLength) {
                this.formService.getWorkflowUsers(this.value, this.groupId).subscribe(function (result) {
                    _this.users = result || [];
                    _this.popupVisible = _this.users.length > 0;
                });
            } else {
                this.popupVisible = false;
            }
        };
        PeopleWidget.prototype.onBlur = function () {
            var _this = this;
            setTimeout(function () {
                _this.flushValue();
            }, 200);
        };
        PeopleWidget.prototype.flushValue = function () {
            var _this = this;
            this.popupVisible = false;
            var option = this.users.find(function (item) {
                var fullName = _this.getDisplayName(item).toLocaleLowerCase();
                return fullName === _this.value.toLocaleLowerCase();
            });
            if (option) {
                this.field.value = option;
                this.value = this.getDisplayName(option);
            } else {
                this.field.value = null;
                this.value = null;
            }
            this.field.updateForm();
        };
        PeopleWidget.prototype.getDisplayName = function (model) {
            if (model) {
                var displayName = (model.firstName || '') + " " + (model.lastName || '');
                return displayName.trim();
            }
            return '';
        };
        PeopleWidget.prototype.onItemClick = function (item, event) {
            if (item) {
                this.field.value = item;
                this.value = this.getDisplayName(item);
            }
            if (event) {
                event.preventDefault();
            }
        };
        PeopleWidget.prototype.setupMaterialComponents = function (handler) {
            _super.prototype.setupMaterialComponents.call(this, handler);
            if (handler) {
                if (this.elementRef && this.value) {
                    this.setupMaterialTextField(this.elementRef, handler, this.value);
                    return true;
                }
            }
            return false;
        };
        return PeopleWidget;
    }(widget_component_1.WidgetComponent);
    PeopleWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'people-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield people-widget\"      [class.people-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            [attr.id]=\"field.id\"            [(ngModel)]=\"value\"            (ngModelChange)=\"checkVisibility(field)\"            (keyup)=\"onKeyUp($event)\"            (blur)=\"onBlur()\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div> <div class=\"people-widget--autocomplete mdl-shadow--2dp\" *ngIf=\"popupVisible && users.length > 0\">     <ul>         <li *ngFor=\"let item of users\"             class=\"mdl-menu__item\"             (click)=\"onItemClick(item, $event)\">             {{getDisplayName(item)}}         </li>     </ul> </div>",
        styles: [".people-widget {     width: 100%; }  .people-widget--autocomplete {     background-color: #fff;     position: absolute;     z-index: 5;     color: #555;     margin: -15px 0 0 0; }  .people-widget--autocomplete > ul {     list-style-type: none;     position: static;      height: auto;     width: auto;     min-width: 124px;     padding: 8px 0;     margin: 0;      box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);     border-radius: 2px; }  .people-widget--autocomplete > ul > li {     opacity: 1; }  .people-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .people-widget__invalid .mdl-textfield__label {     color: #d50000; }  .people-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .people-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, core_1.ElementRef])], PeopleWidget);
    exports.PeopleWidget = PeopleWidget;
});
$__System.registerDynamic("29", ["3", "12", "20"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var moment = $__require("20");
    var DateWidget = function (_super) {
        __extends(DateWidget, _super);
        function DateWidget(elementRef) {
            var _this = _super.call(this) || this;
            _this.elementRef = elementRef;
            _this.DATE_FORMAT = 'D-M-YYYY';
            return _this;
        }
        DateWidget.prototype.ngOnInit = function () {
            var settings = {
                type: 'date',
                past: moment().subtract(100, 'years'),
                future: moment().add(100, 'years')
            };
            if (this.field) {
                if (this.field.minValue) {
                    settings.past = moment(this.field.minValue, this.DATE_FORMAT);
                }
                if (this.field.maxValue) {
                    settings.future = moment(this.field.maxValue, this.DATE_FORMAT);
                }
                if (this.field.value) {
                    settings.init = moment(this.field.value, this.DATE_FORMAT);
                }
            }
            this.datePicker = new mdDateTimePicker.default(settings);
        };
        DateWidget.prototype.ngAfterViewChecked = function () {
            if (this.elementRef) {
                var dataLocator = '#' + this.field.id;
                this.datePicker.trigger = this.elementRef.nativeElement.querySelector(dataLocator);
            }
        };
        DateWidget.prototype.onDateChanged = function () {
            if (this.field.value) {
                var value = moment(this.field.value, this.DATE_FORMAT);
                if (!value.isValid()) {
                    value = moment();
                }
                this.datePicker.time = value;
            }
            this.checkVisibility(this.field);
        };
        DateWidget.prototype.onDateSelected = function () {
            var newValue = this.datePicker.time.format(this.DATE_FORMAT);
            this.field.value = newValue;
            this.checkVisibility(this.field);
            if (this.elementRef) {
                this.setupMaterialTextField(this.elementRef, componentHandler, newValue);
            }
        };
        return DateWidget;
    }(widget_component_1.WidgetComponent);
    DateWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'date-widget',
        template: "<div class=\"mdl-grid mdl-grid__date-widget\" *ngIf=\"field?.isVisible\" id=\"data-widget\">     <div class=\"mdl-cell mdl-cell--11-col\">         <div class=\"mdl-textfield mdl-js-textfield date-widget\"              [class.date-widget__invalid]=\"!field.isValid\">             <label [attr.for]=\"field.id\">{{field.name}}</label>             <input class=\"mdl-textfield__input mdl-date__input\"                    type=\"text\"                    [attr.id]=\"field.id\"                    [attr.required]=\"isRequired()\"                    [(ngModel)]=\"field.value\"                    (ngModelChange)=\"onDateChanged()\"                    (onOk)=\"onDateSelected()\"                    [disabled]=\"field.readOnly\"                    placeholder=\"{{field.placeholder}}\">             <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span>         </div>     </div>     <div class=\"mdl-cell mdl-cell--1-col\">         <button             class=\"mdl-button mdl-js-button mdl-button--icon\"             (click)=\"datePicker.toggle()\">             <i class=\"material-icons\">date_range</i>         </button>     </div> </div>",
        styles: [".date-widget {     width: 100%;     padding-top: 10px;     padding-bottom: 10px; }  .date-widget--button {     margin-top: 10px; }  .mdl-date__input{     padding-top: 5px;     padding-bottom: 5px; }  .mdl-grid__date-widget{     align-items:center;     padding: 0px; }  .date-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .date-widget__invalid .mdl-textfield__label {     color: #d50000; }  .date-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .date-widget__invalid .mdl-textfield__error {     visibility: visible !important; }  .date-widget-button__cell{     margin-top: 0px;     margin-bottom: 0px; }"]
    }), __metadata("design:paramtypes", [core_1.ElementRef])], DateWidget);
    exports.DateWidget = DateWidget;
});
$__System.registerDynamic("2a", ["3", "12"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var core_1 = $__require("3");
    var widget_component_1 = $__require("12");
    var AmountWidget = AmountWidget_1 = function (_super) {
        __extends(AmountWidget, _super);
        function AmountWidget() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.currency = AmountWidget_1.DEFAULT_CURRENCY;
            return _this;
        }
        AmountWidget.prototype.ngOnInit = function () {
            if (this.field && this.field.currency) {
                this.currency = this.field.currency;
            }
        };
        return AmountWidget;
    }(widget_component_1.WidgetComponent);
    AmountWidget.DEFAULT_CURRENCY = '$';
    AmountWidget = AmountWidget_1 = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'amount-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield amount-widget\"      [class.amount-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}, {{currency}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            [attr.id]=\"field.id\"            [attr.required]=\"isRequired()\"            [(ngModel)]=\"field.value\"            (ngModelChange)=\"checkVisibility(field)\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".amount-widget {     width: 100%; }   .amount-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .amount-widget__invalid .mdl-textfield__label {     color: #d50000; }  .amount-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .amount-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    })], AmountWidget);
    exports.AmountWidget = AmountWidget;
    var AmountWidget_1;
});
$__System.registerDynamic("5", ["3", "f", "20", "4"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var Rx_1 = $__require("f");
    var moment = $__require("20");
    var ng2_alfresco_core_1 = $__require("4");
    var WidgetVisibilityService = function () {
        function WidgetVisibilityService(apiService, logService) {
            this.apiService = apiService;
            this.logService = logService;
        }
        WidgetVisibilityService.prototype.refreshVisibility = function (form) {
            var _this = this;
            if (form && form.tabs && form.tabs.length > 0) {
                form.tabs.map(function (tabModel) {
                    return _this.refreshEntityVisibility(tabModel);
                });
            }
            if (form) {
                form.getFormFields().map(function (field) {
                    return _this.refreshEntityVisibility(field);
                });
            }
        };
        WidgetVisibilityService.prototype.refreshEntityVisibility = function (element) {
            var visible = this.evaluateVisibility(element.form, element.visibilityCondition);
            element.isVisible = visible;
        };
        WidgetVisibilityService.prototype.evaluateVisibility = function (form, visibilityObj) {
            var isLeftFieldPresent = visibilityObj && (visibilityObj.leftFormFieldId || visibilityObj.leftRestResponseId);
            if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {
                return true;
            } else {
                return this.isFieldVisible(form, visibilityObj);
            }
        };
        WidgetVisibilityService.prototype.isFieldVisible = function (form, visibilityObj) {
            var leftValue = this.getLeftValue(form, visibilityObj);
            var rightValue = this.getRightValue(form, visibilityObj);
            var actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);
            if (visibilityObj.nextCondition) {
                return this.evaluateLogicalOperation(visibilityObj.nextConditionOperator, actualResult, this.isFieldVisible(form, visibilityObj.nextCondition));
            } else {
                return actualResult;
            }
        };
        WidgetVisibilityService.prototype.getLeftValue = function (form, visibilityObj) {
            var leftValue = '';
            if (visibilityObj.leftRestResponseId && visibilityObj.leftRestResponseId !== 'null') {
                leftValue = this.getVariableValue(form, visibilityObj.leftRestResponseId, this.processVarList);
            } else {
                leftValue = this.getFormValue(form, visibilityObj.leftFormFieldId);
                leftValue = leftValue ? leftValue : this.getVariableValue(form, visibilityObj.leftFormFieldId, this.processVarList);
            }
            return leftValue;
        };
        WidgetVisibilityService.prototype.getRightValue = function (form, visibilityObj) {
            var valueFound = '';
            if (visibilityObj.rightRestResponseId) {
                valueFound = this.getVariableValue(form, visibilityObj.rightRestResponseId, this.processVarList);
            } else if (visibilityObj.rightFormFieldId) {
                valueFound = this.getFormValue(form, visibilityObj.rightFormFieldId);
            } else {
                if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {
                    valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';
                } else {
                    valueFound = visibilityObj.rightValue;
                }
            }
            return valueFound;
        };
        WidgetVisibilityService.prototype.getFormValue = function (form, field) {
            var value = this.getFieldValue(form.values, field);
            return value ? value : this.searchForm(form, field);
        };
        WidgetVisibilityService.prototype.getFieldValue = function (valueList, fieldName) {
            var dropDownFilterByName,
                valueFound = '';
            if (fieldName && fieldName.indexOf('_LABEL') > 0) {
                dropDownFilterByName = fieldName.substring(0, fieldName.length - 6);
                if (valueList[dropDownFilterByName]) {
                    valueFound = valueList[dropDownFilterByName].name;
                }
            } else if (valueList[fieldName] && valueList[fieldName].id) {
                valueFound = valueList[fieldName].id;
            } else {
                valueFound = valueList[fieldName];
            }
            return valueFound;
        };
        WidgetVisibilityService.prototype.searchForm = function (form, name) {
            var _this = this;
            var fieldValue = '';
            form.fields.forEach(function (containerModel) {
                containerModel.field.columns.forEach(function (containerColumnModel) {
                    var fieldFound = containerColumnModel.fields.find(function (field) {
                        return _this.isSearchedField(field, name);
                    });
                    if (fieldFound) {
                        fieldValue = _this.getObjectValue(fieldFound);
                        if (!fieldValue) {
                            if (fieldFound.value && fieldFound.value.id) {
                                fieldValue = fieldFound.value.id;
                            } else {
                                fieldValue = fieldFound.value;
                            }
                        }
                    }
                });
            });
            return fieldValue;
        };
        WidgetVisibilityService.prototype.getObjectValue = function (field) {
            var value = '';
            if (field.value && field.value.name) {
                value = field.value.name;
            } else if (field.options) {
                var option = field.options.find(function (option) {
                    return option.id === field.value;
                });
                if (option) {
                    value = option.name;
                } else {
                    value = field.value;
                }
            }
            return value;
        };
        WidgetVisibilityService.prototype.isSearchedField = function (field, fieldToFind) {
            var forrmattedFieldName = this.removeLabel(field, fieldToFind);
            return field.name ? field.name.toUpperCase() === forrmattedFieldName.toUpperCase() : false;
        };
        WidgetVisibilityService.prototype.removeLabel = function (field, fieldToFind) {
            var formattedFieldName = fieldToFind || '';
            if (field.fieldType === 'RestFieldRepresentation' && fieldToFind.indexOf('_LABEL') > 0) {
                formattedFieldName = fieldToFind.substring(0, fieldToFind.length - 6);
            }
            return formattedFieldName;
        };
        WidgetVisibilityService.prototype.getVariableValue = function (form, name, processVarList) {
            return this.getFormVariableValue(form, name) || this.getProcessVariableValue(name, processVarList);
        };
        WidgetVisibilityService.prototype.getFormVariableValue = function (form, name) {
            if (form.json.variables) {
                var formVariable = form.json.variables.find(function (formVar) {
                    return formVar.name === name;
                });
                return formVariable ? formVariable.value : formVariable;
            }
        };
        WidgetVisibilityService.prototype.getProcessVariableValue = function (name, processVarList) {
            if (this.processVarList) {
                var processVariable = this.processVarList.find(function (variable) {
                    return variable.id === name;
                });
                return processVariable ? processVariable.value : processVariable;
            }
        };
        WidgetVisibilityService.prototype.evaluateLogicalOperation = function (logicOp, previousValue, newValue) {
            switch (logicOp) {
                case 'and':
                    return previousValue && newValue;
                case 'or':
                    return previousValue || newValue;
                case 'and-not':
                    return previousValue && !newValue;
                case 'or-not':
                    return previousValue || !newValue;
                default:
                    this.logService.error('NO valid operation! wrong op request : ' + logicOp);
                    break;
            }
        };
        WidgetVisibilityService.prototype.evaluateCondition = function (leftValue, rightValue, operator) {
            switch (operator) {
                case '==':
                    return leftValue + '' === rightValue + '';
                case '<':
                    return leftValue < rightValue;
                case '!=':
                    return leftValue + '' !== rightValue + '';
                case '>':
                    return leftValue > rightValue;
                case '>=':
                    return leftValue >= rightValue;
                case '<=':
                    return leftValue <= rightValue;
                case 'empty':
                    return leftValue ? leftValue === '' : true;
                case '!empty':
                    return leftValue ? leftValue !== '' : false;
                default:
                    this.logService.error('NO valid operation!');
                    break;
            }
            return;
        };
        WidgetVisibilityService.prototype.cleanProcessVariable = function () {
            this.processVarList = [];
        };
        WidgetVisibilityService.prototype.getTaskProcessVariable = function (taskId) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId)).map(function (res) {
                var jsonRes = _this.toJson(res);
                _this.processVarList = jsonRes;
                return jsonRes;
            }).catch(function (err) {
                return _this.handleError(err);
            });
        };
        WidgetVisibilityService.prototype.toJson = function (res) {
            return res || {};
        };
        WidgetVisibilityService.prototype.handleError = function (err) {
            this.logService.error('Error while performing a call');
            return Rx_1.Observable.throw('Error while performing a call - Server error');
        };
        return WidgetVisibilityService;
    }();
    WidgetVisibilityService = __decorate([core_1.Injectable(), __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoApiService, ng2_alfresco_core_1.LogService])], WidgetVisibilityService);
    exports.WidgetVisibilityService = WidgetVisibilityService;
});
$__System.registerDynamic("2b", ["3", "4", "12", "2c", "5"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var widget_component_1 = $__require("12");
    var dynamic_table_widget_model_1 = $__require("2c");
    var widget_visibility_service_1 = $__require("5");
    var DynamicTableWidget = function (_super) {
        __extends(DynamicTableWidget, _super);
        function DynamicTableWidget(elementRef, visibilityService, logService) {
            var _this = _super.call(this) || this;
            _this.elementRef = elementRef;
            _this.visibilityService = visibilityService;
            _this.logService = logService;
            _this.ERROR_MODEL_NOT_FOUND = 'Table model not found';
            _this.editMode = false;
            _this.editRow = null;
            return _this;
        }
        DynamicTableWidget.prototype.ngOnInit = function () {
            if (this.field) {
                this.content = new dynamic_table_widget_model_1.DynamicTableModel(this.field.form, this.field.json);
                this.visibilityService.refreshVisibility(this.field.form);
            }
        };
        DynamicTableWidget.prototype.isValid = function () {
            var result = true;
            if (this.content && this.content.field) {
                result = this.content.field.isValid;
            }
            return result;
        };
        DynamicTableWidget.prototype.onRowClicked = function (row) {
            if (this.content) {
                this.content.selectedRow = row;
            }
        };
        DynamicTableWidget.prototype.hasSelection = function () {
            return !!(this.content && this.content.selectedRow);
        };
        DynamicTableWidget.prototype.moveSelectionUp = function () {
            if (this.content) {
                this.content.moveRow(this.content.selectedRow, -1);
                return true;
            }
            return false;
        };
        DynamicTableWidget.prototype.moveSelectionDown = function () {
            if (this.content) {
                this.content.moveRow(this.content.selectedRow, 1);
                return true;
            }
            return false;
        };
        DynamicTableWidget.prototype.deleteSelection = function () {
            if (this.content) {
                this.content.deleteRow(this.content.selectedRow);
                return true;
            }
            return false;
        };
        DynamicTableWidget.prototype.addNewRow = function () {
            if (this.content) {
                this.editRow = {
                    isNew: true,
                    selected: false,
                    value: {}
                };
                this.editMode = true;
                return true;
            }
            return false;
        };
        DynamicTableWidget.prototype.editSelection = function () {
            if (this.content) {
                this.editRow = this.copyRow(this.content.selectedRow);
                this.editMode = true;
                return true;
            }
            return false;
        };
        DynamicTableWidget.prototype.getCellValue = function (row, column) {
            if (this.content) {
                var result = this.content.getCellValue(row, column);
                if (column.type === 'Amount') {
                    return (column.amountCurrency || '$') + ' ' + (result || 0);
                }
                return result;
            }
            return null;
        };
        DynamicTableWidget.prototype.onSaveChanges = function () {
            if (this.content) {
                if (this.editRow.isNew) {
                    var row = this.copyRow(this.editRow);
                    this.content.selectedRow = null;
                    this.content.addRow(row);
                    this.editRow.isNew = false;
                } else {
                    this.content.selectedRow.value = this.copyObject(this.editRow.value);
                }
                this.content.flushValue();
            } else {
                this.logService.error(this.ERROR_MODEL_NOT_FOUND);
            }
            this.editMode = false;
        };
        DynamicTableWidget.prototype.onCancelChanges = function () {
            this.editMode = false;
            this.editRow = null;
        };
        DynamicTableWidget.prototype.copyRow = function (row) {
            return {
                value: this.copyObject(row.value)
            };
        };
        DynamicTableWidget.prototype.copyObject = function (obj) {
            var _this = this;
            var result = obj;
            if (typeof obj === 'object' && obj !== null && obj !== undefined) {
                result = Object.assign({}, obj);
                Object.keys(obj).forEach(function (key) {
                    if (typeof obj[key] === 'object') {
                        result[key] = _this.copyObject(obj[key]);
                    }
                });
            }
            return result;
        };
        return DynamicTableWidget;
    }(widget_component_1.WidgetComponent);
    DynamicTableWidget = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'dynamic-table-widget',
        template: "<div class=\"dynamic-table-widget\"     [class.dynamic-table-widget__invalid]=\"!isValid()\" *ngIf=\"field?.isVisible\">      <div class=\"dynamic-table-widget__label\">{{content.name}}</div>       <div *ngIf=\"!editMode\">          <div class=\"dynamic-table-widget__table-container\">             <table class=\"mdl-data-table mdl-js-data-table dynamic-table-widget__table\">                 <thead>                     <tr>                         <th *ngFor=\"let column of content.visibleColumns\"                             class=\"mdl-data-table__cell--non-numeric\">                             {{column.name}}                         </th>                     </tr>                 </thead>                 <tbody>                     <tr *ngFor=\"let row of content.rows\"                         [class.dynamic-table-widget__row-selected]=\"row.selected\">                         <td *ngFor=\"let column of content.visibleColumns\"                             class=\"mdl-data-table__cell--non-numeric\"                             (click)=\"onRowClicked(row)\">                             {{ getCellValue(row, column) }}                         </td>                     </tr>                 </tbody>             </table>          </div>          <div class=\"dynamic-table-widget__buttons\">             <button class=\"mdl-button mdl-js-button mdl-button--icon\"                     [disabled]=\"!hasSelection()\"                     (click)=\"moveSelectionUp()\">                 <i class=\"material-icons\">arrow_upward</i>             </button>             <button class=\"mdl-button mdl-js-button mdl-button--icon\"                     [disabled]=\"!hasSelection()\"                     (click)=\"moveSelectionDown()\">                 <i class=\"material-icons\">arrow_downward</i>             </button>             <button class=\"mdl-button mdl-js-button mdl-button--icon\"                     (click)=\"addNewRow()\">                 <i class=\"material-icons\">add_circle_outline</i>             </button>             <button class=\"mdl-button mdl-js-button mdl-button--icon\"                     [disabled]=\"!hasSelection()\"                     (click)=\"deleteSelection()\">                 <i class=\"material-icons\">remove_circle_outline</i>             </button>             <button class=\"mdl-button mdl-js-button mdl-button--icon\"                     [disabled]=\"!hasSelection()\"                     (click)=\"editSelection()\">                 <i class=\"material-icons\">edit</i>             </button>         </div>      </div>       <row-editor *ngIf=\"editMode\"         [table]=\"content\"         [row]=\"editRow\"         [column]=\"column\"         (save)=\"onSaveChanges()\"         (cancel)=\"onCancelChanges()\">      </row-editor>       <div class=\"dynamic-table-widget__summary\">{{content?.field.validationSummary}}</div>  </div>",
        styles: [".dynamic-table-widget {     padding: 8px; }  .dynamic-table-widget__buttons {     margin-top: 10px; }  .dynamic-table-widget__row-selected, .dynamic-table-widget__row-selected:hover {     background-color: #eef !important; }  .dynamic-table-widget__table-container {     overflow-y: auto;     width: 100%; }  .dynamic-table-widget__table {     width: 100%; }  .dynamic-table-widget__invalid .dynamic-table-widget__label {     color: #d50000; }  .dynamic-table-widget__invalid .dynamic-table-widget__table-container {     border: 1px solid #d50000; }  .dynamic-table-widget__invalid .dynamic-table-widget__table {     border: none; }  .dynamic-table-widget__summary {     visibility: hidden;     color: #d50000; }  .dynamic-table-widget__invalid .dynamic-table-widget__summary {     visibility: visible !important; }"]
    }), __metadata("design:paramtypes", [core_1.ElementRef, widget_visibility_service_1.WidgetVisibilityService, ng2_alfresco_core_1.LogService])], DynamicTableWidget);
    exports.DynamicTableWidget = DynamicTableWidget;
});
$__System.registerDynamic("2d", ["3", "2c", "20"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var dynamic_table_widget_model_1 = $__require("2c");
    var moment = $__require("20");
    var DateEditorComponent = function () {
        function DateEditorComponent(elementRef) {
            this.elementRef = elementRef;
            this.DATE_FORMAT = 'DD-MM-YYYY';
        }
        DateEditorComponent.prototype.ngOnInit = function () {
            this.settings = {
                type: 'date',
                past: moment().subtract(100, 'years'),
                future: moment().add(100, 'years')
            };
            this.value = this.table.getCellValue(this.row, this.column);
            if (this.value) {
                this.settings.init = moment(this.value, this.DATE_FORMAT);
            }
            this.datePicker = new mdDateTimePicker.default(this.settings);
            if (this.elementRef) {
                this.datePicker.trigger = this.elementRef.nativeElement.querySelector('#dateInput');
            }
        };
        DateEditorComponent.prototype.onDateChanged = function (event) {
            var newValue = event.target.value;
            var dateValue = moment(newValue, this.DATE_FORMAT);
            this.datePicker.time = dateValue;
            this.row.value[this.column.id] = dateValue.format('YYYY-MM-DD') + "T00:00:00.000Z";
            this.table.flushValue();
        };
        ;
        DateEditorComponent.prototype.onDateSelected = function (event) {
            this.value = this.datePicker.time.format('DD-MM-YYYY');
            var newValue = this.datePicker.time.format('YYYY-MM-DD');
            this.row.value[this.column.id] = newValue + "T00:00:00.000Z";
            this.table.flushValue();
            if (this.elementRef) {
                this.updateMaterialTextField(this.elementRef, newValue);
            }
        };
        DateEditorComponent.prototype.updateMaterialTextField = function (elementRef, value) {
            if (elementRef) {
                var el = elementRef.nativeElement;
                if (el) {
                    var container = el.querySelector('.mdl-textfield');
                    if (container) {
                        container.MaterialTextfield.change(value);
                        return true;
                    }
                }
            }
            return false;
        };
        return DateEditorComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", dynamic_table_widget_model_1.DynamicTableModel)], DateEditorComponent.prototype, "table", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], DateEditorComponent.prototype, "row", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], DateEditorComponent.prototype, "column", void 0);
    DateEditorComponent = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'alf-date-editor',
        template: "<div class=\"mdl-grid\">     <div class=\"mdl-cell mdl-cell--11-col\">         <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label date-editor\">             <input id=\"dateInput\"                 class=\"mdl-textfield__input\"                 type=\"text\"                 [value]=\"value\"                 [attr.id]=\"column.id\"                 [required]=\"column.required\"                 [disabled]=\"!column.editable\"                 (keyup)=\"onDateChanged($event)\"                 (onOk)=\"onDateSelected($event)\">             <label class=\"mdl-textfield__label\" [attr.for]=\"column.id\">{{column.name}} (d-M-yyyy)</label>         </div>     </div>     <div *ngIf=\"column.editable\" class=\"mdl-cell mdl-cell--1-col\">         <button             class=\"mdl-button mdl-js-button mdl-button--icon date-editor--button\"             (click)=\"datePicker.toggle()\">             <i class=\"material-icons\">date_range</i>         </button>     </div> </div>",
        styles: [".date-editor {     width: 100%; }  .date-editor--button {     margin-top: 15px; }"]
    }), __metadata("design:paramtypes", [core_1.ElementRef])], DateEditorComponent);
    exports.DateEditorComponent = DateEditorComponent;
});
$__System.registerDynamic('2e', [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var FormDefinitionModel = function () {
        function FormDefinitionModel(id, name, lastUpdatedByFullName, lastUpdated, metadata) {
            this.reusable = false;
            this.newVersion = false;
            this.formImageBase64 = '';
            this.formRepresentation = {
                id: id,
                name: name,
                description: '',
                version: 1,
                lastUpdatedBy: 1,
                lastUpdatedByFullName: lastUpdatedByFullName,
                lastUpdated: lastUpdated,
                stencilSetId: 0,
                referenceId: null,
                formDefinition: {
                    fields: [{
                        name: 'Label',
                        type: 'container',
                        fieldType: 'ContainerRepresentation',
                        numberOfColumns: 2,
                        required: false,
                        readOnly: false,
                        sizeX: 2,
                        sizeY: 1,
                        row: -1,
                        col: -1,
                        fields: { '1': this.metadataToFields(metadata) }
                    }],
                    gridsterForm: false,
                    javascriptEvents: [],
                    metadata: {},
                    outcomes: [],
                    className: '',
                    style: '',
                    tabs: [],
                    variables: []
                }
            };
        }
        FormDefinitionModel.prototype.metadataToFields = function (metadata) {
            var fields = [];
            if (metadata) {
                metadata.forEach(function (property) {
                    if (property) {
                        var field = {
                            type: 'text',
                            id: property.name,
                            name: property.name,
                            required: false,
                            readOnly: false,
                            sizeX: 1,
                            sizeY: 1,
                            row: -1,
                            col: -1,
                            colspan: 1,
                            params: {
                                existingColspan: 1,
                                maxColspan: 2
                            },
                            layout: {
                                colspan: 1,
                                row: -1,
                                column: -1
                            }
                        };
                        fields.push(field);
                    }
                });
            }
            return fields;
        };
        return FormDefinitionModel;
    }();
    exports.FormDefinitionModel = FormDefinitionModel;
});
$__System.registerDynamic("9", ["3", "f", "4"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var Rx_1 = $__require("f");
    var ng2_alfresco_core_1 = $__require("4");
    var EcmModelService = EcmModelService_1 = function () {
        function EcmModelService(apiService, logService) {
            this.apiService = apiService;
            this.logService = logService;
        }
        EcmModelService.prototype.createEcmTypeForActivitiForm = function (formName, form) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                _this.searchActivitiEcmModel().subscribe(function (model) {
                    if (!model) {
                        _this.createActivitiEcmModel(formName, form).subscribe(function (typeForm) {
                            observer.next(typeForm);
                            observer.complete();
                        });
                    } else {
                        _this.saveFomType(formName, form).subscribe(function (typeForm) {
                            observer.next(typeForm);
                            observer.complete();
                        });
                    }
                }, function (err) {
                    return _this.handleError(err);
                });
            });
        };
        EcmModelService.prototype.searchActivitiEcmModel = function () {
            return this.getEcmModels().map(function (ecmModels) {
                return ecmModels.list.entries.find(function (model) {
                    return model.entry.name === EcmModelService_1.MODEL_NAME;
                });
            });
        };
        EcmModelService.prototype.createActivitiEcmModel = function (formName, form) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                _this.createEcmModel(EcmModelService_1.MODEL_NAME, EcmModelService_1.MODEL_NAMESPACE).subscribe(function (model) {
                    _this.logService.info('model created', model);
                    _this.activeEcmModel(EcmModelService_1.MODEL_NAME).subscribe(function (modelActive) {
                        _this.logService.info('model active', modelActive);
                        _this.createEcmTypeWithProperties(formName, form).subscribe(function (typeCreated) {
                            observer.next(typeCreated);
                            observer.complete();
                        });
                    }, function (err) {
                        return _this.handleError(err);
                    });
                }, function (err) {
                    return _this.handleError(err);
                });
            });
        };
        EcmModelService.prototype.saveFomType = function (formName, form) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                _this.searchEcmType(formName, EcmModelService_1.MODEL_NAME).subscribe(function (ecmType) {
                    _this.logService.info('custom types', ecmType);
                    if (!ecmType) {
                        _this.createEcmTypeWithProperties(formName, form).subscribe(function (typeCreated) {
                            observer.next(typeCreated);
                            observer.complete();
                        });
                    } else {
                        observer.next(ecmType);
                        observer.complete();
                    }
                }, function (err) {
                    return _this.handleError(err);
                });
            });
        };
        EcmModelService.prototype.createEcmTypeWithProperties = function (formName, form) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                _this.createEcmType(formName, EcmModelService_1.MODEL_NAME, EcmModelService_1.TYPE_MODEL).subscribe(function (typeCreated) {
                    _this.logService.info('type Created', typeCreated);
                    _this.addPropertyToAType(EcmModelService_1.MODEL_NAME, formName, form).subscribe(function (properyAdded) {
                        _this.logService.info('property Added', properyAdded);
                        observer.next(typeCreated);
                        observer.complete();
                    }, function (err) {
                        return _this.handleError(err);
                    });
                }, function (err) {
                    return _this.handleError(err);
                });
            });
        };
        EcmModelService.prototype.searchEcmType = function (typeName, modelName) {
            return this.getEcmType(modelName).map(function (customTypes) {
                return customTypes.list.entries.find(function (type) {
                    return type.entry.prefixedName === typeName || type.entry.title === typeName;
                });
            });
        };
        EcmModelService.prototype.activeEcmModel = function (modelName) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        EcmModelService.prototype.createEcmModel = function (modelName, nameSpace) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        EcmModelService.prototype.getEcmModels = function () {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().core.customModelApi.getAllCustomModel()).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        EcmModelService.prototype.getEcmType = function (modelName) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        EcmModelService.prototype.createEcmType = function (typeName, modelName, parentType) {
            var _this = this;
            var name = this.cleanNameType(typeName);
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, '')).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        EcmModelService.prototype.addPropertyToAType = function (modelName, typeName, formFields) {
            var _this = this;
            var name = this.cleanNameType(typeName);
            var properties = [];
            if (formFields && formFields.values) {
                for (var key in formFields.values) {
                    if (key) {
                        properties.push({
                            name: key,
                            title: key,
                            description: key,
                            dataType: 'd:text',
                            multiValued: false,
                            mandatory: false,
                            mandatoryEnforced: false
                        });
                    }
                }
            }
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        EcmModelService.prototype.cleanNameType = function (name) {
            var cleanName = name;
            if (name.indexOf(':') !== -1) {
                cleanName = name.split(':')[1];
            }
            return cleanName.replace(/[^a-zA-Z ]/g, '');
        };
        EcmModelService.prototype.toJson = function (res) {
            if (res) {
                return res || {};
            }
            return {};
        };
        EcmModelService.prototype.handleError = function (err) {
            this.logService.error(err);
        };
        return EcmModelService;
    }();
    EcmModelService.MODEL_NAMESPACE = 'activitiForms';
    EcmModelService.MODEL_NAME = 'activitiFormsModel';
    EcmModelService.TYPE_MODEL = 'cm:folder';
    EcmModelService = EcmModelService_1 = __decorate([core_1.Injectable(), __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoApiService, ng2_alfresco_core_1.LogService])], EcmModelService);
    exports.EcmModelService = EcmModelService;
    var EcmModelService_1;
});
$__System.registerDynamic("a", ["3", "f", "4", "2e", "9"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var Rx_1 = $__require("f");
    var ng2_alfresco_core_1 = $__require("4");
    var form_definition_model_1 = $__require("2e");
    var ecm_model_service_1 = $__require("9");
    var FormService = FormService_1 = function () {
        function FormService(ecmModelService, apiService, logService) {
            this.ecmModelService = ecmModelService;
            this.apiService = apiService;
            this.logService = logService;
            this.formLoaded = new Rx_1.Subject();
            this.formFieldValueChanged = new Rx_1.Subject();
            this.taskCompleted = new Rx_1.Subject();
            this.taskCompletedError = new Rx_1.Subject();
            this.taskSaved = new Rx_1.Subject();
            this.taskSavedError = new Rx_1.Subject();
        }
        FormService.prototype.createFormFromANode = function (formName) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                _this.createForm(formName).subscribe(function (form) {
                    _this.ecmModelService.searchEcmType(formName, ecm_model_service_1.EcmModelService.MODEL_NAME).subscribe(function (customType) {
                        var formDefinitionModel = new form_definition_model_1.FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);
                        _this.addFieldsToAForm(form.id, formDefinitionModel).subscribe(function (formData) {
                            observer.next(formData);
                            observer.complete();
                        }, function (err) {
                            return _this.handleError(err);
                        });
                    }, function (err) {
                        return _this.handleError(err);
                    });
                }, function (err) {
                    return _this.handleError(err);
                });
            });
        };
        FormService.prototype.createForm = function (formName) {
            var dataModel = {
                name: formName,
                description: '',
                modelType: 2,
                stencilSet: 0
            };
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.modelsApi.createModel(dataModel));
        };
        FormService.prototype.addFieldsToAForm = function (formId, formModel) {
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.editorApi.saveForm(formId, formModel));
        };
        FormService.prototype.searchFrom = function (name) {
            var _this = this;
            var opts = {
                'modelType': 2
            };
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.modelsApi.getModels(opts)).map(function (forms) {
                return forms.data.find(function (formdata) {
                    return formdata.name === name;
                });
            }).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getForms = function () {
            var opts = {
                'modelType': 2
            };
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.modelsApi.getModels(opts));
        };
        FormService.prototype.getProcessDefinitions = function () {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.processApi.getProcessDefinitions({})).map(this.toJsonArray).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getTasks = function () {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.listTasks({})).map(this.toJsonArray).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getTask = function (taskId) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.getTask(taskId)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.saveTaskForm = function (taskId, formValues) {
            var _this = this;
            var body = JSON.stringify({ values: formValues });
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.saveTaskForm(taskId, body)).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.completeTaskForm = function (taskId, formValues, outcome) {
            var _this = this;
            var data = { values: formValues };
            if (outcome) {
                data.outcome = outcome;
            }
            var body = JSON.stringify(data);
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.completeTaskForm(taskId, body)).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getTaskForm = function (taskId) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.getTaskForm(taskId)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getFormDefinitionById = function (formId) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.editorApi.getForm(formId)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getFormDefinitionByName = function (name) {
            var _this = this;
            var opts = {
                'filter': 'myReusableForms',
                'filterText': name,
                'modelType': 2
            };
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.modelsApi.getModels(opts)).map(this.getFormId).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getStartFormInstance = function (processId) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.processApi.getProcessInstanceStartForm(processId)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.getStartFormDefinition = function (processId) {
            var _this = this;
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.processApi.getProcessDefinitionStartForm(processId)).map(this.toJson).catch(function (err) {
                return _this.handleError(err);
            });
        };
        FormService.prototype.createTemporaryRawRelatedContent = function (file) {
            return Rx_1.Observable.fromPromise(this.apiService.getInstance().activiti.contentApi.createTemporaryRawRelatedContent(file));
        };
        FormService.prototype.getRestFieldValues = function (taskId, field) {
            var alfrescoApi = this.apiService.getInstance();
            return Rx_1.Observable.fromPromise(alfrescoApi.activiti.taskApi.getRestFieldValues(taskId, field));
        };
        FormService.prototype.getRestFieldValuesByProcessId = function (processDefinitionId, field) {
            var alfrescoApi = this.apiService.getInstance();
            return Rx_1.Observable.fromPromise(alfrescoApi.activiti.processApi.getRestFieldValues(processDefinitionId, field));
        };
        FormService.prototype.getRestFieldValuesColumnByProcessId = function (processDefinitionId, field, column) {
            var alfrescoApi = this.apiService.getInstance();
            return Rx_1.Observable.fromPromise(alfrescoApi.activiti.processApi.getRestTableFieldValues(processDefinitionId, field, column));
        };
        FormService.prototype.getRestFieldValuesColumn = function (taskId, field, column) {
            var alfrescoApi = this.apiService.getInstance();
            return Rx_1.Observable.fromPromise(alfrescoApi.activiti.taskApi.getRestFieldValuesColumn(taskId, field, column));
        };
        FormService.prototype.getWorkflowGroups = function (filter, groupId) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                var xhr = new XMLHttpRequest();
                xhr.withCredentials = true;
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            var json = JSON.parse(xhr.response);
                            var data = (json.data || []).map(function (item) {
                                return item;
                            });
                            observer.next(data);
                            observer.complete();
                        } else {
                            _this.logService.error(xhr.response);
                            Rx_1.Observable.throw(new Error(xhr.response));
                        }
                    }
                };
                var host = _this.apiService.getInstance().config.hostBpm;
                var url = host + "/activiti-app/app/rest/workflow-groups?filter=" + filter;
                if (groupId) {
                    url += "&groupId=" + groupId;
                }
                xhr.open('GET', url, true);
                xhr.setRequestHeader('Authorization', _this.apiService.getInstance().getTicketBpm());
                xhr.send();
            });
        };
        FormService.prototype.getWorkflowUsers = function (filter, groupId) {
            var _this = this;
            return Rx_1.Observable.create(function (observer) {
                var xhr = new XMLHttpRequest();
                xhr.withCredentials = true;
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            var json = JSON.parse(xhr.response);
                            var data = (json.data || []).map(function (item) {
                                return item;
                            });
                            observer.next(data);
                            observer.complete();
                        } else {
                            _this.logService.error(xhr.response);
                            Rx_1.Observable.throw(new Error(xhr.response));
                        }
                    }
                };
                var host = _this.apiService.getInstance().config.hostBpm;
                var url = host + "/activiti-app/app/rest/workflow-users?filter=" + filter;
                if (groupId) {
                    url += "&groupId=" + groupId;
                }
                xhr.open('GET', url, true);
                xhr.setRequestHeader('Authorization', _this.apiService.getInstance().getTicketBpm());
                xhr.send();
            });
        };
        FormService.prototype.getFormId = function (res) {
            var result = null;
            if (res && res.data && res.data.length > 0) {
                result = res.data[0].id;
            }
            return result;
        };
        FormService.prototype.toJson = function (res) {
            if (res) {
                return res || {};
            }
            return {};
        };
        FormService.prototype.toJsonArray = function (res) {
            if (res) {
                return res.data || [];
            }
            return [];
        };
        FormService.prototype.handleError = function (error) {
            var errMsg = FormService_1.UNKNOWN_ERROR_MESSAGE;
            if (error) {
                errMsg = error.message ? error.message : error.status ? error.status + " - " + error.statusText : FormService_1.GENERIC_ERROR_MESSAGE;
            }
            this.logService.error(errMsg);
            return Rx_1.Observable.throw(errMsg);
        };
        return FormService;
    }();
    FormService.UNKNOWN_ERROR_MESSAGE = 'Unknown error';
    FormService.GENERIC_ERROR_MESSAGE = 'Server error';
    FormService = FormService_1 = __decorate([core_1.Injectable(), __metadata("design:paramtypes", [ecm_model_service_1.EcmModelService, ng2_alfresco_core_1.AlfrescoApiService, ng2_alfresco_core_1.LogService])], FormService);
    exports.FormService = FormService;
    var FormService_1;
});
$__System.registerDynamic("2f", ["3", "4", "2c", "a"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var dynamic_table_widget_model_1 = $__require("2c");
    var form_service_1 = $__require("a");
    var DropdownEditorComponent = function () {
        function DropdownEditorComponent(formService, logService) {
            this.formService = formService;
            this.logService = logService;
            this.value = null;
            this.options = [];
        }
        DropdownEditorComponent.prototype.ngOnInit = function () {
            var field = this.table.field;
            if (field) {
                if (this.column.optionType === 'rest') {
                    if (this.table.form && this.table.form.taskId) {
                        this.getValuesByTaskId(field);
                    } else {
                        this.getValuesByProcessDefinitionId(field);
                    }
                } else {
                    this.options = this.column.options || [];
                    this.value = this.table.getCellValue(this.row, this.column);
                }
            }
        };
        DropdownEditorComponent.prototype.getValuesByTaskId = function (field) {
            var _this = this;
            this.formService.getRestFieldValuesColumn(field.form.taskId, field.id, this.column.id).subscribe(function (result) {
                _this.column.options = result || [];
                _this.options = _this.column.options;
                _this.value = _this.table.getCellValue(_this.row, _this.column);
            }, function (err) {
                return _this.handleError(err);
            });
        };
        DropdownEditorComponent.prototype.getValuesByProcessDefinitionId = function (field) {
            var _this = this;
            this.formService.getRestFieldValuesColumnByProcessId(field.form.processDefinitionId, field.id, this.column.id).subscribe(function (result) {
                _this.column.options = result || [];
                _this.options = _this.column.options;
                _this.value = _this.table.getCellValue(_this.row, _this.column);
            }, function (err) {
                return _this.handleError(err);
            });
        };
        DropdownEditorComponent.prototype.onValueChanged = function (row, column, event) {
            var value = event.target.value;
            value = column.options.find(function (opt) {
                return opt.name === value;
            });
            row.value[column.id] = value;
        };
        DropdownEditorComponent.prototype.handleError = function (error) {
            this.logService.error(error);
        };
        return DropdownEditorComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", dynamic_table_widget_model_1.DynamicTableModel)], DropdownEditorComponent.prototype, "table", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], DropdownEditorComponent.prototype, "row", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], DropdownEditorComponent.prototype, "column", void 0);
    DropdownEditorComponent = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'alf-dropdown-editor',
        template: "<div class=\"dropdown-editor\">     <label [attr.for]=\"column.id\">{{column.name}}</label>     <div>         <select             class=\"dropdown-editor__select\"             [attr.id]=\"column.id\"             [value]=\"value\"             [required]=\"column.required\"             [disabled]=\"!column.editable\"             (change)=\"onValueChanged(row, column, $event)\">             <option></option>             <option *ngFor=\"let opt of options\" [value]=\"opt.name\" [id]=\"opt.id\">{{opt.name}}</option>         </select>     </div> </div>",
        styles: [".dropdown-editor__select {     width: 100%; }"]
    }), __metadata("design:paramtypes", [form_service_1.FormService, ng2_alfresco_core_1.LogService])], DropdownEditorComponent);
    exports.DropdownEditorComponent = DropdownEditorComponent;
});
$__System.registerDynamic("30", ["3", "2c"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var dynamic_table_widget_model_1 = $__require("2c");
    var BooleanEditorComponent = function () {
        function BooleanEditorComponent() {}
        BooleanEditorComponent.prototype.onValueChanged = function (row, column, event) {
            var value = event.target.checked;
            row.value[column.id] = value;
        };
        return BooleanEditorComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", dynamic_table_widget_model_1.DynamicTableModel)], BooleanEditorComponent.prototype, "table", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], BooleanEditorComponent.prototype, "row", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], BooleanEditorComponent.prototype, "column", void 0);
    BooleanEditorComponent = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'alf-boolean-editor',
        template: " <label class=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\" [attr.for]=\"column.id\">     <input         class=\"mdl-checkbox__input\"         type=\"checkbox\"         [attr.id]=\"column.id\"         [checked]=\"table.getCellValue(row, column)\"         [required]=\"column.required\"         [disabled]=\"!column.editable\"         (change)=\"onValueChanged(row, column, $event)\">     <span class=\"mdl-checkbox__label\">{{column.name}}</span> </label>",
        styles: [""]
    })], BooleanEditorComponent);
    exports.BooleanEditorComponent = BooleanEditorComponent;
});
$__System.registerDynamic("31", ["3", "2c"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var dynamic_table_widget_model_1 = $__require("2c");
    var TextEditorComponent = function () {
        function TextEditorComponent() {}
        TextEditorComponent.prototype.ngOnInit = function () {
            this.displayName = this.table.getDisplayText(this.column);
        };
        TextEditorComponent.prototype.onValueChanged = function (row, column, event) {
            var value = event.target.value;
            row.value[column.id] = value;
        };
        return TextEditorComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", dynamic_table_widget_model_1.DynamicTableModel)], TextEditorComponent.prototype, "table", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], TextEditorComponent.prototype, "row", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], TextEditorComponent.prototype, "column", void 0);
    TextEditorComponent = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'alf-text-editor',
        template: "<div alfresco-mdl-textfield class=\"text-editor\">     <input         class=\"mdl-textfield__input\"         type=\"text\"         [value]=\"table.getCellValue(row, column)\"         (keyup)=\"onValueChanged(row, column, $event)\"         [required]=\"column.required\"         [disabled]=\"!column.editable\"         [attr.id]=\"column.id\">     <label class=\"mdl-textfield__label\" [attr.for]=\"column.id\">{{displayName}}</label> </div>",
        styles: [".text-editor {     width: 100%; }"]
    })], TextEditorComponent);
    exports.TextEditorComponent = TextEditorComponent;
});
$__System.registerDynamic("2c", ["32", "25", "20"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_widget_model_1 = $__require("32");
    var form_field_model_1 = $__require("25");
    var moment = $__require("20");
    var DynamicTableModel = function (_super) {
        __extends(DynamicTableModel, _super);
        function DynamicTableModel(form, json) {
            var _this = _super.call(this, form, json) || this;
            _this.columns = [];
            _this.visibleColumns = [];
            _this.rows = [];
            _this._validators = [];
            if (json) {
                _this.field = new form_field_model_1.FormFieldModel(form, json);
                if (json.columnDefinitions) {
                    _this.columns = json.columnDefinitions.map(function (obj) {
                        return obj;
                    });
                    _this.visibleColumns = _this.columns.filter(function (col) {
                        return col.visible;
                    });
                }
                if (json.value) {
                    _this.rows = json.value.map(function (obj) {
                        return { selected: false, value: obj };
                    });
                }
            }
            _this._validators = [new RequiredCellValidator(), new DateCellValidator(), new NumberCellValidator()];
            return _this;
        }
        Object.defineProperty(DynamicTableModel.prototype, "selectedRow", {
            get: function () {
                return this._selectedRow;
            },
            set: function (value) {
                if (this._selectedRow && this._selectedRow === value) {
                    this._selectedRow.selected = false;
                    this._selectedRow = null;
                    return;
                }
                this.rows.forEach(function (row) {
                    return row.selected = false;
                });
                this._selectedRow = value;
                if (value) {
                    this._selectedRow.selected = true;
                }
            },
            enumerable: true,
            configurable: true
        });
        DynamicTableModel.prototype.flushValue = function () {
            if (this.field) {
                this.field.value = this.rows.map(function (r) {
                    return r.value;
                });
                this.field.updateForm();
            }
        };
        DynamicTableModel.prototype.moveRow = function (row, offset) {
            var oldIndex = this.rows.indexOf(row);
            if (oldIndex > -1) {
                var newIndex = oldIndex + offset;
                if (newIndex < 0) {
                    newIndex = 0;
                } else if (newIndex >= this.rows.length) {
                    newIndex = this.rows.length;
                }
                var arr = this.rows.slice();
                arr.splice(oldIndex, 1);
                arr.splice(newIndex, 0, row);
                this.rows = arr;
                this.flushValue();
            }
        };
        DynamicTableModel.prototype.deleteRow = function (row) {
            if (row) {
                if (this.selectedRow === row) {
                    this.selectedRow = null;
                }
                var idx = this.rows.indexOf(row);
                if (idx > -1) {
                    this.rows.splice(idx, 1);
                    this.flushValue();
                }
            }
        };
        DynamicTableModel.prototype.addRow = function (row) {
            if (row) {
                this.rows.push(row);
            }
        };
        DynamicTableModel.prototype.validateRow = function (row) {
            var summary = {
                isValid: true,
                text: null
            };
            if (row) {
                for (var _i = 0, _a = this.columns; _i < _a.length; _i++) {
                    var col = _a[_i];
                    for (var _b = 0, _c = this._validators; _b < _c.length; _b++) {
                        var validator = _c[_b];
                        if (!validator.validate(row, col, summary)) {
                            return summary;
                        }
                    }
                }
            }
            return summary;
        };
        DynamicTableModel.prototype.getCellValue = function (row, column) {
            var result = row.value[column.id];
            if (column.type === 'Dropdown') {
                if (result) {
                    return result.name;
                }
            }
            if (column.type === 'Boolean') {
                return result ? true : false;
            }
            if (column.type === 'Date') {
                if (result) {
                    return moment(result.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');
                }
            }
            return result || '';
        };
        DynamicTableModel.prototype.getDisplayText = function (column) {
            var result = column.name;
            if (column.type === 'Amount') {
                var currency = column.amountCurrency || '$';
                result = column.name + " (" + currency + ")";
            }
            return result;
        };
        return DynamicTableModel;
    }(form_widget_model_1.FormWidgetModel);
    exports.DynamicTableModel = DynamicTableModel;
    var RequiredCellValidator = function () {
        function RequiredCellValidator() {
            this.supportedTypes = ['String', 'Number', 'Amount', 'Date', 'Dropdown'];
        }
        RequiredCellValidator.prototype.isSupported = function (column) {
            return column && column.required && this.supportedTypes.indexOf(column.type) > -1;
        };
        RequiredCellValidator.prototype.validate = function (row, column, summary) {
            if (this.isSupported(column)) {
                var value = row.value[column.id];
                if (column.required) {
                    if (value === null || value === undefined || value === '') {
                        if (summary) {
                            summary.isValid = false;
                            summary.text = "Field '" + column.name + "' is required.";
                        }
                        return false;
                    }
                }
            }
            return true;
        };
        return RequiredCellValidator;
    }();
    exports.RequiredCellValidator = RequiredCellValidator;
    var DateCellValidator = function () {
        function DateCellValidator() {
            this.supportedTypes = ['Date'];
        }
        DateCellValidator.prototype.isSupported = function (column) {
            return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;
        };
        DateCellValidator.prototype.validate = function (row, column, summary) {
            if (this.isSupported(column)) {
                var value = row.value[column.id];
                var dateValue = moment(value, 'D-M-YYYY');
                if (!dateValue.isValid()) {
                    if (summary) {
                        summary.isValid = false;
                        summary.text = "Invalid '" + column.name + "' format.";
                    }
                    return false;
                }
            }
            return true;
        };
        return DateCellValidator;
    }();
    exports.DateCellValidator = DateCellValidator;
    var NumberCellValidator = function () {
        function NumberCellValidator() {
            this.supportedTypes = ['Number', 'Amount'];
        }
        NumberCellValidator.prototype.isSupported = function (column) {
            return column && column.required && this.supportedTypes.indexOf(column.type) > -1;
        };
        NumberCellValidator.prototype.isNumber = function (value) {
            if (value === null || value === undefined || value === '') {
                return false;
            }
            return !isNaN(+value);
        };
        NumberCellValidator.prototype.validate = function (row, column, summary) {
            if (this.isSupported(column)) {
                var value = row.value[column.id];
                if (value === null || value === undefined || value === '' || this.isNumber(value)) {
                    return true;
                }
                if (summary) {
                    summary.isValid = false;
                    summary.text = "Field '" + column.name + "' must be a number.";
                }
                return false;
            }
            return true;
        };
        return NumberCellValidator;
    }();
    exports.NumberCellValidator = NumberCellValidator;
});
$__System.registerDynamic("33", ["3", "2c"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var dynamic_table_widget_model_1 = $__require("2c");
    var RowEditorComponent = function () {
        function RowEditorComponent() {
            this.save = new core_1.EventEmitter();
            this.cancel = new core_1.EventEmitter();
            this.validationSummary = { isValid: true, text: null };
        }
        RowEditorComponent.prototype.onCancelChanges = function () {
            this.cancel.emit({
                table: this.table,
                row: this.row,
                column: this.column
            });
        };
        RowEditorComponent.prototype.onSaveChanges = function () {
            this.validate();
            if (this.isValid()) {
                this.save.emit({
                    table: this.table,
                    row: this.row,
                    column: this.column
                });
            }
        };
        RowEditorComponent.prototype.isValid = function () {
            return this.validationSummary && this.validationSummary.isValid;
        };
        RowEditorComponent.prototype.validate = function () {
            this.validationSummary = this.table.validateRow(this.row);
        };
        return RowEditorComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", dynamic_table_widget_model_1.DynamicTableModel)], RowEditorComponent.prototype, "table", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], RowEditorComponent.prototype, "row", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], RowEditorComponent.prototype, "column", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], RowEditorComponent.prototype, "save", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], RowEditorComponent.prototype, "cancel", void 0);
    RowEditorComponent = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'row-editor',
        template: "<div class=\"row-editor mdl-shadow--2dp\"     [class.row-editor__invalid]=\"!validationSummary.isValid\">     <div class=\"mdl-grid\" *ngFor=\"let column of table.columns\">         <div class=\"mdl-cell mdl-cell--6-col\" [ngSwitch]=\"column.type\">             <div *ngSwitchCase=\"'Dropdown'\">                 <alf-dropdown-editor                     [table]=\"table\"                     [row]=\"row\"                     [column]=\"column\">                 </alf-dropdown-editor>                 </div>                 <div *ngSwitchCase=\"'Date'\">                     <alf-date-editor                     [table]=\"table\"                     [row]=\"row\"                     [column]=\"column\">                 </alf-date-editor>                 </div>                  <div *ngSwitchCase=\"'Boolean'\">                 <alf-boolean-editor                     [table]=\"table\"                     [row]=\"row\"                     [column]=\"column\">                 </alf-boolean-editor>                 </div>                 <div *ngSwitchDefault>                 <alf-text-editor                     [table]=\"table\"                     [row]=\"row\"                     [column]=\"column\">                 </alf-text-editor>             </div>         </div>     </div>     <div class=\"row-editor__validation-summary\" *ngIf=\"!validationSummary.isValid\">{{validationSummary.text}}</div>     <div>         <button             class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"             (click)=\"onCancelChanges()\">Cancel</button>         <button             class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"             (click)=\"onSaveChanges()\">Save</button>     </div> </div>",
        styles: [".row-editor {     padding: 8px; }  .row-editor__validation-summary {     visibility: hidden; }  .row-editor__invalid .row-editor__validation-summary {     padding-left: 16px;     padding-right: 16px;     padding-top: 8px;     padding-bottom: 8px;     color: #d50000;     visibility: visible; }"]
    })], RowEditorComponent);
    exports.RowEditorComponent = RowEditorComponent;
});
$__System.registerDynamic("12", ["3", "7"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var index_1 = $__require("7");
    var WidgetComponent = function () {
        function WidgetComponent() {
            this.fieldChanged = new core_1.EventEmitter();
        }
        WidgetComponent.prototype.hasField = function () {
            return this.field ? true : false;
        };
        WidgetComponent.prototype.isRequired = function () {
            if (this.field && this.field.required) {
                return true;
            }
            return null;
        };
        WidgetComponent.prototype.hasValue = function () {
            return this.field && this.field.value !== null && this.field.value !== undefined;
        };
        WidgetComponent.prototype.ngAfterViewInit = function () {
            this.setupMaterialComponents(componentHandler);
            this.fieldChanged.emit(this.field);
        };
        WidgetComponent.prototype.setupMaterialComponents = function (handler) {
            if (handler) {
                handler.upgradeAllRegistered();
                return true;
            }
            return false;
        };
        WidgetComponent.prototype.setupMaterialTextField = function (elementRef, handler, value) {
            if (elementRef && handler) {
                var el = elementRef.nativeElement;
                if (el) {
                    var container = el.querySelector('.mdl-textfield');
                    if (container) {
                        container.MaterialTextfield.change(value);
                        return true;
                    }
                }
            }
            return false;
        };
        WidgetComponent.prototype.checkVisibility = function (field) {
            console.log('WidgetComponent.checkVisibility was used only to trigger visibility engine, components should do that internally if needed');
            this.fieldChanged.emit(field);
        };
        WidgetComponent.prototype.onFieldChanged = function (field) {
            console.log('WidgetComponent.onFieldChanged was used only to trigger visibility engine, components should do that internally if needed');
            this.fieldChanged.emit(field);
        };
        WidgetComponent.prototype.getHyperlinkUrl = function (field) {
            var url = WidgetComponent.DEFAULT_HYPERLINK_URL;
            if (field && field.hyperlinkUrl) {
                url = field.hyperlinkUrl;
                if (!/^https?:\/\//i.test(url)) {
                    url = "" + WidgetComponent.DEFAULT_HYPERLINK_SCHEME + url;
                }
            }
            return url;
        };
        WidgetComponent.prototype.getHyperlinkText = function (field) {
            if (field) {
                return field.displayText || field.hyperlinkUrl;
            }
            return null;
        };
        return WidgetComponent;
    }();
    WidgetComponent.DEFAULT_HYPERLINK_URL = '#';
    WidgetComponent.DEFAULT_HYPERLINK_SCHEME = 'http://';
    __decorate([core_1.Input(), __metadata("design:type", index_1.FormFieldModel)], WidgetComponent.prototype, "field", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], WidgetComponent.prototype, "fieldChanged", void 0);
    exports.WidgetComponent = WidgetComponent;
});
$__System.registerDynamic("25", ["32", "16", "34", "35", "20"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_widget_model_1 = $__require("32");
    var form_field_types_1 = $__require("16");
    var container_column_model_1 = $__require("34");
    var form_field_validator_1 = $__require("35");
    var moment = $__require("20");
    var FormFieldModel = function (_super) {
        __extends(FormFieldModel, _super);
        function FormFieldModel(form, json) {
            var _this = _super.call(this, form, json) || this;
            _this._readOnly = false;
            _this._isValid = true;
            _this.colspan = 1;
            _this.placeholder = null;
            _this.minLength = 0;
            _this.maxLength = 0;
            _this.options = [];
            _this.params = {};
            _this.isVisible = true;
            _this.visibilityCondition = null;
            _this.enableFractions = false;
            _this.currency = null;
            _this.numberOfColumns = 1;
            _this.fields = [];
            _this.columns = [];
            _this.validators = [];
            if (json) {
                _this.fieldType = json.fieldType;
                _this.id = json.id;
                _this.name = json.name;
                _this.type = json.type;
                _this.required = json.required;
                _this._readOnly = json.readOnly;
                _this.overrideId = json.overrideId;
                _this.tab = json.tab;
                _this.restUrl = json.restUrl;
                _this.restResponsePath = json.restResponsePath;
                _this.restIdProperty = json.restIdProperty;
                _this.restLabelProperty = json.restLabelProperty;
                _this.colspan = json.colspan;
                _this.minLength = json.minLength || 0;
                _this.maxLength = json.maxLength || 0;
                _this.minValue = json.minValue;
                _this.maxValue = json.maxValue;
                _this.regexPattern = json.regexPattern;
                _this.options = json.options || [];
                _this.hasEmptyValue = json.hasEmptyValue;
                _this.className = json.className;
                _this.optionType = json.optionType;
                _this.params = json.params || {};
                _this.hyperlinkUrl = json.hyperlinkUrl;
                _this.displayText = json.displayText;
                _this.visibilityCondition = json.visibilityCondition;
                _this.enableFractions = json.enableFractions;
                _this.currency = json.currency;
                _this._value = _this.parseValue(json);
                if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {
                    _this.placeholder = json.placeholder;
                }
                _this.numberOfColumns = json.numberOfColumns;
                var columnSize = 12;
                if (_this.numberOfColumns > 1) {
                    columnSize = 12 / _this.numberOfColumns;
                }
                for (var i = 0; i < _this.numberOfColumns; i++) {
                    var col = new container_column_model_1.ContainerColumnModel();
                    col.size = columnSize;
                    _this.columns.push(col);
                }
                if (json.fields) {
                    Object.keys(json.fields).map(function (key) {
                        var fields = (json.fields[key] || []).map(function (f) {
                            return new FormFieldModel(form, f);
                        });
                        var col = _this.columns[parseInt(key, 10) - 1];
                        col.fields = fields;
                        (_a = _this.fields).push.apply(_a, fields);
                        var _a;
                    });
                }
            }
            if (_this.hasEmptyValue && _this.options && _this.options.length > 0) {
                _this.emptyOption = _this.options[0];
            }
            _this.validators = [new form_field_validator_1.RequiredFieldValidator(), new form_field_validator_1.NumberFieldValidator(), new form_field_validator_1.MinLengthFieldValidator(), new form_field_validator_1.MaxLengthFieldValidator(), new form_field_validator_1.MinValueFieldValidator(), new form_field_validator_1.MaxValueFieldValidator(), new form_field_validator_1.RegExFieldValidator(), new form_field_validator_1.DateFieldValidator(), new form_field_validator_1.MinDateFieldValidator(), new form_field_validator_1.MaxDateFieldValidator()];
            _this.updateForm();
            return _this;
        }
        Object.defineProperty(FormFieldModel.prototype, "value", {
            get: function () {
                return this._value;
            },
            set: function (v) {
                this._value = v;
                this.validate();
                this.updateForm();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FormFieldModel.prototype, "readOnly", {
            get: function () {
                if (this.form && this.form.readOnly) {
                    return true;
                }
                return this._readOnly;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FormFieldModel.prototype, "isValid", {
            get: function () {
                return this._isValid;
            },
            enumerable: true,
            configurable: true
        });
        FormFieldModel.prototype.validate = function () {
            this.validationSummary = null;
            if (this.validators && this.validators.length > 0) {
                for (var i = 0; i < this.validators.length; i++) {
                    if (!this.validators[i].validate(this)) {
                        this._isValid = false;
                        return this._isValid;
                    }
                }
            }
            this._isValid = true;
            return this._isValid;
        };
        FormFieldModel.prototype.parseValue = function (json) {
            var value = json.value;
            if (json.type === form_field_types_1.FormFieldTypes.DROPDOWN) {
                if (json.hasEmptyValue && json.options) {
                    var options = json.options || [];
                    if (options.length > 0) {
                        var emptyOption = json.options[0];
                        if (value === '' || value === emptyOption.id || value === emptyOption.name) {
                            value = emptyOption.id;
                        }
                    }
                }
            }
            if (json.type === form_field_types_1.FormFieldTypes.RADIO_BUTTONS) {
                var entry = this.options.filter(function (opt) {
                    return opt.id === value || opt.name === value;
                });
                if (entry.length > 0) {
                    value = entry[0].id;
                }
            }
            if (json.type === form_field_types_1.FormFieldTypes.DATE) {
                if (value) {
                    var d = moment(value.split('T')[0], 'YYYY-M-D');
                    if (d.isValid()) {
                        value = d.format('D-M-YYYY');
                    }
                }
            }
            return value;
        };
        FormFieldModel.prototype.updateForm = function () {
            var _this = this;
            if (!this.form) {
                return;
            }
            switch (this.type) {
                case form_field_types_1.FormFieldTypes.DROPDOWN:
                    if (this.value === 'empty' || this.value === '') {
                        this.form.values[this.id] = {};
                    } else {
                        var entry = this.options.filter(function (opt) {
                            return opt.id === _this.value;
                        });
                        if (entry.length > 0) {
                            this.form.values[this.id] = entry[0];
                        }
                    }
                    break;
                case form_field_types_1.FormFieldTypes.RADIO_BUTTONS:
                    var rbEntry = this.options.filter(function (opt) {
                        return opt.id === _this.value;
                    });
                    if (rbEntry.length > 0) {
                        this.form.values[this.id] = rbEntry[0];
                    } else if (this.options.length > 0) {
                        this.form.values[this.id] = this.options[0];
                    }
                    break;
                case form_field_types_1.FormFieldTypes.UPLOAD:
                    if (this.value && this.value.length > 0) {
                        this.form.values[this.id] = "" + this.value[0].id;
                    } else {
                        this.form.values[this.id] = null;
                    }
                    break;
                case form_field_types_1.FormFieldTypes.TYPEAHEAD:
                    var taEntry = this.options.filter(function (opt) {
                        return opt.id === _this.value;
                    });
                    if (taEntry.length > 0) {
                        this.form.values[this.id] = taEntry[0];
                    } else if (this.options.length > 0) {
                        this.form.values[this.id] = null;
                    }
                    break;
                case form_field_types_1.FormFieldTypes.DATE:
                    var d = moment(this.value, 'D-M-YYYY');
                    if (d.isValid()) {
                        this.form.values[this.id] = d.format('YYYY-MM-DD') + "T00:00:00.000Z";
                    } else {
                        this.form.values[this.id] = null;
                    }
                    break;
                case form_field_types_1.FormFieldTypes.NUMBER:
                    this.form.values[this.id] = parseInt(this.value, 10);
                    break;
                case form_field_types_1.FormFieldTypes.AMOUNT:
                    this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);
                    break;
                default:
                    if (!form_field_types_1.FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {
                        this.form.values[this.id] = this.value;
                    }
            }
            this.form.onFormFieldChanged(this);
        };
        FormFieldModel.prototype.isInvalidFieldType = function (type) {
            if (type === 'container') {
                return true;
            } else {
                return false;
            }
        };
        return FormFieldModel;
    }(form_widget_model_1.FormWidgetModel);
    exports.FormFieldModel = FormFieldModel;
});
$__System.registerDynamic("36", ["15", "37", "38", "25", "16", "c"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var container_model_1 = $__require("15");
    var tab_model_1 = $__require("37");
    var form_outcome_model_1 = $__require("38");
    var form_field_model_1 = $__require("25");
    var form_field_types_1 = $__require("16");
    var index_1 = $__require("c");
    var FormModel = function () {
        function FormModel(json, data, readOnly, formService) {
            if (readOnly === void 0) {
                readOnly = false;
            }
            var _this = this;
            this.formService = formService;
            this.taskName = FormModel.UNSET_TASK_NAME;
            this._isValid = true;
            this.readOnly = false;
            this.tabs = [];
            this.fields = [];
            this.outcomes = [];
            this.customFieldTemplates = {};
            this.values = {};
            this.readOnly = readOnly;
            if (json) {
                this.json = json;
                this.id = json.id;
                this.name = json.name;
                this.taskId = json.taskId;
                this.taskName = json.taskName || json.name || FormModel.UNSET_TASK_NAME;
                this.processDefinitionId = json.processDefinitionId;
                this.customFieldTemplates = json.customFieldTemplates || {};
                this.selectedOutcome = json.selectedOutcome || {};
                var tabCache_1 = {};
                this.tabs = (json.tabs || []).map(function (t) {
                    var model = new tab_model_1.TabModel(_this, t);
                    tabCache_1[model.id] = model;
                    return model;
                });
                this.fields = this.parseRootFields(json);
                if (data) {
                    this.loadData(data);
                }
                for (var i = 0; i < this.fields.length; i++) {
                    var field = this.fields[i];
                    if (field.tab) {
                        var tab = tabCache_1[field.tab];
                        if (tab) {
                            tab.fields.push(field);
                        }
                    }
                }
                if (json.fields) {
                    var saveOutcome = new form_outcome_model_1.FormOutcomeModel(this, { id: FormModel.SAVE_OUTCOME, name: 'Save', isSystem: true });
                    var completeOutcome = new form_outcome_model_1.FormOutcomeModel(this, { id: FormModel.COMPLETE_OUTCOME, name: 'Complete', isSystem: true });
                    var startProcessOutcome = new form_outcome_model_1.FormOutcomeModel(this, { id: FormModel.START_PROCESS_OUTCOME, name: 'Start Process', isSystem: true });
                    var customOutcomes = (json.outcomes || []).map(function (obj) {
                        return new form_outcome_model_1.FormOutcomeModel(_this, obj);
                    });
                    this.outcomes = [saveOutcome].concat(customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]);
                }
            }
            this.validateForm();
        }
        Object.defineProperty(FormModel.prototype, "isValid", {
            get: function () {
                return this._isValid;
            },
            enumerable: true,
            configurable: true
        });
        FormModel.prototype.hasTabs = function () {
            return this.tabs && this.tabs.length > 0;
        };
        FormModel.prototype.hasFields = function () {
            return this.fields && this.fields.length > 0;
        };
        FormModel.prototype.hasOutcomes = function () {
            return this.outcomes && this.outcomes.length > 0;
        };
        FormModel.prototype.onFormFieldChanged = function (field) {
            this.validateField(field);
            if (this.formService) {
                this.formService.formFieldValueChanged.next(new index_1.FormFieldEvent(this, field));
            }
        };
        FormModel.prototype.getFormFields = function () {
            var result = [];
            for (var i = 0; i < this.fields.length; i++) {
                var field = this.fields[i];
                if (field instanceof container_model_1.ContainerModel) {
                    var container = field;
                    result.push(container.field);
                    result.push.apply(result, container.field.fields);
                }
            }
            return result;
        };
        FormModel.prototype.validateForm = function () {
            this._isValid = true;
            var fields = this.getFormFields();
            for (var i = 0; i < fields.length; i++) {
                if (!fields[i].validate()) {
                    this._isValid = false;
                    return;
                }
            }
        };
        FormModel.prototype.validateField = function (field) {
            if (!field) {
                return;
            }
            if (!field.validate()) {
                this._isValid = false;
                return;
            }
            this.validateForm();
        };
        FormModel.prototype.parseRootFields = function (json) {
            var fields = [];
            if (json.fields) {
                fields = json.fields;
            } else if (json.formDefinition && json.formDefinition.fields) {
                fields = json.formDefinition.fields;
            }
            var result = [];
            for (var _i = 0, fields_1 = fields; _i < fields_1.length; _i++) {
                var field = fields_1[_i];
                if (field.type === form_field_types_1.FormFieldTypes.DISPLAY_VALUE) {
                    if (field.params) {
                        var originalField = field.params['field'];
                        if (originalField.type === form_field_types_1.FormFieldTypes.DYNAMIC_TABLE) {
                            result.push(new container_model_1.ContainerModel(new form_field_model_1.FormFieldModel(this, field)));
                        }
                    }
                } else {
                    result.push(new container_model_1.ContainerModel(new form_field_model_1.FormFieldModel(this, field)));
                }
            }
            return result;
        };
        FormModel.prototype.loadData = function (data) {
            for (var _i = 0, _a = this.getFormFields(); _i < _a.length; _i++) {
                var field = _a[_i];
                if (data[field.id]) {
                    field.json.value = data[field.id];
                    field.value = data[field.id];
                }
            }
        };
        return FormModel;
    }();
    FormModel.UNSET_TASK_NAME = 'Nameless task';
    FormModel.SAVE_OUTCOME = '$save';
    FormModel.COMPLETE_OUTCOME = '$complete';
    FormModel.START_PROCESS_OUTCOME = '$startProcess';
    exports.FormModel = FormModel;
});
$__System.registerDynamic("15", ["32"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_widget_model_1 = $__require("32");
    var ContainerModel = function (_super) {
        __extends(ContainerModel, _super);
        function ContainerModel(field) {
            var _this = this;
            if (field) {
                _this = _super.call(this, field.form, field.json) || this;
                _this.field = field;
            }
            return _this;
        }
        Object.defineProperty(ContainerModel.prototype, "isVisible", {
            get: function () {
                return this.field.isVisible;
            },
            enumerable: true,
            configurable: true
        });
        return ContainerModel;
    }(form_widget_model_1.FormWidgetModel);
    exports.ContainerModel = ContainerModel;
});
$__System.registerDynamic("34", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var ContainerColumnModel = function () {
        function ContainerColumnModel() {
            this.size = 12;
            this.fields = [];
        }
        ContainerColumnModel.prototype.hasFields = function () {
            return this.fields && this.fields.length > 0;
        };
        return ContainerColumnModel;
    }();
    exports.ContainerColumnModel = ContainerColumnModel;
});
$__System.registerDynamic("37", ["32"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_widget_model_1 = $__require("32");
    var TabModel = function (_super) {
        __extends(TabModel, _super);
        function TabModel(form, json) {
            var _this = _super.call(this, form, json) || this;
            _this.isVisible = true;
            _this.fields = [];
            if (json) {
                _this.title = json.title;
                _this.visibilityCondition = json.visibilityCondition;
            }
            return _this;
        }
        TabModel.prototype.hasContent = function () {
            return this.fields && this.fields.length > 0;
        };
        return TabModel;
    }(form_widget_model_1.FormWidgetModel);
    exports.TabModel = TabModel;
});
$__System.registerDynamic("32", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var FormWidgetModel = function () {
        function FormWidgetModel(form, json) {
            this.form = form;
            this.json = json;
            if (json) {
                this.fieldType = json.fieldType;
                this.id = json.id;
                this.name = json.name;
                this.type = json.type;
                this.tab = json.tab;
            }
        }
        return FormWidgetModel;
    }();
    exports.FormWidgetModel = FormWidgetModel;
});
$__System.registerDynamic("38", ["32"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_widget_model_1 = $__require("32");
    var FormOutcomeModel = function (_super) {
        __extends(FormOutcomeModel, _super);
        function FormOutcomeModel(form, json) {
            var _this = _super.call(this, form, json) || this;
            _this.isSystem = false;
            _this.isSelected = false;
            if (json) {
                _this.isSystem = json.isSystem ? true : false;
                _this.isSelected = form && json.name === form.selectedOutcome ? true : false;
            }
            return _this;
        }
        return FormOutcomeModel;
    }(form_widget_model_1.FormWidgetModel);
    FormOutcomeModel.SAVE_ACTION = 'Save';
    FormOutcomeModel.COMPLETE_ACTION = 'Complete';
    FormOutcomeModel.START_PROCESS_ACTION = 'Start Process';
    exports.FormOutcomeModel = FormOutcomeModel;
});
$__System.registerDynamic("39", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var FormOutcomeEvent = function () {
        function FormOutcomeEvent(outcome) {
            this._defaultPrevented = false;
            this._outcome = outcome;
        }
        Object.defineProperty(FormOutcomeEvent.prototype, "outcome", {
            get: function () {
                return this._outcome;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FormOutcomeEvent.prototype, "defaultPrevented", {
            get: function () {
                return this._defaultPrevented;
            },
            enumerable: true,
            configurable: true
        });
        FormOutcomeEvent.prototype.preventDefault = function () {
            this._defaultPrevented = true;
        };
        return FormOutcomeEvent;
    }();
    exports.FormOutcomeEvent = FormOutcomeEvent;
});
$__System.registerDynamic('16', [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var FormFieldTypes = function () {
        function FormFieldTypes() {}
        FormFieldTypes.isReadOnlyType = function (type) {
            return FormFieldTypes.READONLY_TYPES.indexOf(type) > -1;
        };
        return FormFieldTypes;
    }();
    FormFieldTypes.CONTAINER = 'container';
    FormFieldTypes.GROUP = 'group';
    FormFieldTypes.DYNAMIC_TABLE = 'dynamic-table';
    FormFieldTypes.TEXT = 'text';
    FormFieldTypes.MULTILINE_TEXT = 'multi-line-text';
    FormFieldTypes.DROPDOWN = 'dropdown';
    FormFieldTypes.HYPERLINK = 'hyperlink';
    FormFieldTypes.RADIO_BUTTONS = 'radio-buttons';
    FormFieldTypes.DISPLAY_VALUE = 'readonly';
    FormFieldTypes.READONLY_TEXT = 'readonly-text';
    FormFieldTypes.UPLOAD = 'upload';
    FormFieldTypes.TYPEAHEAD = 'typeahead';
    FormFieldTypes.FUNCTIONAL_GROUP = 'functional-group';
    FormFieldTypes.PEOPLE = 'people';
    FormFieldTypes.BOOLEAN = 'boolean';
    FormFieldTypes.NUMBER = 'integer';
    FormFieldTypes.DATE = 'date';
    FormFieldTypes.AMOUNT = 'amount';
    FormFieldTypes.READONLY_TYPES = [FormFieldTypes.HYPERLINK, FormFieldTypes.DISPLAY_VALUE, FormFieldTypes.READONLY_TEXT];
    exports.FormFieldTypes = FormFieldTypes;
});
(function() {
var define = $__System.amdDefine;
!function(a, b) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = b() : "function" == typeof define && define.amd ? define("20", [], b) : a.moment = b();
}(this, function() {
  "use strict";
  function a() {
    return md.apply(null, arguments);
  }
  function b(a) {
    md = a;
  }
  function c(a) {
    return a instanceof Array || "[object Array]" === Object.prototype.toString.call(a);
  }
  function d(a) {
    return null != a && "[object Object]" === Object.prototype.toString.call(a);
  }
  function e(a) {
    var b;
    for (b in a)
      return !1;
    return !0;
  }
  function f(a) {
    return a instanceof Date || "[object Date]" === Object.prototype.toString.call(a);
  }
  function g(a, b) {
    var c,
        d = [];
    for (c = 0; c < a.length; ++c)
      d.push(b(a[c], c));
    return d;
  }
  function h(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
  }
  function i(a, b) {
    for (var c in b)
      h(b, c) && (a[c] = b[c]);
    return h(b, "toString") && (a.toString = b.toString), h(b, "valueOf") && (a.valueOf = b.valueOf), a;
  }
  function j(a, b, c, d) {
    return qb(a, b, c, d, !0).utc();
  }
  function k() {
    return {
      empty: !1,
      unusedTokens: [],
      unusedInput: [],
      overflow: -2,
      charsLeftOver: 0,
      nullInput: !1,
      invalidMonth: null,
      invalidFormat: !1,
      userInvalidated: !1,
      iso: !1,
      parsedDateParts: [],
      meridiem: null
    };
  }
  function l(a) {
    return null == a._pf && (a._pf = k()), a._pf;
  }
  function m(a) {
    if (null == a._isValid) {
      var b = l(a),
          c = nd.call(b.parsedDateParts, function(a) {
            return null != a;
          }),
          d = !isNaN(a._d.getTime()) && b.overflow < 0 && !b.empty && !b.invalidMonth && !b.invalidWeekday && !b.nullInput && !b.invalidFormat && !b.userInvalidated && (!b.meridiem || b.meridiem && c);
      if (a._strict && (d = d && 0 === b.charsLeftOver && 0 === b.unusedTokens.length && void 0 === b.bigHour), null != Object.isFrozen && Object.isFrozen(a))
        return d;
      a._isValid = d;
    }
    return a._isValid;
  }
  function n(a) {
    var b = j(NaN);
    return null != a ? i(l(b), a) : l(b).userInvalidated = !0, b;
  }
  function o(a) {
    return void 0 === a;
  }
  function p(a, b) {
    var c,
        d,
        e;
    if (o(b._isAMomentObject) || (a._isAMomentObject = b._isAMomentObject), o(b._i) || (a._i = b._i), o(b._f) || (a._f = b._f), o(b._l) || (a._l = b._l), o(b._strict) || (a._strict = b._strict), o(b._tzm) || (a._tzm = b._tzm), o(b._isUTC) || (a._isUTC = b._isUTC), o(b._offset) || (a._offset = b._offset), o(b._pf) || (a._pf = l(b)), o(b._locale) || (a._locale = b._locale), od.length > 0)
      for (c in od)
        d = od[c], e = b[d], o(e) || (a[d] = e);
    return a;
  }
  function q(b) {
    p(this, b), this._d = new Date(null != b._d ? b._d.getTime() : NaN), pd === !1 && (pd = !0, a.updateOffset(this), pd = !1);
  }
  function r(a) {
    return a instanceof q || null != a && null != a._isAMomentObject;
  }
  function s(a) {
    return 0 > a ? Math.ceil(a) || 0 : Math.floor(a);
  }
  function t(a) {
    var b = +a,
        c = 0;
    return 0 !== b && isFinite(b) && (c = s(b)), c;
  }
  function u(a, b, c) {
    var d,
        e = Math.min(a.length, b.length),
        f = Math.abs(a.length - b.length),
        g = 0;
    for (d = 0; e > d; d++)
      (c && a[d] !== b[d] || !c && t(a[d]) !== t(b[d])) && g++;
    return g + f;
  }
  function v(b) {
    a.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + b);
  }
  function w(b, c) {
    var d = !0;
    return i(function() {
      if (null != a.deprecationHandler && a.deprecationHandler(null, b), d) {
        for (var e,
            f = [],
            g = 0; g < arguments.length; g++) {
          if (e = "", "object" == typeof arguments[g]) {
            e += "\n[" + g + "] ";
            for (var h in arguments[0])
              e += h + ": " + arguments[0][h] + ", ";
            e = e.slice(0, -2);
          } else
            e = arguments[g];
          f.push(e);
        }
        v(b + "\nArguments: " + Array.prototype.slice.call(f).join("") + "\n" + (new Error).stack), d = !1;
      }
      return c.apply(this, arguments);
    }, c);
  }
  function x(b, c) {
    null != a.deprecationHandler && a.deprecationHandler(b, c), qd[b] || (v(c), qd[b] = !0);
  }
  function y(a) {
    return a instanceof Function || "[object Function]" === Object.prototype.toString.call(a);
  }
  function z(a) {
    var b,
        c;
    for (c in a)
      b = a[c], y(b) ? this[c] = b : this["_" + c] = b;
    this._config = a, this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + /\d{1,2}/.source);
  }
  function A(a, b) {
    var c,
        e = i({}, a);
    for (c in b)
      h(b, c) && (d(a[c]) && d(b[c]) ? (e[c] = {}, i(e[c], a[c]), i(e[c], b[c])) : null != b[c] ? e[c] = b[c] : delete e[c]);
    for (c in a)
      h(a, c) && !h(b, c) && d(a[c]) && (e[c] = i({}, e[c]));
    return e;
  }
  function B(a) {
    null != a && this.set(a);
  }
  function C(a, b, c) {
    var d = this._calendar[a] || this._calendar.sameElse;
    return y(d) ? d.call(b, c) : d;
  }
  function D(a) {
    var b = this._longDateFormat[a],
        c = this._longDateFormat[a.toUpperCase()];
    return b || !c ? b : (this._longDateFormat[a] = c.replace(/MMMM|MM|DD|dddd/g, function(a) {
      return a.slice(1);
    }), this._longDateFormat[a]);
  }
  function E() {
    return this._invalidDate;
  }
  function F(a) {
    return this._ordinal.replace("%d", a);
  }
  function G(a, b, c, d) {
    var e = this._relativeTime[c];
    return y(e) ? e(a, b, c, d) : e.replace(/%d/i, a);
  }
  function H(a, b) {
    var c = this._relativeTime[a > 0 ? "future" : "past"];
    return y(c) ? c(b) : c.replace(/%s/i, b);
  }
  function I(a, b) {
    var c = a.toLowerCase();
    zd[c] = zd[c + "s"] = zd[b] = a;
  }
  function J(a) {
    return "string" == typeof a ? zd[a] || zd[a.toLowerCase()] : void 0;
  }
  function K(a) {
    var b,
        c,
        d = {};
    for (c in a)
      h(a, c) && (b = J(c), b && (d[b] = a[c]));
    return d;
  }
  function L(a, b) {
    Ad[a] = b;
  }
  function M(a) {
    var b = [];
    for (var c in a)
      b.push({
        unit: c,
        priority: Ad[c]
      });
    return b.sort(function(a, b) {
      return a.priority - b.priority;
    }), b;
  }
  function N(b, c) {
    return function(d) {
      return null != d ? (P(this, b, d), a.updateOffset(this, c), this) : O(this, b);
    };
  }
  function O(a, b) {
    return a.isValid() ? a._d["get" + (a._isUTC ? "UTC" : "") + b]() : NaN;
  }
  function P(a, b, c) {
    a.isValid() && a._d["set" + (a._isUTC ? "UTC" : "") + b](c);
  }
  function Q(a) {
    return a = J(a), y(this[a]) ? this[a]() : this;
  }
  function R(a, b) {
    if ("object" == typeof a) {
      a = K(a);
      for (var c = M(a),
          d = 0; d < c.length; d++)
        this[c[d].unit](a[c[d].unit]);
    } else if (a = J(a), y(this[a]))
      return this[a](b);
    return this;
  }
  function S(a, b, c) {
    var d = "" + Math.abs(a),
        e = b - d.length,
        f = a >= 0;
    return (f ? c ? "+" : "" : "-") + Math.pow(10, Math.max(0, e)).toString().substr(1) + d;
  }
  function T(a, b, c, d) {
    var e = d;
    "string" == typeof d && (e = function() {
      return this[d]();
    }), a && (Ed[a] = e), b && (Ed[b[0]] = function() {
      return S(e.apply(this, arguments), b[1], b[2]);
    }), c && (Ed[c] = function() {
      return this.localeData().ordinal(e.apply(this, arguments), a);
    });
  }
  function U(a) {
    return a.match(/\[[\s\S]/) ? a.replace(/^\[|\]$/g, "") : a.replace(/\\/g, "");
  }
  function V(a) {
    var b,
        c,
        d = a.match(Bd);
    for (b = 0, c = d.length; c > b; b++)
      Ed[d[b]] ? d[b] = Ed[d[b]] : d[b] = U(d[b]);
    return function(b) {
      var e,
          f = "";
      for (e = 0; c > e; e++)
        f += d[e] instanceof Function ? d[e].call(b, a) : d[e];
      return f;
    };
  }
  function W(a, b) {
    return a.isValid() ? (b = X(b, a.localeData()), Dd[b] = Dd[b] || V(b), Dd[b](a)) : a.localeData().invalidDate();
  }
  function X(a, b) {
    function c(a) {
      return b.longDateFormat(a) || a;
    }
    var d = 5;
    for (Cd.lastIndex = 0; d >= 0 && Cd.test(a); )
      a = a.replace(Cd, c), Cd.lastIndex = 0, d -= 1;
    return a;
  }
  function Y(a, b, c) {
    Wd[a] = y(b) ? b : function(a, d) {
      return a && c ? c : b;
    };
  }
  function Z(a, b) {
    return h(Wd, a) ? Wd[a](b._strict, b._locale) : new RegExp($(a));
  }
  function $(a) {
    return _(a.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(a, b, c, d, e) {
      return b || c || d || e;
    }));
  }
  function _(a) {
    return a.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
  }
  function aa(a, b) {
    var c,
        d = b;
    for ("string" == typeof a && (a = [a]), "number" == typeof b && (d = function(a, c) {
      c[b] = t(a);
    }), c = 0; c < a.length; c++)
      Xd[a[c]] = d;
  }
  function ba(a, b) {
    aa(a, function(a, c, d, e) {
      d._w = d._w || {}, b(a, d._w, d, e);
    });
  }
  function ca(a, b, c) {
    null != b && h(Xd, a) && Xd[a](b, c._a, c, a);
  }
  function da(a, b) {
    return new Date(Date.UTC(a, b + 1, 0)).getUTCDate();
  }
  function ea(a, b) {
    return a ? c(this._months) ? this._months[a.month()] : this._months[(this._months.isFormat || fe).test(b) ? "format" : "standalone"][a.month()] : this._months;
  }
  function fa(a, b) {
    return a ? c(this._monthsShort) ? this._monthsShort[a.month()] : this._monthsShort[fe.test(b) ? "format" : "standalone"][a.month()] : this._monthsShort;
  }
  function ga(a, b, c) {
    var d,
        e,
        f,
        g = a.toLocaleLowerCase();
    if (!this._monthsParse)
      for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], d = 0; 12 > d; ++d)
        f = j([2e3, d]), this._shortMonthsParse[d] = this.monthsShort(f, "").toLocaleLowerCase(), this._longMonthsParse[d] = this.months(f, "").toLocaleLowerCase();
    return c ? "MMM" === b ? (e = sd.call(this._shortMonthsParse, g), -1 !== e ? e : null) : (e = sd.call(this._longMonthsParse, g), -1 !== e ? e : null) : "MMM" === b ? (e = sd.call(this._shortMonthsParse, g), -1 !== e ? e : (e = sd.call(this._longMonthsParse, g), -1 !== e ? e : null)) : (e = sd.call(this._longMonthsParse, g), -1 !== e ? e : (e = sd.call(this._shortMonthsParse, g), -1 !== e ? e : null));
  }
  function ha(a, b, c) {
    var d,
        e,
        f;
    if (this._monthsParseExact)
      return ga.call(this, a, b, c);
    for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), d = 0; 12 > d; d++) {
      if (e = j([2e3, d]), c && !this._longMonthsParse[d] && (this._longMonthsParse[d] = new RegExp("^" + this.months(e, "").replace(".", "") + "$", "i"), this._shortMonthsParse[d] = new RegExp("^" + this.monthsShort(e, "").replace(".", "") + "$", "i")), c || this._monthsParse[d] || (f = "^" + this.months(e, "") + "|^" + this.monthsShort(e, ""), this._monthsParse[d] = new RegExp(f.replace(".", ""), "i")), c && "MMMM" === b && this._longMonthsParse[d].test(a))
        return d;
      if (c && "MMM" === b && this._shortMonthsParse[d].test(a))
        return d;
      if (!c && this._monthsParse[d].test(a))
        return d;
    }
  }
  function ia(a, b) {
    var c;
    if (!a.isValid())
      return a;
    if ("string" == typeof b)
      if (/^\d+$/.test(b))
        b = t(b);
      else if (b = a.localeData().monthsParse(b), "number" != typeof b)
        return a;
    return c = Math.min(a.date(), da(a.year(), b)), a._d["set" + (a._isUTC ? "UTC" : "") + "Month"](b, c), a;
  }
  function ja(b) {
    return null != b ? (ia(this, b), a.updateOffset(this, !0), this) : O(this, "Month");
  }
  function ka() {
    return da(this.year(), this.month());
  }
  function la(a) {
    return this._monthsParseExact ? (h(this, "_monthsRegex") || na.call(this), a ? this._monthsShortStrictRegex : this._monthsShortRegex) : (h(this, "_monthsShortRegex") || (this._monthsShortRegex = ie), this._monthsShortStrictRegex && a ? this._monthsShortStrictRegex : this._monthsShortRegex);
  }
  function ma(a) {
    return this._monthsParseExact ? (h(this, "_monthsRegex") || na.call(this), a ? this._monthsStrictRegex : this._monthsRegex) : (h(this, "_monthsRegex") || (this._monthsRegex = je), this._monthsStrictRegex && a ? this._monthsStrictRegex : this._monthsRegex);
  }
  function na() {
    function a(a, b) {
      return b.length - a.length;
    }
    var b,
        c,
        d = [],
        e = [],
        f = [];
    for (b = 0; 12 > b; b++)
      c = j([2e3, b]), d.push(this.monthsShort(c, "")), e.push(this.months(c, "")), f.push(this.months(c, "")), f.push(this.monthsShort(c, ""));
    for (d.sort(a), e.sort(a), f.sort(a), b = 0; 12 > b; b++)
      d[b] = _(d[b]), e[b] = _(e[b]);
    for (b = 0; 24 > b; b++)
      f[b] = _(f[b]);
    this._monthsRegex = new RegExp("^(" + f.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + e.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + d.join("|") + ")", "i");
  }
  function oa(a) {
    return pa(a) ? 366 : 365;
  }
  function pa(a) {
    return a % 4 === 0 && a % 100 !== 0 || a % 400 === 0;
  }
  function qa() {
    return pa(this.year());
  }
  function ra(a, b, c, d, e, f, g) {
    var h = new Date(a, b, c, d, e, f, g);
    return 100 > a && a >= 0 && isFinite(h.getFullYear()) && h.setFullYear(a), h;
  }
  function sa(a) {
    var b = new Date(Date.UTC.apply(null, arguments));
    return 100 > a && a >= 0 && isFinite(b.getUTCFullYear()) && b.setUTCFullYear(a), b;
  }
  function ta(a, b, c) {
    var d = 7 + b - c,
        e = (7 + sa(a, 0, d).getUTCDay() - b) % 7;
    return -e + d - 1;
  }
  function ua(a, b, c, d, e) {
    var f,
        g,
        h = (7 + c - d) % 7,
        i = ta(a, d, e),
        j = 1 + 7 * (b - 1) + h + i;
    return 0 >= j ? (f = a - 1, g = oa(f) + j) : j > oa(a) ? (f = a + 1, g = j - oa(a)) : (f = a, g = j), {
      year: f,
      dayOfYear: g
    };
  }
  function va(a, b, c) {
    var d,
        e,
        f = ta(a.year(), b, c),
        g = Math.floor((a.dayOfYear() - f - 1) / 7) + 1;
    return 1 > g ? (e = a.year() - 1, d = g + wa(e, b, c)) : g > wa(a.year(), b, c) ? (d = g - wa(a.year(), b, c), e = a.year() + 1) : (e = a.year(), d = g), {
      week: d,
      year: e
    };
  }
  function wa(a, b, c) {
    var d = ta(a, b, c),
        e = ta(a + 1, b, c);
    return (oa(a) - d + e) / 7;
  }
  function xa(a) {
    return va(a, this._week.dow, this._week.doy).week;
  }
  function ya() {
    return this._week.dow;
  }
  function za() {
    return this._week.doy;
  }
  function Aa(a) {
    var b = this.localeData().week(this);
    return null == a ? b : this.add(7 * (a - b), "d");
  }
  function Ba(a) {
    var b = va(this, 1, 4).week;
    return null == a ? b : this.add(7 * (a - b), "d");
  }
  function Ca(a, b) {
    return "string" != typeof a ? a : isNaN(a) ? (a = b.weekdaysParse(a), "number" == typeof a ? a : null) : parseInt(a, 10);
  }
  function Da(a, b) {
    return "string" == typeof a ? b.weekdaysParse(a) % 7 || 7 : isNaN(a) ? null : a;
  }
  function Ea(a, b) {
    return a ? c(this._weekdays) ? this._weekdays[a.day()] : this._weekdays[this._weekdays.isFormat.test(b) ? "format" : "standalone"][a.day()] : this._weekdays;
  }
  function Fa(a) {
    return a ? this._weekdaysShort[a.day()] : this._weekdaysShort;
  }
  function Ga(a) {
    return a ? this._weekdaysMin[a.day()] : this._weekdaysMin;
  }
  function Ha(a, b, c) {
    var d,
        e,
        f,
        g = a.toLocaleLowerCase();
    if (!this._weekdaysParse)
      for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], d = 0; 7 > d; ++d)
        f = j([2e3, 1]).day(d), this._minWeekdaysParse[d] = this.weekdaysMin(f, "").toLocaleLowerCase(), this._shortWeekdaysParse[d] = this.weekdaysShort(f, "").toLocaleLowerCase(), this._weekdaysParse[d] = this.weekdays(f, "").toLocaleLowerCase();
    return c ? "dddd" === b ? (e = sd.call(this._weekdaysParse, g), -1 !== e ? e : null) : "ddd" === b ? (e = sd.call(this._shortWeekdaysParse, g), -1 !== e ? e : null) : (e = sd.call(this._minWeekdaysParse, g), -1 !== e ? e : null) : "dddd" === b ? (e = sd.call(this._weekdaysParse, g), -1 !== e ? e : (e = sd.call(this._shortWeekdaysParse, g), -1 !== e ? e : (e = sd.call(this._minWeekdaysParse, g), -1 !== e ? e : null))) : "ddd" === b ? (e = sd.call(this._shortWeekdaysParse, g), -1 !== e ? e : (e = sd.call(this._weekdaysParse, g), -1 !== e ? e : (e = sd.call(this._minWeekdaysParse, g), -1 !== e ? e : null))) : (e = sd.call(this._minWeekdaysParse, g), -1 !== e ? e : (e = sd.call(this._weekdaysParse, g), -1 !== e ? e : (e = sd.call(this._shortWeekdaysParse, g), -1 !== e ? e : null)));
  }
  function Ia(a, b, c) {
    var d,
        e,
        f;
    if (this._weekdaysParseExact)
      return Ha.call(this, a, b, c);
    for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), d = 0; 7 > d; d++) {
      if (e = j([2e3, 1]).day(d), c && !this._fullWeekdaysParse[d] && (this._fullWeekdaysParse[d] = new RegExp("^" + this.weekdays(e, "").replace(".", ".?") + "$", "i"), this._shortWeekdaysParse[d] = new RegExp("^" + this.weekdaysShort(e, "").replace(".", ".?") + "$", "i"), this._minWeekdaysParse[d] = new RegExp("^" + this.weekdaysMin(e, "").replace(".", ".?") + "$", "i")), this._weekdaysParse[d] || (f = "^" + this.weekdays(e, "") + "|^" + this.weekdaysShort(e, "") + "|^" + this.weekdaysMin(e, ""), this._weekdaysParse[d] = new RegExp(f.replace(".", ""), "i")), c && "dddd" === b && this._fullWeekdaysParse[d].test(a))
        return d;
      if (c && "ddd" === b && this._shortWeekdaysParse[d].test(a))
        return d;
      if (c && "dd" === b && this._minWeekdaysParse[d].test(a))
        return d;
      if (!c && this._weekdaysParse[d].test(a))
        return d;
    }
  }
  function Ja(a) {
    if (!this.isValid())
      return null != a ? this : NaN;
    var b = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    return null != a ? (a = Ca(a, this.localeData()), this.add(a - b, "d")) : b;
  }
  function Ka(a) {
    if (!this.isValid())
      return null != a ? this : NaN;
    var b = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return null == a ? b : this.add(a - b, "d");
  }
  function La(a) {
    if (!this.isValid())
      return null != a ? this : NaN;
    if (null != a) {
      var b = Da(a, this.localeData());
      return this.day(this.day() % 7 ? b : b - 7);
    }
    return this.day() || 7;
  }
  function Ma(a) {
    return this._weekdaysParseExact ? (h(this, "_weekdaysRegex") || Pa.call(this), a ? this._weekdaysStrictRegex : this._weekdaysRegex) : (h(this, "_weekdaysRegex") || (this._weekdaysRegex = pe), this._weekdaysStrictRegex && a ? this._weekdaysStrictRegex : this._weekdaysRegex);
  }
  function Na(a) {
    return this._weekdaysParseExact ? (h(this, "_weekdaysRegex") || Pa.call(this), a ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (h(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = qe), this._weekdaysShortStrictRegex && a ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
  }
  function Oa(a) {
    return this._weekdaysParseExact ? (h(this, "_weekdaysRegex") || Pa.call(this), a ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (h(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = re), this._weekdaysMinStrictRegex && a ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
  }
  function Pa() {
    function a(a, b) {
      return b.length - a.length;
    }
    var b,
        c,
        d,
        e,
        f,
        g = [],
        h = [],
        i = [],
        k = [];
    for (b = 0; 7 > b; b++)
      c = j([2e3, 1]).day(b), d = this.weekdaysMin(c, ""), e = this.weekdaysShort(c, ""), f = this.weekdays(c, ""), g.push(d), h.push(e), i.push(f), k.push(d), k.push(e), k.push(f);
    for (g.sort(a), h.sort(a), i.sort(a), k.sort(a), b = 0; 7 > b; b++)
      h[b] = _(h[b]), i[b] = _(i[b]), k[b] = _(k[b]);
    this._weekdaysRegex = new RegExp("^(" + k.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + i.join("|") + ")", "i"), this._weekdaysShortStrictRegex = new RegExp("^(" + h.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + g.join("|") + ")", "i");
  }
  function Qa() {
    return this.hours() % 12 || 12;
  }
  function Ra() {
    return this.hours() || 24;
  }
  function Sa(a, b) {
    T(a, 0, 0, function() {
      return this.localeData().meridiem(this.hours(), this.minutes(), b);
    });
  }
  function Ta(a, b) {
    return b._meridiemParse;
  }
  function Ua(a) {
    return "p" === (a + "").toLowerCase().charAt(0);
  }
  function Va(a, b, c) {
    return a > 11 ? c ? "pm" : "PM" : c ? "am" : "AM";
  }
  function Wa(a) {
    return a ? a.toLowerCase().replace("_", "-") : a;
  }
  function Xa(a) {
    for (var b,
        c,
        d,
        e,
        f = 0; f < a.length; ) {
      for (e = Wa(a[f]).split("-"), b = e.length, c = Wa(a[f + 1]), c = c ? c.split("-") : null; b > 0; ) {
        if (d = Ya(e.slice(0, b).join("-")))
          return d;
        if (c && c.length >= b && u(e, c, !0) >= b - 1)
          break;
        b--;
      }
      f++;
    }
    return null;
  }
  function Ya(a) {
    var b = null;
    if (!we[a] && "undefined" != typeof module && module && module.exports)
      try {
        b = se._abbr, require("./locale/" + a), Za(b);
      } catch (c) {}
    return we[a];
  }
  function Za(a, b) {
    var c;
    return a && (c = o(b) ? ab(a) : $a(a, b), c && (se = c)), se._abbr;
  }
  function $a(a, b) {
    if (null !== b) {
      var c = ve;
      return b.abbr = a, null != we[a] ? (x("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), c = we[a]._config) : null != b.parentLocale && (null != we[b.parentLocale] ? c = we[b.parentLocale]._config : x("parentLocaleUndefined", "specified parentLocale is not defined yet. See http://momentjs.com/guides/#/warnings/parent-locale/")), we[a] = new B(A(c, b)), Za(a), we[a];
    }
    return delete we[a], null;
  }
  function _a(a, b) {
    if (null != b) {
      var c,
          d = ve;
      null != we[a] && (d = we[a]._config), b = A(d, b), c = new B(b), c.parentLocale = we[a], we[a] = c, Za(a);
    } else
      null != we[a] && (null != we[a].parentLocale ? we[a] = we[a].parentLocale : null != we[a] && delete we[a]);
    return we[a];
  }
  function ab(a) {
    var b;
    if (a && a._locale && a._locale._abbr && (a = a._locale._abbr), !a)
      return se;
    if (!c(a)) {
      if (b = Ya(a))
        return b;
      a = [a];
    }
    return Xa(a);
  }
  function bb() {
    return rd(we);
  }
  function cb(a) {
    var b,
        c = a._a;
    return c && -2 === l(a).overflow && (b = c[Zd] < 0 || c[Zd] > 11 ? Zd : c[$d] < 1 || c[$d] > da(c[Yd], c[Zd]) ? $d : c[_d] < 0 || c[_d] > 24 || 24 === c[_d] && (0 !== c[ae] || 0 !== c[be] || 0 !== c[ce]) ? _d : c[ae] < 0 || c[ae] > 59 ? ae : c[be] < 0 || c[be] > 59 ? be : c[ce] < 0 || c[ce] > 999 ? ce : -1, l(a)._overflowDayOfYear && (Yd > b || b > $d) && (b = $d), l(a)._overflowWeeks && -1 === b && (b = de), l(a)._overflowWeekday && -1 === b && (b = ee), l(a).overflow = b), a;
  }
  function db(a) {
    var b,
        c,
        d,
        e,
        f,
        g,
        h = a._i,
        i = xe.exec(h) || ye.exec(h);
    if (i) {
      for (l(a).iso = !0, b = 0, c = Ae.length; c > b; b++)
        if (Ae[b][1].exec(i[1])) {
          e = Ae[b][0], d = Ae[b][2] !== !1;
          break;
        }
      if (null == e)
        return void(a._isValid = !1);
      if (i[3]) {
        for (b = 0, c = Be.length; c > b; b++)
          if (Be[b][1].exec(i[3])) {
            f = (i[2] || " ") + Be[b][0];
            break;
          }
        if (null == f)
          return void(a._isValid = !1);
      }
      if (!d && null != f)
        return void(a._isValid = !1);
      if (i[4]) {
        if (!ze.exec(i[4]))
          return void(a._isValid = !1);
        g = "Z";
      }
      a._f = e + (f || "") + (g || ""), jb(a);
    } else
      a._isValid = !1;
  }
  function eb(b) {
    var c = Ce.exec(b._i);
    return null !== c ? void(b._d = new Date(+c[1])) : (db(b), void(b._isValid === !1 && (delete b._isValid, a.createFromInputFallback(b))));
  }
  function fb(a, b, c) {
    return null != a ? a : null != b ? b : c;
  }
  function gb(b) {
    var c = new Date(a.now());
    return b._useUTC ? [c.getUTCFullYear(), c.getUTCMonth(), c.getUTCDate()] : [c.getFullYear(), c.getMonth(), c.getDate()];
  }
  function hb(a) {
    var b,
        c,
        d,
        e,
        f = [];
    if (!a._d) {
      for (d = gb(a), a._w && null == a._a[$d] && null == a._a[Zd] && ib(a), a._dayOfYear && (e = fb(a._a[Yd], d[Yd]), a._dayOfYear > oa(e) && (l(a)._overflowDayOfYear = !0), c = sa(e, 0, a._dayOfYear), a._a[Zd] = c.getUTCMonth(), a._a[$d] = c.getUTCDate()), b = 0; 3 > b && null == a._a[b]; ++b)
        a._a[b] = f[b] = d[b];
      for (; 7 > b; b++)
        a._a[b] = f[b] = null == a._a[b] ? 2 === b ? 1 : 0 : a._a[b];
      24 === a._a[_d] && 0 === a._a[ae] && 0 === a._a[be] && 0 === a._a[ce] && (a._nextDay = !0, a._a[_d] = 0), a._d = (a._useUTC ? sa : ra).apply(null, f), null != a._tzm && a._d.setUTCMinutes(a._d.getUTCMinutes() - a._tzm), a._nextDay && (a._a[_d] = 24);
    }
  }
  function ib(a) {
    var b,
        c,
        d,
        e,
        f,
        g,
        h,
        i;
    b = a._w, null != b.GG || null != b.W || null != b.E ? (f = 1, g = 4, c = fb(b.GG, a._a[Yd], va(rb(), 1, 4).year), d = fb(b.W, 1), e = fb(b.E, 1), (1 > e || e > 7) && (i = !0)) : (f = a._locale._week.dow, g = a._locale._week.doy, c = fb(b.gg, a._a[Yd], va(rb(), f, g).year), d = fb(b.w, 1), null != b.d ? (e = b.d, (0 > e || e > 6) && (i = !0)) : null != b.e ? (e = b.e + f, (b.e < 0 || b.e > 6) && (i = !0)) : e = f), 1 > d || d > wa(c, f, g) ? l(a)._overflowWeeks = !0 : null != i ? l(a)._overflowWeekday = !0 : (h = ua(c, d, e, f, g), a._a[Yd] = h.year, a._dayOfYear = h.dayOfYear);
  }
  function jb(b) {
    if (b._f === a.ISO_8601)
      return void db(b);
    b._a = [], l(b).empty = !0;
    var c,
        d,
        e,
        f,
        g,
        h = "" + b._i,
        i = h.length,
        j = 0;
    for (e = X(b._f, b._locale).match(Bd) || [], c = 0; c < e.length; c++)
      f = e[c], d = (h.match(Z(f, b)) || [])[0], d && (g = h.substr(0, h.indexOf(d)), g.length > 0 && l(b).unusedInput.push(g), h = h.slice(h.indexOf(d) + d.length), j += d.length), Ed[f] ? (d ? l(b).empty = !1 : l(b).unusedTokens.push(f), ca(f, d, b)) : b._strict && !d && l(b).unusedTokens.push(f);
    l(b).charsLeftOver = i - j, h.length > 0 && l(b).unusedInput.push(h), b._a[_d] <= 12 && l(b).bigHour === !0 && b._a[_d] > 0 && (l(b).bigHour = void 0), l(b).parsedDateParts = b._a.slice(0), l(b).meridiem = b._meridiem, b._a[_d] = kb(b._locale, b._a[_d], b._meridiem), hb(b), cb(b);
  }
  function kb(a, b, c) {
    var d;
    return null == c ? b : null != a.meridiemHour ? a.meridiemHour(b, c) : null != a.isPM ? (d = a.isPM(c), d && 12 > b && (b += 12), d || 12 !== b || (b = 0), b) : b;
  }
  function lb(a) {
    var b,
        c,
        d,
        e,
        f;
    if (0 === a._f.length)
      return l(a).invalidFormat = !0, void(a._d = new Date(NaN));
    for (e = 0; e < a._f.length; e++)
      f = 0, b = p({}, a), null != a._useUTC && (b._useUTC = a._useUTC), b._f = a._f[e], jb(b), m(b) && (f += l(b).charsLeftOver, f += 10 * l(b).unusedTokens.length, l(b).score = f, (null == d || d > f) && (d = f, c = b));
    i(a, c || b);
  }
  function mb(a) {
    if (!a._d) {
      var b = K(a._i);
      a._a = g([b.year, b.month, b.day || b.date, b.hour, b.minute, b.second, b.millisecond], function(a) {
        return a && parseInt(a, 10);
      }), hb(a);
    }
  }
  function nb(a) {
    var b = new q(cb(ob(a)));
    return b._nextDay && (b.add(1, "d"), b._nextDay = void 0), b;
  }
  function ob(a) {
    var b = a._i,
        d = a._f;
    return a._locale = a._locale || ab(a._l), null === b || void 0 === d && "" === b ? n({nullInput: !0}) : ("string" == typeof b && (a._i = b = a._locale.preparse(b)), r(b) ? new q(cb(b)) : (c(d) ? lb(a) : f(b) ? a._d = b : d ? jb(a) : pb(a), m(a) || (a._d = null), a));
  }
  function pb(b) {
    var d = b._i;
    void 0 === d ? b._d = new Date(a.now()) : f(d) ? b._d = new Date(d.valueOf()) : "string" == typeof d ? eb(b) : c(d) ? (b._a = g(d.slice(0), function(a) {
      return parseInt(a, 10);
    }), hb(b)) : "object" == typeof d ? mb(b) : "number" == typeof d ? b._d = new Date(d) : a.createFromInputFallback(b);
  }
  function qb(a, b, f, g, h) {
    var i = {};
    return "boolean" == typeof f && (g = f, f = void 0), (d(a) && e(a) || c(a) && 0 === a.length) && (a = void 0), i._isAMomentObject = !0, i._useUTC = i._isUTC = h, i._l = f, i._i = a, i._f = b, i._strict = g, nb(i);
  }
  function rb(a, b, c, d) {
    return qb(a, b, c, d, !1);
  }
  function sb(a, b) {
    var d,
        e;
    if (1 === b.length && c(b[0]) && (b = b[0]), !b.length)
      return rb();
    for (d = b[0], e = 1; e < b.length; ++e)
      b[e].isValid() && !b[e][a](d) || (d = b[e]);
    return d;
  }
  function tb() {
    var a = [].slice.call(arguments, 0);
    return sb("isBefore", a);
  }
  function ub() {
    var a = [].slice.call(arguments, 0);
    return sb("isAfter", a);
  }
  function vb(a) {
    var b = K(a),
        c = b.year || 0,
        d = b.quarter || 0,
        e = b.month || 0,
        f = b.week || 0,
        g = b.day || 0,
        h = b.hour || 0,
        i = b.minute || 0,
        j = b.second || 0,
        k = b.millisecond || 0;
    this._milliseconds = +k + 1e3 * j + 6e4 * i + 1e3 * h * 60 * 60, this._days = +g + 7 * f, this._months = +e + 3 * d + 12 * c, this._data = {}, this._locale = ab(), this._bubble();
  }
  function wb(a) {
    return a instanceof vb;
  }
  function xb(a) {
    return 0 > a ? -1 * Math.round(-1 * a) : Math.round(a);
  }
  function yb(a, b) {
    T(a, 0, 0, function() {
      var a = this.utcOffset(),
          c = "+";
      return 0 > a && (a = -a, c = "-"), c + S(~~(a / 60), 2) + b + S(~~a % 60, 2);
    });
  }
  function zb(a, b) {
    var c = (b || "").match(a) || [],
        d = c[c.length - 1] || [],
        e = (d + "").match(Ge) || ["-", 0, 0],
        f = +(60 * e[1]) + t(e[2]);
    return "+" === e[0] ? f : -f;
  }
  function Ab(b, c) {
    var d,
        e;
    return c._isUTC ? (d = c.clone(), e = (r(b) || f(b) ? b.valueOf() : rb(b).valueOf()) - d.valueOf(), d._d.setTime(d._d.valueOf() + e), a.updateOffset(d, !1), d) : rb(b).local();
  }
  function Bb(a) {
    return 15 * -Math.round(a._d.getTimezoneOffset() / 15);
  }
  function Cb(b, c) {
    var d,
        e = this._offset || 0;
    return this.isValid() ? null != b ? ("string" == typeof b ? b = zb(Td, b) : Math.abs(b) < 16 && (b = 60 * b), !this._isUTC && c && (d = Bb(this)), this._offset = b, this._isUTC = !0, null != d && this.add(d, "m"), e !== b && (!c || this._changeInProgress ? Sb(this, Nb(b - e, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, a.updateOffset(this, !0), this._changeInProgress = null)), this) : this._isUTC ? e : Bb(this) : null != b ? this : NaN;
  }
  function Db(a, b) {
    return null != a ? ("string" != typeof a && (a = -a), this.utcOffset(a, b), this) : -this.utcOffset();
  }
  function Eb(a) {
    return this.utcOffset(0, a);
  }
  function Fb(a) {
    return this._isUTC && (this.utcOffset(0, a), this._isUTC = !1, a && this.subtract(Bb(this), "m")), this;
  }
  function Gb() {
    if (this._tzm)
      this.utcOffset(this._tzm);
    else if ("string" == typeof this._i) {
      var a = zb(Sd, this._i);
      0 === a ? this.utcOffset(0, !0) : this.utcOffset(zb(Sd, this._i));
    }
    return this;
  }
  function Hb(a) {
    return this.isValid() ? (a = a ? rb(a).utcOffset() : 0, (this.utcOffset() - a) % 60 === 0) : !1;
  }
  function Ib() {
    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
  }
  function Jb() {
    if (!o(this._isDSTShifted))
      return this._isDSTShifted;
    var a = {};
    if (p(a, this), a = ob(a), a._a) {
      var b = a._isUTC ? j(a._a) : rb(a._a);
      this._isDSTShifted = this.isValid() && u(a._a, b.toArray()) > 0;
    } else
      this._isDSTShifted = !1;
    return this._isDSTShifted;
  }
  function Kb() {
    return this.isValid() ? !this._isUTC : !1;
  }
  function Lb() {
    return this.isValid() ? this._isUTC : !1;
  }
  function Mb() {
    return this.isValid() ? this._isUTC && 0 === this._offset : !1;
  }
  function Nb(a, b) {
    var c,
        d,
        e,
        f = a,
        g = null;
    return wb(a) ? f = {
      ms: a._milliseconds,
      d: a._days,
      M: a._months
    } : "number" == typeof a ? (f = {}, b ? f[b] = a : f.milliseconds = a) : (g = He.exec(a)) ? (c = "-" === g[1] ? -1 : 1, f = {
      y: 0,
      d: t(g[$d]) * c,
      h: t(g[_d]) * c,
      m: t(g[ae]) * c,
      s: t(g[be]) * c,
      ms: t(xb(1e3 * g[ce])) * c
    }) : (g = Ie.exec(a)) ? (c = "-" === g[1] ? -1 : 1, f = {
      y: Ob(g[2], c),
      M: Ob(g[3], c),
      w: Ob(g[4], c),
      d: Ob(g[5], c),
      h: Ob(g[6], c),
      m: Ob(g[7], c),
      s: Ob(g[8], c)
    }) : null == f ? f = {} : "object" == typeof f && ("from" in f || "to" in f) && (e = Qb(rb(f.from), rb(f.to)), f = {}, f.ms = e.milliseconds, f.M = e.months), d = new vb(f), wb(a) && h(a, "_locale") && (d._locale = a._locale), d;
  }
  function Ob(a, b) {
    var c = a && parseFloat(a.replace(",", "."));
    return (isNaN(c) ? 0 : c) * b;
  }
  function Pb(a, b) {
    var c = {
      milliseconds: 0,
      months: 0
    };
    return c.months = b.month() - a.month() + 12 * (b.year() - a.year()), a.clone().add(c.months, "M").isAfter(b) && --c.months, c.milliseconds = +b - +a.clone().add(c.months, "M"), c;
  }
  function Qb(a, b) {
    var c;
    return a.isValid() && b.isValid() ? (b = Ab(b, a), a.isBefore(b) ? c = Pb(a, b) : (c = Pb(b, a), c.milliseconds = -c.milliseconds, c.months = -c.months), c) : {
      milliseconds: 0,
      months: 0
    };
  }
  function Rb(a, b) {
    return function(c, d) {
      var e,
          f;
      return null === d || isNaN(+d) || (x(b, "moment()." + b + "(period, number) is deprecated. Please use moment()." + b + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), f = c, c = d, d = f), c = "string" == typeof c ? +c : c, e = Nb(c, d), Sb(this, e, a), this;
    };
  }
  function Sb(b, c, d, e) {
    var f = c._milliseconds,
        g = xb(c._days),
        h = xb(c._months);
    b.isValid() && (e = null == e ? !0 : e, f && b._d.setTime(b._d.valueOf() + f * d), g && P(b, "Date", O(b, "Date") + g * d), h && ia(b, O(b, "Month") + h * d), e && a.updateOffset(b, g || h));
  }
  function Tb(a, b) {
    var c = a.diff(b, "days", !0);
    return -6 > c ? "sameElse" : -1 > c ? "lastWeek" : 0 > c ? "lastDay" : 1 > c ? "sameDay" : 2 > c ? "nextDay" : 7 > c ? "nextWeek" : "sameElse";
  }
  function Ub(b, c) {
    var d = b || rb(),
        e = Ab(d, this).startOf("day"),
        f = a.calendarFormat(this, e) || "sameElse",
        g = c && (y(c[f]) ? c[f].call(this, d) : c[f]);
    return this.format(g || this.localeData().calendar(f, this, rb(d)));
  }
  function Vb() {
    return new q(this);
  }
  function Wb(a, b) {
    var c = r(a) ? a : rb(a);
    return this.isValid() && c.isValid() ? (b = J(o(b) ? "millisecond" : b), "millisecond" === b ? this.valueOf() > c.valueOf() : c.valueOf() < this.clone().startOf(b).valueOf()) : !1;
  }
  function Xb(a, b) {
    var c = r(a) ? a : rb(a);
    return this.isValid() && c.isValid() ? (b = J(o(b) ? "millisecond" : b), "millisecond" === b ? this.valueOf() < c.valueOf() : this.clone().endOf(b).valueOf() < c.valueOf()) : !1;
  }
  function Yb(a, b, c, d) {
    return d = d || "()", ("(" === d[0] ? this.isAfter(a, c) : !this.isBefore(a, c)) && (")" === d[1] ? this.isBefore(b, c) : !this.isAfter(b, c));
  }
  function Zb(a, b) {
    var c,
        d = r(a) ? a : rb(a);
    return this.isValid() && d.isValid() ? (b = J(b || "millisecond"), "millisecond" === b ? this.valueOf() === d.valueOf() : (c = d.valueOf(), this.clone().startOf(b).valueOf() <= c && c <= this.clone().endOf(b).valueOf())) : !1;
  }
  function $b(a, b) {
    return this.isSame(a, b) || this.isAfter(a, b);
  }
  function _b(a, b) {
    return this.isSame(a, b) || this.isBefore(a, b);
  }
  function ac(a, b, c) {
    var d,
        e,
        f,
        g;
    return this.isValid() ? (d = Ab(a, this), d.isValid() ? (e = 6e4 * (d.utcOffset() - this.utcOffset()), b = J(b), "year" === b || "month" === b || "quarter" === b ? (g = bc(this, d), "quarter" === b ? g /= 3 : "year" === b && (g /= 12)) : (f = this - d, g = "second" === b ? f / 1e3 : "minute" === b ? f / 6e4 : "hour" === b ? f / 36e5 : "day" === b ? (f - e) / 864e5 : "week" === b ? (f - e) / 6048e5 : f), c ? g : s(g)) : NaN) : NaN;
  }
  function bc(a, b) {
    var c,
        d,
        e = 12 * (b.year() - a.year()) + (b.month() - a.month()),
        f = a.clone().add(e, "months");
    return 0 > b - f ? (c = a.clone().add(e - 1, "months"), d = (b - f) / (f - c)) : (c = a.clone().add(e + 1, "months"), d = (b - f) / (c - f)), -(e + d) || 0;
  }
  function cc() {
    return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
  }
  function dc() {
    var a = this.clone().utc();
    return 0 < a.year() && a.year() <= 9999 ? y(Date.prototype.toISOString) ? this.toDate().toISOString() : W(a, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : W(a, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
  }
  function ec(b) {
    b || (b = this.isUtc() ? a.defaultFormatUtc : a.defaultFormat);
    var c = W(this, b);
    return this.localeData().postformat(c);
  }
  function fc(a, b) {
    return this.isValid() && (r(a) && a.isValid() || rb(a).isValid()) ? Nb({
      to: this,
      from: a
    }).locale(this.locale()).humanize(!b) : this.localeData().invalidDate();
  }
  function gc(a) {
    return this.from(rb(), a);
  }
  function hc(a, b) {
    return this.isValid() && (r(a) && a.isValid() || rb(a).isValid()) ? Nb({
      from: this,
      to: a
    }).locale(this.locale()).humanize(!b) : this.localeData().invalidDate();
  }
  function ic(a) {
    return this.to(rb(), a);
  }
  function jc(a) {
    var b;
    return void 0 === a ? this._locale._abbr : (b = ab(a), null != b && (this._locale = b), this);
  }
  function kc() {
    return this._locale;
  }
  function lc(a) {
    switch (a = J(a)) {
      case "year":
        this.month(0);
      case "quarter":
      case "month":
        this.date(1);
      case "week":
      case "isoWeek":
      case "day":
      case "date":
        this.hours(0);
      case "hour":
        this.minutes(0);
      case "minute":
        this.seconds(0);
      case "second":
        this.milliseconds(0);
    }
    return "week" === a && this.weekday(0), "isoWeek" === a && this.isoWeekday(1), "quarter" === a && this.month(3 * Math.floor(this.month() / 3)), this;
  }
  function mc(a) {
    return a = J(a), void 0 === a || "millisecond" === a ? this : ("date" === a && (a = "day"), this.startOf(a).add(1, "isoWeek" === a ? "week" : a).subtract(1, "ms"));
  }
  function nc() {
    return this._d.valueOf() - 6e4 * (this._offset || 0);
  }
  function oc() {
    return Math.floor(this.valueOf() / 1e3);
  }
  function pc() {
    return new Date(this.valueOf());
  }
  function qc() {
    var a = this;
    return [a.year(), a.month(), a.date(), a.hour(), a.minute(), a.second(), a.millisecond()];
  }
  function rc() {
    var a = this;
    return {
      years: a.year(),
      months: a.month(),
      date: a.date(),
      hours: a.hours(),
      minutes: a.minutes(),
      seconds: a.seconds(),
      milliseconds: a.milliseconds()
    };
  }
  function sc() {
    return this.isValid() ? this.toISOString() : null;
  }
  function tc() {
    return m(this);
  }
  function uc() {
    return i({}, l(this));
  }
  function vc() {
    return l(this).overflow;
  }
  function wc() {
    return {
      input: this._i,
      format: this._f,
      locale: this._locale,
      isUTC: this._isUTC,
      strict: this._strict
    };
  }
  function xc(a, b) {
    T(0, [a, a.length], 0, b);
  }
  function yc(a) {
    return Cc.call(this, a, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
  }
  function zc(a) {
    return Cc.call(this, a, this.isoWeek(), this.isoWeekday(), 1, 4);
  }
  function Ac() {
    return wa(this.year(), 1, 4);
  }
  function Bc() {
    var a = this.localeData()._week;
    return wa(this.year(), a.dow, a.doy);
  }
  function Cc(a, b, c, d, e) {
    var f;
    return null == a ? va(this, d, e).year : (f = wa(a, d, e), b > f && (b = f), Dc.call(this, a, b, c, d, e));
  }
  function Dc(a, b, c, d, e) {
    var f = ua(a, b, c, d, e),
        g = sa(f.year, 0, f.dayOfYear);
    return this.year(g.getUTCFullYear()), this.month(g.getUTCMonth()), this.date(g.getUTCDate()), this;
  }
  function Ec(a) {
    return null == a ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (a - 1) + this.month() % 3);
  }
  function Fc(a) {
    var b = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
    return null == a ? b : this.add(a - b, "d");
  }
  function Gc(a, b) {
    b[ce] = t(1e3 * ("0." + a));
  }
  function Hc() {
    return this._isUTC ? "UTC" : "";
  }
  function Ic() {
    return this._isUTC ? "Coordinated Universal Time" : "";
  }
  function Jc(a) {
    return rb(1e3 * a);
  }
  function Kc() {
    return rb.apply(null, arguments).parseZone();
  }
  function Lc(a) {
    return a;
  }
  function Mc(a, b, c, d) {
    var e = ab(),
        f = j().set(d, b);
    return e[c](f, a);
  }
  function Nc(a, b, c) {
    if ("number" == typeof a && (b = a, a = void 0), a = a || "", null != b)
      return Mc(a, b, c, "month");
    var d,
        e = [];
    for (d = 0; 12 > d; d++)
      e[d] = Mc(a, d, c, "month");
    return e;
  }
  function Oc(a, b, c, d) {
    "boolean" == typeof a ? ("number" == typeof b && (c = b, b = void 0), b = b || "") : (b = a, c = b, a = !1, "number" == typeof b && (c = b, b = void 0), b = b || "");
    var e = ab(),
        f = a ? e._week.dow : 0;
    if (null != c)
      return Mc(b, (c + f) % 7, d, "day");
    var g,
        h = [];
    for (g = 0; 7 > g; g++)
      h[g] = Mc(b, (g + f) % 7, d, "day");
    return h;
  }
  function Pc(a, b) {
    return Nc(a, b, "months");
  }
  function Qc(a, b) {
    return Nc(a, b, "monthsShort");
  }
  function Rc(a, b, c) {
    return Oc(a, b, c, "weekdays");
  }
  function Sc(a, b, c) {
    return Oc(a, b, c, "weekdaysShort");
  }
  function Tc(a, b, c) {
    return Oc(a, b, c, "weekdaysMin");
  }
  function Uc() {
    var a = this._data;
    return this._milliseconds = Ue(this._milliseconds), this._days = Ue(this._days), this._months = Ue(this._months), a.milliseconds = Ue(a.milliseconds), a.seconds = Ue(a.seconds), a.minutes = Ue(a.minutes), a.hours = Ue(a.hours), a.months = Ue(a.months), a.years = Ue(a.years), this;
  }
  function Vc(a, b, c, d) {
    var e = Nb(b, c);
    return a._milliseconds += d * e._milliseconds, a._days += d * e._days, a._months += d * e._months, a._bubble();
  }
  function Wc(a, b) {
    return Vc(this, a, b, 1);
  }
  function Xc(a, b) {
    return Vc(this, a, b, -1);
  }
  function Yc(a) {
    return 0 > a ? Math.floor(a) : Math.ceil(a);
  }
  function Zc() {
    var a,
        b,
        c,
        d,
        e,
        f = this._milliseconds,
        g = this._days,
        h = this._months,
        i = this._data;
    return f >= 0 && g >= 0 && h >= 0 || 0 >= f && 0 >= g && 0 >= h || (f += 864e5 * Yc(_c(h) + g), g = 0, h = 0), i.milliseconds = f % 1e3, a = s(f / 1e3), i.seconds = a % 60, b = s(a / 60), i.minutes = b % 60, c = s(b / 60), i.hours = c % 24, g += s(c / 24), e = s($c(g)), h += e, g -= Yc(_c(e)), d = s(h / 12), h %= 12, i.days = g, i.months = h, i.years = d, this;
  }
  function $c(a) {
    return 4800 * a / 146097;
  }
  function _c(a) {
    return 146097 * a / 4800;
  }
  function ad(a) {
    var b,
        c,
        d = this._milliseconds;
    if (a = J(a), "month" === a || "year" === a)
      return b = this._days + d / 864e5, c = this._months + $c(b), "month" === a ? c : c / 12;
    switch (b = this._days + Math.round(_c(this._months)), a) {
      case "week":
        return b / 7 + d / 6048e5;
      case "day":
        return b + d / 864e5;
      case "hour":
        return 24 * b + d / 36e5;
      case "minute":
        return 1440 * b + d / 6e4;
      case "second":
        return 86400 * b + d / 1e3;
      case "millisecond":
        return Math.floor(864e5 * b) + d;
      default:
        throw new Error("Unknown unit " + a);
    }
  }
  function bd() {
    return this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * t(this._months / 12);
  }
  function cd(a) {
    return function() {
      return this.as(a);
    };
  }
  function dd(a) {
    return a = J(a), this[a + "s"]();
  }
  function ed(a) {
    return function() {
      return this._data[a];
    };
  }
  function fd() {
    return s(this.days() / 7);
  }
  function gd(a, b, c, d, e) {
    return e.relativeTime(b || 1, !!c, a, d);
  }
  function hd(a, b, c) {
    var d = Nb(a).abs(),
        e = jf(d.as("s")),
        f = jf(d.as("m")),
        g = jf(d.as("h")),
        h = jf(d.as("d")),
        i = jf(d.as("M")),
        j = jf(d.as("y")),
        k = e < kf.s && ["s", e] || 1 >= f && ["m"] || f < kf.m && ["mm", f] || 1 >= g && ["h"] || g < kf.h && ["hh", g] || 1 >= h && ["d"] || h < kf.d && ["dd", h] || 1 >= i && ["M"] || i < kf.M && ["MM", i] || 1 >= j && ["y"] || ["yy", j];
    return k[2] = b, k[3] = +a > 0, k[4] = c, gd.apply(null, k);
  }
  function id(a) {
    return void 0 === a ? jf : "function" == typeof a ? (jf = a, !0) : !1;
  }
  function jd(a, b) {
    return void 0 === kf[a] ? !1 : void 0 === b ? kf[a] : (kf[a] = b, !0);
  }
  function kd(a) {
    var b = this.localeData(),
        c = hd(this, !a, b);
    return a && (c = b.pastFuture(+this, c)), b.postformat(c);
  }
  function ld() {
    var a,
        b,
        c,
        d = lf(this._milliseconds) / 1e3,
        e = lf(this._days),
        f = lf(this._months);
    a = s(d / 60), b = s(a / 60), d %= 60, a %= 60, c = s(f / 12), f %= 12;
    var g = c,
        h = f,
        i = e,
        j = b,
        k = a,
        l = d,
        m = this.asSeconds();
    return m ? (0 > m ? "-" : "") + "P" + (g ? g + "Y" : "") + (h ? h + "M" : "") + (i ? i + "D" : "") + (j || k || l ? "T" : "") + (j ? j + "H" : "") + (k ? k + "M" : "") + (l ? l + "S" : "") : "P0D";
  }
  var md,
      nd;
  nd = Array.prototype.some ? Array.prototype.some : function(a) {
    for (var b = Object(this),
        c = b.length >>> 0,
        d = 0; c > d; d++)
      if (d in b && a.call(this, b[d], d, b))
        return !0;
    return !1;
  };
  var od = a.momentProperties = [],
      pd = !1,
      qd = {};
  a.suppressDeprecationWarnings = !1, a.deprecationHandler = null;
  var rd;
  rd = Object.keys ? Object.keys : function(a) {
    var b,
        c = [];
    for (b in a)
      h(a, b) && c.push(b);
    return c;
  };
  var sd,
      td = {
        sameDay: "[Today at] LT",
        nextDay: "[Tomorrow at] LT",
        nextWeek: "dddd [at] LT",
        lastDay: "[Yesterday at] LT",
        lastWeek: "[Last] dddd [at] LT",
        sameElse: "L"
      },
      ud = {
        LTS: "h:mm:ss A",
        LT: "h:mm A",
        L: "MM/DD/YYYY",
        LL: "MMMM D, YYYY",
        LLL: "MMMM D, YYYY h:mm A",
        LLLL: "dddd, MMMM D, YYYY h:mm A"
      },
      vd = "Invalid date",
      wd = "%d",
      xd = /\d{1,2}/,
      yd = {
        future: "in %s",
        past: "%s ago",
        s: "a few seconds",
        m: "a minute",
        mm: "%d minutes",
        h: "an hour",
        hh: "%d hours",
        d: "a day",
        dd: "%d days",
        M: "a month",
        MM: "%d months",
        y: "a year",
        yy: "%d years"
      },
      zd = {},
      Ad = {},
      Bd = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
      Cd = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
      Dd = {},
      Ed = {},
      Fd = /\d/,
      Gd = /\d\d/,
      Hd = /\d{3}/,
      Id = /\d{4}/,
      Jd = /[+-]?\d{6}/,
      Kd = /\d\d?/,
      Ld = /\d\d\d\d?/,
      Md = /\d\d\d\d\d\d?/,
      Nd = /\d{1,3}/,
      Od = /\d{1,4}/,
      Pd = /[+-]?\d{1,6}/,
      Qd = /\d+/,
      Rd = /[+-]?\d+/,
      Sd = /Z|[+-]\d\d:?\d\d/gi,
      Td = /Z|[+-]\d\d(?::?\d\d)?/gi,
      Ud = /[+-]?\d+(\.\d{1,3})?/,
      Vd = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
      Wd = {},
      Xd = {},
      Yd = 0,
      Zd = 1,
      $d = 2,
      _d = 3,
      ae = 4,
      be = 5,
      ce = 6,
      de = 7,
      ee = 8;
  sd = Array.prototype.indexOf ? Array.prototype.indexOf : function(a) {
    var b;
    for (b = 0; b < this.length; ++b)
      if (this[b] === a)
        return b;
    return -1;
  }, T("M", ["MM", 2], "Mo", function() {
    return this.month() + 1;
  }), T("MMM", 0, 0, function(a) {
    return this.localeData().monthsShort(this, a);
  }), T("MMMM", 0, 0, function(a) {
    return this.localeData().months(this, a);
  }), I("month", "M"), L("month", 8), Y("M", Kd), Y("MM", Kd, Gd), Y("MMM", function(a, b) {
    return b.monthsShortRegex(a);
  }), Y("MMMM", function(a, b) {
    return b.monthsRegex(a);
  }), aa(["M", "MM"], function(a, b) {
    b[Zd] = t(a) - 1;
  }), aa(["MMM", "MMMM"], function(a, b, c, d) {
    var e = c._locale.monthsParse(a, d, c._strict);
    null != e ? b[Zd] = e : l(c).invalidMonth = a;
  });
  var fe = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/,
      ge = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
      he = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
      ie = Vd,
      je = Vd;
  T("Y", 0, 0, function() {
    var a = this.year();
    return 9999 >= a ? "" + a : "+" + a;
  }), T(0, ["YY", 2], 0, function() {
    return this.year() % 100;
  }), T(0, ["YYYY", 4], 0, "year"), T(0, ["YYYYY", 5], 0, "year"), T(0, ["YYYYYY", 6, !0], 0, "year"), I("year", "y"), L("year", 1), Y("Y", Rd), Y("YY", Kd, Gd), Y("YYYY", Od, Id), Y("YYYYY", Pd, Jd), Y("YYYYYY", Pd, Jd), aa(["YYYYY", "YYYYYY"], Yd), aa("YYYY", function(b, c) {
    c[Yd] = 2 === b.length ? a.parseTwoDigitYear(b) : t(b);
  }), aa("YY", function(b, c) {
    c[Yd] = a.parseTwoDigitYear(b);
  }), aa("Y", function(a, b) {
    b[Yd] = parseInt(a, 10);
  }), a.parseTwoDigitYear = function(a) {
    return t(a) + (t(a) > 68 ? 1900 : 2e3);
  };
  var ke = N("FullYear", !0);
  T("w", ["ww", 2], "wo", "week"), T("W", ["WW", 2], "Wo", "isoWeek"), I("week", "w"), I("isoWeek", "W"), L("week", 5), L("isoWeek", 5), Y("w", Kd), Y("ww", Kd, Gd), Y("W", Kd), Y("WW", Kd, Gd), ba(["w", "ww", "W", "WW"], function(a, b, c, d) {
    b[d.substr(0, 1)] = t(a);
  });
  var le = {
    dow: 0,
    doy: 6
  };
  T("d", 0, "do", "day"), T("dd", 0, 0, function(a) {
    return this.localeData().weekdaysMin(this, a);
  }), T("ddd", 0, 0, function(a) {
    return this.localeData().weekdaysShort(this, a);
  }), T("dddd", 0, 0, function(a) {
    return this.localeData().weekdays(this, a);
  }), T("e", 0, 0, "weekday"), T("E", 0, 0, "isoWeekday"), I("day", "d"), I("weekday", "e"), I("isoWeekday", "E"), L("day", 11), L("weekday", 11), L("isoWeekday", 11), Y("d", Kd), Y("e", Kd), Y("E", Kd), Y("dd", function(a, b) {
    return b.weekdaysMinRegex(a);
  }), Y("ddd", function(a, b) {
    return b.weekdaysShortRegex(a);
  }), Y("dddd", function(a, b) {
    return b.weekdaysRegex(a);
  }), ba(["dd", "ddd", "dddd"], function(a, b, c, d) {
    var e = c._locale.weekdaysParse(a, d, c._strict);
    null != e ? b.d = e : l(c).invalidWeekday = a;
  }), ba(["d", "e", "E"], function(a, b, c, d) {
    b[d] = t(a);
  });
  var me = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
      ne = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
      oe = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
      pe = Vd,
      qe = Vd,
      re = Vd;
  T("H", ["HH", 2], 0, "hour"), T("h", ["hh", 2], 0, Qa), T("k", ["kk", 2], 0, Ra), T("hmm", 0, 0, function() {
    return "" + Qa.apply(this) + S(this.minutes(), 2);
  }), T("hmmss", 0, 0, function() {
    return "" + Qa.apply(this) + S(this.minutes(), 2) + S(this.seconds(), 2);
  }), T("Hmm", 0, 0, function() {
    return "" + this.hours() + S(this.minutes(), 2);
  }), T("Hmmss", 0, 0, function() {
    return "" + this.hours() + S(this.minutes(), 2) + S(this.seconds(), 2);
  }), Sa("a", !0), Sa("A", !1), I("hour", "h"), L("hour", 13), Y("a", Ta), Y("A", Ta), Y("H", Kd), Y("h", Kd), Y("HH", Kd, Gd), Y("hh", Kd, Gd), Y("hmm", Ld), Y("hmmss", Md), Y("Hmm", Ld), Y("Hmmss", Md), aa(["H", "HH"], _d), aa(["a", "A"], function(a, b, c) {
    c._isPm = c._locale.isPM(a), c._meridiem = a;
  }), aa(["h", "hh"], function(a, b, c) {
    b[_d] = t(a), l(c).bigHour = !0;
  }), aa("hmm", function(a, b, c) {
    var d = a.length - 2;
    b[_d] = t(a.substr(0, d)), b[ae] = t(a.substr(d)), l(c).bigHour = !0;
  }), aa("hmmss", function(a, b, c) {
    var d = a.length - 4,
        e = a.length - 2;
    b[_d] = t(a.substr(0, d)), b[ae] = t(a.substr(d, 2)), b[be] = t(a.substr(e)), l(c).bigHour = !0;
  }), aa("Hmm", function(a, b, c) {
    var d = a.length - 2;
    b[_d] = t(a.substr(0, d)), b[ae] = t(a.substr(d));
  }), aa("Hmmss", function(a, b, c) {
    var d = a.length - 4,
        e = a.length - 2;
    b[_d] = t(a.substr(0, d)), b[ae] = t(a.substr(d, 2)), b[be] = t(a.substr(e));
  });
  var se,
      te = /[ap]\.?m?\.?/i,
      ue = N("Hours", !0),
      ve = {
        calendar: td,
        longDateFormat: ud,
        invalidDate: vd,
        ordinal: wd,
        ordinalParse: xd,
        relativeTime: yd,
        months: ge,
        monthsShort: he,
        week: le,
        weekdays: me,
        weekdaysMin: oe,
        weekdaysShort: ne,
        meridiemParse: te
      },
      we = {},
      xe = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,
      ye = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/,
      ze = /Z|[+-]\d\d(?::?\d\d)?/,
      Ae = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, !1], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, !1], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, !1], ["YYYYDDD", /\d{7}/]],
      Be = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]],
      Ce = /^\/?Date\((\-?\d+)/i;
  a.createFromInputFallback = w("value provided is not in a recognized ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(a) {
    a._d = new Date(a._i + (a._useUTC ? " UTC" : ""));
  }), a.ISO_8601 = function() {};
  var De = w("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
    var a = rb.apply(null, arguments);
    return this.isValid() && a.isValid() ? this > a ? this : a : n();
  }),
      Ee = w("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var a = rb.apply(null, arguments);
        return this.isValid() && a.isValid() ? a > this ? this : a : n();
      }),
      Fe = function() {
        return Date.now ? Date.now() : +new Date;
      };
  yb("Z", ":"), yb("ZZ", ""), Y("Z", Td), Y("ZZ", Td), aa(["Z", "ZZ"], function(a, b, c) {
    c._useUTC = !0, c._tzm = zb(Td, a);
  });
  var Ge = /([\+\-]|\d\d)/gi;
  a.updateOffset = function() {};
  var He = /^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,
      Ie = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;
  Nb.fn = vb.prototype;
  var Je = Rb(1, "add"),
      Ke = Rb(-1, "subtract");
  a.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", a.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
  var Le = w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(a) {
    return void 0 === a ? this.localeData() : this.locale(a);
  });
  T(0, ["gg", 2], 0, function() {
    return this.weekYear() % 100;
  }), T(0, ["GG", 2], 0, function() {
    return this.isoWeekYear() % 100;
  }), xc("gggg", "weekYear"), xc("ggggg", "weekYear"), xc("GGGG", "isoWeekYear"), xc("GGGGG", "isoWeekYear"), I("weekYear", "gg"), I("isoWeekYear", "GG"), L("weekYear", 1), L("isoWeekYear", 1), Y("G", Rd), Y("g", Rd), Y("GG", Kd, Gd), Y("gg", Kd, Gd), Y("GGGG", Od, Id), Y("gggg", Od, Id), Y("GGGGG", Pd, Jd), Y("ggggg", Pd, Jd), ba(["gggg", "ggggg", "GGGG", "GGGGG"], function(a, b, c, d) {
    b[d.substr(0, 2)] = t(a);
  }), ba(["gg", "GG"], function(b, c, d, e) {
    c[e] = a.parseTwoDigitYear(b);
  }), T("Q", 0, "Qo", "quarter"), I("quarter", "Q"), L("quarter", 7), Y("Q", Fd), aa("Q", function(a, b) {
    b[Zd] = 3 * (t(a) - 1);
  }), T("D", ["DD", 2], "Do", "date"), I("date", "D"), L("date", 9), Y("D", Kd), Y("DD", Kd, Gd), Y("Do", function(a, b) {
    return a ? b._ordinalParse : b._ordinalParseLenient;
  }), aa(["D", "DD"], $d), aa("Do", function(a, b) {
    b[$d] = t(a.match(Kd)[0], 10);
  });
  var Me = N("Date", !0);
  T("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), I("dayOfYear", "DDD"), L("dayOfYear", 4), Y("DDD", Nd), Y("DDDD", Hd), aa(["DDD", "DDDD"], function(a, b, c) {
    c._dayOfYear = t(a);
  }), T("m", ["mm", 2], 0, "minute"), I("minute", "m"), L("minute", 14), Y("m", Kd), Y("mm", Kd, Gd), aa(["m", "mm"], ae);
  var Ne = N("Minutes", !1);
  T("s", ["ss", 2], 0, "second"), I("second", "s"), L("second", 15), Y("s", Kd), Y("ss", Kd, Gd), aa(["s", "ss"], be);
  var Oe = N("Seconds", !1);
  T("S", 0, 0, function() {
    return ~~(this.millisecond() / 100);
  }), T(0, ["SS", 2], 0, function() {
    return ~~(this.millisecond() / 10);
  }), T(0, ["SSS", 3], 0, "millisecond"), T(0, ["SSSS", 4], 0, function() {
    return 10 * this.millisecond();
  }), T(0, ["SSSSS", 5], 0, function() {
    return 100 * this.millisecond();
  }), T(0, ["SSSSSS", 6], 0, function() {
    return 1e3 * this.millisecond();
  }), T(0, ["SSSSSSS", 7], 0, function() {
    return 1e4 * this.millisecond();
  }), T(0, ["SSSSSSSS", 8], 0, function() {
    return 1e5 * this.millisecond();
  }), T(0, ["SSSSSSSSS", 9], 0, function() {
    return 1e6 * this.millisecond();
  }), I("millisecond", "ms"), L("millisecond", 16), Y("S", Nd, Fd), Y("SS", Nd, Gd), Y("SSS", Nd, Hd);
  var Pe;
  for (Pe = "SSSS"; Pe.length <= 9; Pe += "S")
    Y(Pe, Qd);
  for (Pe = "S"; Pe.length <= 9; Pe += "S")
    aa(Pe, Gc);
  var Qe = N("Milliseconds", !1);
  T("z", 0, 0, "zoneAbbr"), T("zz", 0, 0, "zoneName");
  var Re = q.prototype;
  Re.add = Je, Re.calendar = Ub, Re.clone = Vb, Re.diff = ac, Re.endOf = mc, Re.format = ec, Re.from = fc, Re.fromNow = gc, Re.to = hc, Re.toNow = ic, Re.get = Q, Re.invalidAt = vc, Re.isAfter = Wb, Re.isBefore = Xb, Re.isBetween = Yb, Re.isSame = Zb, Re.isSameOrAfter = $b, Re.isSameOrBefore = _b, Re.isValid = tc, Re.lang = Le, Re.locale = jc, Re.localeData = kc, Re.max = Ee, Re.min = De, Re.parsingFlags = uc, Re.set = R, Re.startOf = lc, Re.subtract = Ke, Re.toArray = qc, Re.toObject = rc, Re.toDate = pc, Re.toISOString = dc, Re.toJSON = sc, Re.toString = cc, Re.unix = oc, Re.valueOf = nc, Re.creationData = wc, Re.year = ke, Re.isLeapYear = qa, Re.weekYear = yc, Re.isoWeekYear = zc, Re.quarter = Re.quarters = Ec, Re.month = ja, Re.daysInMonth = ka, Re.week = Re.weeks = Aa, Re.isoWeek = Re.isoWeeks = Ba, Re.weeksInYear = Bc, Re.isoWeeksInYear = Ac, Re.date = Me, Re.day = Re.days = Ja, Re.weekday = Ka, Re.isoWeekday = La, Re.dayOfYear = Fc, Re.hour = Re.hours = ue, Re.minute = Re.minutes = Ne, Re.second = Re.seconds = Oe, Re.millisecond = Re.milliseconds = Qe, Re.utcOffset = Cb, Re.utc = Eb, Re.local = Fb, Re.parseZone = Gb, Re.hasAlignedHourOffset = Hb, Re.isDST = Ib, Re.isLocal = Kb, Re.isUtcOffset = Lb, Re.isUtc = Mb, Re.isUTC = Mb, Re.zoneAbbr = Hc, Re.zoneName = Ic, Re.dates = w("dates accessor is deprecated. Use date instead.", Me), Re.months = w("months accessor is deprecated. Use month instead", ja), Re.years = w("years accessor is deprecated. Use year instead", ke), Re.zone = w("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", Db), Re.isDSTShifted = w("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", Jb);
  var Se = Re,
      Te = B.prototype;
  Te.calendar = C, Te.longDateFormat = D, Te.invalidDate = E, Te.ordinal = F, Te.preparse = Lc, Te.postformat = Lc, Te.relativeTime = G, Te.pastFuture = H, Te.set = z, Te.months = ea, Te.monthsShort = fa, Te.monthsParse = ha, Te.monthsRegex = ma, Te.monthsShortRegex = la, Te.week = xa, Te.firstDayOfYear = za, Te.firstDayOfWeek = ya, Te.weekdays = Ea, Te.weekdaysMin = Ga, Te.weekdaysShort = Fa, Te.weekdaysParse = Ia, Te.weekdaysRegex = Ma, Te.weekdaysShortRegex = Na, Te.weekdaysMinRegex = Oa, Te.isPM = Ua, Te.meridiem = Va, Za("en", {
    ordinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal: function(a) {
      var b = a % 10,
          c = 1 === t(a % 100 / 10) ? "th" : 1 === b ? "st" : 2 === b ? "nd" : 3 === b ? "rd" : "th";
      return a + c;
    }
  }), a.lang = w("moment.lang is deprecated. Use moment.locale instead.", Za), a.langData = w("moment.langData is deprecated. Use moment.localeData instead.", ab);
  var Ue = Math.abs,
      Ve = cd("ms"),
      We = cd("s"),
      Xe = cd("m"),
      Ye = cd("h"),
      Ze = cd("d"),
      $e = cd("w"),
      _e = cd("M"),
      af = cd("y"),
      bf = ed("milliseconds"),
      cf = ed("seconds"),
      df = ed("minutes"),
      ef = ed("hours"),
      ff = ed("days"),
      gf = ed("months"),
      hf = ed("years"),
      jf = Math.round,
      kf = {
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        M: 11
      },
      lf = Math.abs,
      mf = vb.prototype;
  mf.abs = Uc, mf.add = Wc, mf.subtract = Xc, mf.as = ad, mf.asMilliseconds = Ve, mf.asSeconds = We, mf.asMinutes = Xe, mf.asHours = Ye, mf.asDays = Ze, mf.asWeeks = $e, mf.asMonths = _e, mf.asYears = af, mf.valueOf = bd, mf._bubble = Zc, mf.get = dd, mf.milliseconds = bf, mf.seconds = cf, mf.minutes = df, mf.hours = ef, mf.days = ff, mf.weeks = fd, mf.months = gf, mf.years = hf, mf.humanize = kd, mf.toISOString = ld, mf.toString = ld, mf.toJSON = ld, mf.locale = jc, mf.localeData = kc, mf.toIsoString = w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", ld), mf.lang = Le, T("X", 0, 0, "unix"), T("x", 0, 0, "valueOf"), Y("x", Rd), Y("X", Ud), aa("X", function(a, b, c) {
    c._d = new Date(1e3 * parseFloat(a, 10));
  }), aa("x", function(a, b, c) {
    c._d = new Date(t(a));
  }), a.version = "2.15.1", b(rb), a.fn = Se, a.min = tb, a.max = ub, a.now = Fe, a.utc = j, a.unix = Jc, a.months = Pc, a.isDate = f, a.locale = Za, a.invalid = n, a.duration = Nb, a.isMoment = r, a.weekdays = Rc, a.parseZone = Kc, a.localeData = ab, a.isDuration = wb, a.monthsShort = Qc, a.weekdaysMin = Tc, a.defineLocale = $a, a.updateLocale = _a, a.locales = bb, a.weekdaysShort = Sc, a.normalizeUnits = J, a.relativeTimeRounding = id, a.relativeTimeThreshold = jd, a.calendarFormat = Tb, a.prototype = Se;
  var nf = a;
  return nf;
});

})();
$__System.registerDynamic("35", ["16", "20"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var form_field_types_1 = $__require("16");
    var moment = $__require("20");
    var RequiredFieldValidator = function () {
        function RequiredFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.TEXT, form_field_types_1.FormFieldTypes.MULTILINE_TEXT, form_field_types_1.FormFieldTypes.NUMBER, form_field_types_1.FormFieldTypes.TYPEAHEAD, form_field_types_1.FormFieldTypes.DROPDOWN, form_field_types_1.FormFieldTypes.PEOPLE, form_field_types_1.FormFieldTypes.FUNCTIONAL_GROUP, form_field_types_1.FormFieldTypes.RADIO_BUTTONS, form_field_types_1.FormFieldTypes.UPLOAD, form_field_types_1.FormFieldTypes.AMOUNT, form_field_types_1.FormFieldTypes.DYNAMIC_TABLE, form_field_types_1.FormFieldTypes.DATE];
        }
        RequiredFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && field.required;
        };
        RequiredFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field)) {
                if (field.type === form_field_types_1.FormFieldTypes.DROPDOWN) {
                    if (field.hasEmptyValue && field.emptyOption) {
                        if (field.value === field.emptyOption.id) {
                            return false;
                        }
                    }
                }
                if (field.type === form_field_types_1.FormFieldTypes.RADIO_BUTTONS) {
                    var option = field.options.find(function (opt) {
                        return opt.id === field.value;
                    });
                    return !!option;
                }
                if (field.type === form_field_types_1.FormFieldTypes.UPLOAD) {
                    return field.value && field.value.length > 0;
                }
                if (field.type === form_field_types_1.FormFieldTypes.DYNAMIC_TABLE) {
                    return field.value && field.value instanceof Array && field.value.length > 0;
                }
                if (field.value === null || field.value === undefined || field.value === '') {
                    return false;
                }
            }
            return true;
        };
        return RequiredFieldValidator;
    }();
    exports.RequiredFieldValidator = RequiredFieldValidator;
    var NumberFieldValidator = function () {
        function NumberFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.NUMBER, form_field_types_1.FormFieldTypes.AMOUNT];
        }
        NumberFieldValidator.isNumber = function (value) {
            if (value === null || value === undefined || value === '') {
                return false;
            }
            return !isNaN(+value);
        };
        NumberFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1;
        };
        NumberFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field)) {
                if (field.value === null || field.value === undefined || field.value === '') {
                    return true;
                }
                var valueStr = '' + field.value;
                var pattern = new RegExp(/^-?\d+$/);
                if (field.enableFractions) {
                    pattern = new RegExp(/^-?[0-9]+(\.[0-9]{1,2})?$/);
                }
                if (valueStr.match(pattern)) {
                    return true;
                }
                field.validationSummary = 'Incorrect number format';
                return false;
            }
            return true;
        };
        return NumberFieldValidator;
    }();
    exports.NumberFieldValidator = NumberFieldValidator;
    var DateFieldValidator = function () {
        function DateFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.DATE];
        }
        DateFieldValidator.isValidDate = function (dateString, dateFormat) {
            if (dateFormat === void 0) {
                dateFormat = 'D-M-YYYY';
            }
            if (dateString) {
                var d = moment(dateString.split('T')[0], dateFormat, true);
                return d.isValid();
            }
            return false;
        };
        DateFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1;
        };
        DateFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                if (DateFieldValidator.isValidDate(field.value)) {
                    return true;
                }
                field.validationSummary = 'Invalid date format';
                return false;
            }
            return true;
        };
        return DateFieldValidator;
    }();
    exports.DateFieldValidator = DateFieldValidator;
    var MinDateFieldValidator = function () {
        function MinDateFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.DATE];
        }
        MinDateFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;
        };
        MinDateFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                var dateFormat = 'D-M-YYYY';
                if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {
                    field.validationSummary = 'Invalid date format';
                    return false;
                }
                var d = moment(field.value.split('T')[0], dateFormat);
                var min = moment(field.minValue, dateFormat);
                if (d.isBefore(min)) {
                    field.validationSummary = "Should not be less than " + field.minValue;
                    return false;
                }
            }
            return true;
        };
        return MinDateFieldValidator;
    }();
    exports.MinDateFieldValidator = MinDateFieldValidator;
    var MaxDateFieldValidator = function () {
        function MaxDateFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.DATE];
        }
        MaxDateFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;
        };
        MaxDateFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                var dateFormat = 'D-M-YYYY';
                if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {
                    field.validationSummary = 'Invalid date format';
                    return false;
                }
                var d = moment(field.value.split('T')[0], dateFormat);
                var max = moment(field.maxValue, dateFormat);
                if (d.isAfter(max)) {
                    field.validationSummary = "Should not be greater than " + field.maxValue;
                    return false;
                }
            }
            return true;
        };
        return MaxDateFieldValidator;
    }();
    exports.MaxDateFieldValidator = MaxDateFieldValidator;
    var MinLengthFieldValidator = function () {
        function MinLengthFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.TEXT, form_field_types_1.FormFieldTypes.MULTILINE_TEXT];
        }
        MinLengthFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && field.minLength > 0;
        };
        MinLengthFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                if (field.value.length >= field.minLength) {
                    return true;
                }
                field.validationSummary = "Should be at least " + field.minLength + " characters long.";
                return false;
            }
            return true;
        };
        return MinLengthFieldValidator;
    }();
    exports.MinLengthFieldValidator = MinLengthFieldValidator;
    var MaxLengthFieldValidator = function () {
        function MaxLengthFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.TEXT, form_field_types_1.FormFieldTypes.MULTILINE_TEXT];
        }
        MaxLengthFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && field.maxLength > 0;
        };
        MaxLengthFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                if (field.value.length <= field.maxLength) {
                    return true;
                }
                field.validationSummary = "Should be " + field.maxLength + " characters maximum.";
                return false;
            }
            return true;
        };
        return MaxLengthFieldValidator;
    }();
    exports.MaxLengthFieldValidator = MaxLengthFieldValidator;
    var MinValueFieldValidator = function () {
        function MinValueFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.NUMBER, form_field_types_1.FormFieldTypes.AMOUNT];
        }
        MinValueFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && NumberFieldValidator.isNumber(field.minValue);
        };
        MinValueFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                var value = +field.value;
                var minValue = +field.minValue;
                if (value >= minValue) {
                    return true;
                }
                field.validationSummary = "Should not be less than " + field.minValue;
                return false;
            }
            return true;
        };
        return MinValueFieldValidator;
    }();
    exports.MinValueFieldValidator = MinValueFieldValidator;
    var MaxValueFieldValidator = function () {
        function MaxValueFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.NUMBER, form_field_types_1.FormFieldTypes.AMOUNT];
        }
        MaxValueFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && NumberFieldValidator.isNumber(field.maxValue);
        };
        MaxValueFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                var value = +field.value;
                var maxValue = +field.maxValue;
                if (value <= maxValue) {
                    return true;
                }
                field.validationSummary = "Should not be greater than " + field.maxValue;
                return false;
            }
            return true;
        };
        return MaxValueFieldValidator;
    }();
    exports.MaxValueFieldValidator = MaxValueFieldValidator;
    var RegExFieldValidator = function () {
        function RegExFieldValidator() {
            this.supportedTypes = [form_field_types_1.FormFieldTypes.TEXT, form_field_types_1.FormFieldTypes.MULTILINE_TEXT];
        }
        RegExFieldValidator.prototype.isSupported = function (field) {
            return field && this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;
        };
        RegExFieldValidator.prototype.validate = function (field) {
            if (this.isSupported(field) && field.value) {
                if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {
                    return true;
                }
                field.validationSummary = 'Invalid value format';
                return false;
            }
            return true;
        };
        return RegExFieldValidator;
    }();
    exports.RegExFieldValidator = RegExFieldValidator;
});
$__System.registerDynamic("7", ["16", "32", "25", "36", "15", "34", "37", "38", "39", "35"], true, function ($__require, exports, module) {
  /*!
   * @license
   * Copyright 2016 Alfresco Software, Ltd.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("16"));
  __export($__require("32"));
  __export($__require("25"));
  __export($__require("36"));
  __export($__require("15"));
  __export($__require("34"));
  __export($__require("37"));
  __export($__require("38"));
  __export($__require("39"));
  __export($__require("35"));
});
$__System.registerDynamic("10", ["11", "13", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "21", "22", "24", "26", "27", "28", "29", "2a", "2b", "2d", "2f", "30", "31", "33", "12", "7"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    var unknown_widget_1 = $__require("11");
    var tabs_widget_1 = $__require("13");
    var container_widget_1 = $__require("17");
    var text_widget_1 = $__require("18");
    var number_widget_1 = $__require("19");
    var checkbox_widget_1 = $__require("1a");
    var multiline_text_widget_1 = $__require("1b");
    var dropdown_widget_1 = $__require("1c");
    var hyperlink_widget_1 = $__require("1d");
    var radio_buttons_widget_1 = $__require("1e");
    var display_value_widget_1 = $__require("1f");
    var display_text_widget_1 = $__require("21");
    var upload_widget_1 = $__require("22");
    var attach_widget_1 = $__require("24");
    var typeahead_widget_1 = $__require("26");
    var functional_group_widget_1 = $__require("27");
    var people_widget_1 = $__require("28");
    var date_widget_1 = $__require("29");
    var amount_widget_1 = $__require("2a");
    var dynamic_table_widget_1 = $__require("2b");
    var date_editor_1 = $__require("2d");
    var dropdown_editor_1 = $__require("2f");
    var boolean_editor_1 = $__require("30");
    var text_editor_1 = $__require("31");
    var row_editor_1 = $__require("33");
    __export($__require("12"));
    __export($__require("7"));
    __export($__require("13"));
    __export($__require("17"));
    __export($__require("11"));
    __export($__require("18"));
    __export($__require("19"));
    __export($__require("1a"));
    __export($__require("1b"));
    __export($__require("1c"));
    __export($__require("1d"));
    __export($__require("1e"));
    __export($__require("1f"));
    __export($__require("21"));
    __export($__require("22"));
    __export($__require("24"));
    __export($__require("26"));
    __export($__require("27"));
    __export($__require("28"));
    __export($__require("29"));
    __export($__require("2a"));
    __export($__require("2b"));
    __export($__require("33"));
    __export($__require("2d"));
    __export($__require("2f"));
    __export($__require("30"));
    __export($__require("31"));
    exports.WIDGET_DIRECTIVES = [unknown_widget_1.UnknownWidget, tabs_widget_1.TabsWidget, container_widget_1.ContainerWidget, text_widget_1.TextWidget, number_widget_1.NumberWidget, checkbox_widget_1.CheckboxWidget, multiline_text_widget_1.MultilineTextWidget, dropdown_widget_1.DropdownWidget, hyperlink_widget_1.HyperlinkWidget, radio_buttons_widget_1.RadioButtonsWidget, display_value_widget_1.DisplayValueWidget, display_text_widget_1.DisplayTextWidget, upload_widget_1.UploadWidget, attach_widget_1.AttachWidget, typeahead_widget_1.TypeaheadWidget, functional_group_widget_1.FunctionalGroupWidget, people_widget_1.PeopleWidget, date_widget_1.DateWidget, amount_widget_1.AmountWidget, dynamic_table_widget_1.DynamicTableWidget, date_editor_1.DateEditorComponent, dropdown_editor_1.DropdownEditorComponent, boolean_editor_1.BooleanEditorComponent, text_editor_1.TextEditorComponent, row_editor_1.RowEditorComponent];
});
$__System.registerDynamic("3a", ["3b"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_event_1 = $__require("3b");
    var FormErrorEvent = function (_super) {
        __extends(FormErrorEvent, _super);
        function FormErrorEvent(form, error) {
            var _this = _super.call(this, form) || this;
            _this.error = error;
            return _this;
        }
        return FormErrorEvent;
    }(form_event_1.FormEvent);
    exports.FormErrorEvent = FormErrorEvent;
});
$__System.registerDynamic("3b", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var FormEvent = function () {
        function FormEvent(form) {
            this.form = form;
        }
        return FormEvent;
    }();
    exports.FormEvent = FormEvent;
});
$__System.registerDynamic("3c", ["3b"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __extends = this && this.__extends || function (d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var form_event_1 = $__require("3b");
    var FormFieldEvent = function (_super) {
        __extends(FormFieldEvent, _super);
        function FormFieldEvent(form, field) {
            var _this = _super.call(this, form) || this;
            _this.field = field;
            return _this;
        }
        return FormFieldEvent;
    }(form_event_1.FormEvent);
    exports.FormFieldEvent = FormFieldEvent;
});
$__System.registerDynamic("c", ["3b", "3a", "3c"], true, function ($__require, exports, module) {
  /*!
   * @license
   * Copyright 2016 Alfresco Software, Ltd.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("3b"));
  __export($__require("3a"));
  __export($__require("3c"));
});
$__System.registerDynamic("1", ["3", "4", "8", "2", "d", "a", "9", "b", "5", "23", "6", "3d", "10", "c"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("4");
    var activiti_form_component_1 = $__require("8");
    var form_field_component_1 = $__require("2");
    var activiti_start_form_component_1 = $__require("d");
    var form_service_1 = $__require("a");
    var ecm_model_service_1 = $__require("9");
    var node_service_1 = $__require("b");
    var widget_visibility_service_1 = $__require("5");
    var activiti_alfresco_service_1 = $__require("23");
    var form_rendering_service_1 = $__require("6");
    var http_1 = $__require("3d");
    var index_1 = $__require("10");
    __export($__require("8"));
    __export($__require("d"));
    __export($__require("a"));
    __export($__require("10"));
    __export($__require("9"));
    __export($__require("b"));
    __export($__require("6"));
    __export($__require("c"));
    exports.ACTIVITI_FORM_DIRECTIVES = [activiti_form_component_1.ActivitiForm, activiti_start_form_component_1.ActivitiStartForm, form_field_component_1.FormFieldComponent].concat(index_1.WIDGET_DIRECTIVES);
    exports.ACTIVITI_FORM_PROVIDERS = [form_service_1.FormService, ecm_model_service_1.EcmModelService, node_service_1.NodeService, widget_visibility_service_1.WidgetVisibilityService, activiti_alfresco_service_1.ActivitiAlfrescoContentService, form_rendering_service_1.FormRenderingService];
    var ActivitiFormModule = ActivitiFormModule_1 = function () {
        function ActivitiFormModule() {}
        ActivitiFormModule.forRoot = function () {
            return {
                ngModule: ActivitiFormModule_1,
                providers: exports.ACTIVITI_FORM_PROVIDERS.slice()
            };
        };
        return ActivitiFormModule;
    }();
    ActivitiFormModule = ActivitiFormModule_1 = __decorate([core_1.NgModule({
        imports: [ng2_alfresco_core_1.CoreModule, http_1.HttpModule],
        declarations: exports.ACTIVITI_FORM_DIRECTIVES.slice(),
        entryComponents: index_1.WIDGET_DIRECTIVES.slice(),
        providers: exports.ACTIVITI_FORM_PROVIDERS.slice(),
        exports: exports.ACTIVITI_FORM_DIRECTIVES.slice()
    })], ActivitiFormModule);
    exports.ActivitiFormModule = ActivitiFormModule;
    var ActivitiFormModule_1;
    
});
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define(["@angular/core","@angular/http","ng2-alfresco-core","rxjs/Rx"], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory(require("@angular/core"), require("@angular/http"), require("ng2-alfresco-core"), require("rxjs/Rx"));
  else
    throw new Error("Module must be loaded as AMD or CommonJS");
});
//# sourceMappingURL=ng2-activiti-form.js.map