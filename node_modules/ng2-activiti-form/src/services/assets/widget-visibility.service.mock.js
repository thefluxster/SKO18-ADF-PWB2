/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var index_1 = require("../../components/widgets/core/index");
exports.formTest = new index_1.FormModel({});
exports.fakeTaskProcessVariableModels = [
    { id: 'TEST_VAR_1', type: 'string', value: 'test_value_1' },
    { id: 'TEST_VAR_2', type: 'string', value: 'test_value_2' },
    { id: 'TEST_VAR_3', type: 'string', value: 'test_value_3' }
];
exports.formValues = {
    'test_1': 'value_1',
    'test_2': 'value_2',
    'test_3': 'value_1',
    'test_4': 'dropdown_id',
    'test_5': 'dropdown_label',
    'dropdown': { 'id': 'dropdown_id', 'name': 'dropdown_label' }
};
exports.fakeFormJson = {
    id: '9999',
    name: 'FORM_VISIBILITY',
    processDefinitionId: 'PROCESS_TEST:9:9999',
    processDefinitionName: 'PROCESS_TEST',
    processDefinitionKey: 'PROCESS_TEST',
    taskId: '999',
    taskName: 'TEST',
    fields: [
        {
            fieldType: 'ContainerRepresentation',
            id: '000000000000000000',
            name: 'Label',
            type: 'container',
            value: null,
            numberOfColumns: 2,
            fields: {
                1: [
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'FIELD_TEST',
                        name: 'FIELD_TEST',
                        type: 'text',
                        value: 'RIGHT_FORM_FIELD_VALUE',
                        visibilityCondition: null,
                        isVisible: true
                    },
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'FIELD_WITH_CONDITION',
                        name: 'FIELD_WITH_CONDITION',
                        type: 'text',
                        value: 'field_with_condition_value',
                        visibilityCondition: null,
                        isVisible: true
                    },
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'LEFT_FORM_FIELD_ID',
                        name: 'LEFT_FORM_FIELD_NAME',
                        type: 'text',
                        value: 'LEFT_FORM_FIELD_VALUE',
                        visibilityCondition: null,
                        isVisible: true
                    }
                ],
                2: [
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'RIGHT_FORM_FIELD_ID',
                        name: 'RIGHT_FORM_FIELD_NAME',
                        type: 'text',
                        value: 'RIGHT_FORM_FIELD_VALUE',
                        visibilityCondition: null,
                        isVisible: true
                    }
                ]
            }
        }
    ]
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2Fzc2V0cy93aWRnZXQtdmlzaWJpbGl0eS5zZXJ2aWNlLm1vY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOztBQUVILDZEQUE0RTtBQUVqRSxRQUFBLFFBQVEsR0FBRyxJQUFJLGlCQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFN0IsUUFBQSw2QkFBNkIsR0FBRztJQUN2QyxFQUFDLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFDO0lBQ3pELEVBQUMsRUFBRSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUM7SUFDekQsRUFBQyxFQUFFLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBQztDQUM1RCxDQUFDO0FBRVMsUUFBQSxVQUFVLEdBQWU7SUFDaEMsUUFBUSxFQUFFLFNBQVM7SUFDbkIsUUFBUSxFQUFFLFNBQVM7SUFDbkIsUUFBUSxFQUFFLFNBQVM7SUFDbkIsUUFBUSxFQUFFLGFBQWE7SUFDdkIsUUFBUSxFQUFFLGdCQUFnQjtJQUMxQixVQUFVLEVBQUUsRUFBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBQztDQUM5RCxDQUFDO0FBRVMsUUFBQSxZQUFZLEdBQUc7SUFDdEIsRUFBRSxFQUFFLE1BQU07SUFDVixJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLG1CQUFtQixFQUFFLHFCQUFxQjtJQUMxQyxxQkFBcUIsRUFBRSxjQUFjO0lBQ3JDLG9CQUFvQixFQUFFLGNBQWM7SUFDcEMsTUFBTSxFQUFFLEtBQUs7SUFDYixRQUFRLEVBQUUsTUFBTTtJQUNoQixNQUFNLEVBQUU7UUFDSjtZQUNJLFNBQVMsRUFBRSx5QkFBeUI7WUFDcEMsRUFBRSxFQUFFLG9CQUFvQjtZQUN4QixJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxXQUFXO1lBQ2pCLEtBQUssRUFBRSxJQUFJO1lBQ1gsZUFBZSxFQUFFLENBQUM7WUFDbEIsTUFBTSxFQUFFO2dCQUNKLENBQUMsRUFBRTtvQkFDQzt3QkFDSSxTQUFTLEVBQUUseUJBQXlCO3dCQUNwQyxFQUFFLEVBQUUsWUFBWTt3QkFDaEIsSUFBSSxFQUFFLFlBQVk7d0JBQ2xCLElBQUksRUFBRSxNQUFNO3dCQUNaLEtBQUssRUFBRSx3QkFBd0I7d0JBQy9CLG1CQUFtQixFQUFFLElBQUk7d0JBQ3pCLFNBQVMsRUFBRSxJQUFJO3FCQUNsQjtvQkFDRDt3QkFDSSxTQUFTLEVBQUUseUJBQXlCO3dCQUNwQyxFQUFFLEVBQUUsc0JBQXNCO3dCQUMxQixJQUFJLEVBQUUsc0JBQXNCO3dCQUM1QixJQUFJLEVBQUUsTUFBTTt3QkFDWixLQUFLLEVBQUUsNEJBQTRCO3dCQUNuQyxtQkFBbUIsRUFBRSxJQUFJO3dCQUN6QixTQUFTLEVBQUUsSUFBSTtxQkFDbEI7b0JBQ0Q7d0JBQ0ksU0FBUyxFQUFFLHlCQUF5Qjt3QkFDcEMsRUFBRSxFQUFFLG9CQUFvQjt3QkFDeEIsSUFBSSxFQUFFLHNCQUFzQjt3QkFDNUIsSUFBSSxFQUFFLE1BQU07d0JBQ1osS0FBSyxFQUFFLHVCQUF1Qjt3QkFDOUIsbUJBQW1CLEVBQUUsSUFBSTt3QkFDekIsU0FBUyxFQUFFLElBQUk7cUJBQ2xCO2lCQUNKO2dCQUNELENBQUMsRUFBRTtvQkFDQzt3QkFDSSxTQUFTLEVBQUUseUJBQXlCO3dCQUNwQyxFQUFFLEVBQUUscUJBQXFCO3dCQUN6QixJQUFJLEVBQUUsdUJBQXVCO3dCQUM3QixJQUFJLEVBQUUsTUFBTTt3QkFDWixLQUFLLEVBQUUsd0JBQXdCO3dCQUMvQixtQkFBbUIsRUFBRSxJQUFJO3dCQUN6QixTQUFTLEVBQUUsSUFBSTtxQkFDbEI7aUJBQ0o7YUFDSjtTQUNKO0tBQ0o7Q0FDSixDQUFDIiwiZmlsZSI6InNlcnZpY2VzL2Fzc2V0cy93aWRnZXQtdmlzaWJpbGl0eS5zZXJ2aWNlLm1vY2suanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBGb3JtTW9kZWwsIEZvcm1WYWx1ZXMgfSBmcm9tICcuLi8uLi9jb21wb25lbnRzL3dpZGdldHMvY29yZS9pbmRleCc7XG5cbmV4cG9ydCB2YXIgZm9ybVRlc3QgPSBuZXcgRm9ybU1vZGVsKHt9KTtcblxuZXhwb3J0IHZhciBmYWtlVGFza1Byb2Nlc3NWYXJpYWJsZU1vZGVscyA9IFtcbiAgICB7aWQ6ICdURVNUX1ZBUl8xJywgdHlwZTogJ3N0cmluZycsIHZhbHVlOiAndGVzdF92YWx1ZV8xJ30sXG4gICAge2lkOiAnVEVTVF9WQVJfMicsIHR5cGU6ICdzdHJpbmcnLCB2YWx1ZTogJ3Rlc3RfdmFsdWVfMid9LFxuICAgIHtpZDogJ1RFU1RfVkFSXzMnLCB0eXBlOiAnc3RyaW5nJywgdmFsdWU6ICd0ZXN0X3ZhbHVlXzMnfVxuXTtcblxuZXhwb3J0IHZhciBmb3JtVmFsdWVzOiBGb3JtVmFsdWVzID0ge1xuICAgICd0ZXN0XzEnOiAndmFsdWVfMScsXG4gICAgJ3Rlc3RfMic6ICd2YWx1ZV8yJyxcbiAgICAndGVzdF8zJzogJ3ZhbHVlXzEnLFxuICAgICd0ZXN0XzQnOiAnZHJvcGRvd25faWQnLFxuICAgICd0ZXN0XzUnOiAnZHJvcGRvd25fbGFiZWwnLFxuICAgICdkcm9wZG93bic6IHsnaWQnOiAnZHJvcGRvd25faWQnLCAnbmFtZSc6ICdkcm9wZG93bl9sYWJlbCd9XG59O1xuXG5leHBvcnQgdmFyIGZha2VGb3JtSnNvbiA9IHtcbiAgICBpZDogJzk5OTknLFxuICAgIG5hbWU6ICdGT1JNX1ZJU0lCSUxJVFknLFxuICAgIHByb2Nlc3NEZWZpbml0aW9uSWQ6ICdQUk9DRVNTX1RFU1Q6OTo5OTk5JyxcbiAgICBwcm9jZXNzRGVmaW5pdGlvbk5hbWU6ICdQUk9DRVNTX1RFU1QnLFxuICAgIHByb2Nlc3NEZWZpbml0aW9uS2V5OiAnUFJPQ0VTU19URVNUJyxcbiAgICB0YXNrSWQ6ICc5OTknLFxuICAgIHRhc2tOYW1lOiAnVEVTVCcsXG4gICAgZmllbGRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGZpZWxkVHlwZTogJ0NvbnRhaW5lclJlcHJlc2VudGF0aW9uJyxcbiAgICAgICAgICAgIGlkOiAnMDAwMDAwMDAwMDAwMDAwMDAwJyxcbiAgICAgICAgICAgIG5hbWU6ICdMYWJlbCcsXG4gICAgICAgICAgICB0eXBlOiAnY29udGFpbmVyJyxcbiAgICAgICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICAgICAgbnVtYmVyT2ZDb2x1bW5zOiAyLFxuICAgICAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgICAgICAgMTogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZFR5cGU6ICdGb3JtRmllbGRSZXByZXNlbnRhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogJ0ZJRUxEX1RFU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0ZJRUxEX1RFU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdSSUdIVF9GT1JNX0ZJRUxEX1ZBTFVFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHlDb25kaXRpb246IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1Zpc2libGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRUeXBlOiAnRm9ybUZpZWxkUmVwcmVzZW50YXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdGSUVMRF9XSVRIX0NPTkRJVElPTicsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnRklFTERfV0lUSF9DT05ESVRJT04nLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdmaWVsZF93aXRoX2NvbmRpdGlvbl92YWx1ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5Q29uZGl0aW9uOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNWaXNpYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkVHlwZTogJ0Zvcm1GaWVsZFJlcHJlc2VudGF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAnTEVGVF9GT1JNX0ZJRUxEX0lEJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdMRUZUX0ZPUk1fRklFTERfTkFNRScsXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ0xFRlRfRk9STV9GSUVMRF9WQUxVRScsXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5Q29uZGl0aW9uOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNWaXNpYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIDI6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRUeXBlOiAnRm9ybUZpZWxkUmVwcmVzZW50YXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdSSUdIVF9GT1JNX0ZJRUxEX0lEJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdSSUdIVF9GT1JNX0ZJRUxEX05BTUUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdSSUdIVF9GT1JNX0ZJRUxEX1ZBTFVFJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHlDb25kaXRpb246IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1Zpc2libGU6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIF1cbn07XG4iXX0=
