/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var container_model_1 = require("./../core/container.model");
var form_field_types_1 = require("./../core/form-field-types");
var ContainerWidgetModel = (function (_super) {
    __extends(ContainerWidgetModel, _super);
    function ContainerWidgetModel(field) {
        var _this = _super.call(this, field) || this;
        _this.columns = [];
        _this.isExpanded = true;
        if (_this.field) {
            _this.columns = _this.field.columns || [];
            _this.isExpanded = !_this.isCollapsedByDefault();
        }
        return _this;
    }
    ContainerWidgetModel.prototype.isGroup = function () {
        return this.type === form_field_types_1.FormFieldTypes.GROUP;
    };
    ContainerWidgetModel.prototype.isCollapsible = function () {
        var allowCollapse = false;
        if (this.isGroup() && this.field.params['allowCollapse']) {
            allowCollapse = this.field.params['allowCollapse'];
        }
        return allowCollapse;
    };
    ContainerWidgetModel.prototype.isCollapsedByDefault = function () {
        var collapseByDefault = false;
        if (this.isCollapsible() && this.field.params['collapseByDefault']) {
            collapseByDefault = this.field.params['collapseByDefault'];
        }
        return collapseByDefault;
    };
    return ContainerWidgetModel;
}(container_model_1.ContainerModel));
exports.ContainerWidgetModel = ContainerWidgetModel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvd2lkZ2V0cy9jb250YWluZXIvY29udGFpbmVyLndpZGdldC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7Ozs7Ozs7QUFFSCw2REFBMkQ7QUFFM0QsK0RBQTREO0FBRzVEO0lBQTBDLHdDQUFjO0lBNkJwRCw4QkFBWSxLQUFxQjtRQUFqQyxZQUNJLGtCQUFNLEtBQUssQ0FBQyxTQU1mO1FBbENELGFBQU8sR0FBMkIsRUFBRSxDQUFDO1FBQ3JDLGdCQUFVLEdBQVksSUFBSSxDQUFDO1FBNkJ2QixFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNiLEtBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO1lBQ3hDLEtBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxLQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztRQUNuRCxDQUFDOztJQUNMLENBQUM7SUEvQkQsc0NBQU8sR0FBUDtRQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLGlDQUFjLENBQUMsS0FBSyxDQUFDO0lBQzlDLENBQUM7SUFFRCw0Q0FBYSxHQUFiO1FBQ0ksSUFBSSxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBRTFCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkQsYUFBYSxHQUFhLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2pFLENBQUM7UUFFRCxNQUFNLENBQUMsYUFBYSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxtREFBb0IsR0FBcEI7UUFDSSxJQUFJLGlCQUFpQixHQUFHLEtBQUssQ0FBQztRQUU5QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDakUsaUJBQWlCLEdBQWEsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUN6RSxDQUFDO1FBRUQsTUFBTSxDQUFDLGlCQUFpQixDQUFDO0lBQzdCLENBQUM7SUFVTCwyQkFBQztBQUFELENBckNBLEFBcUNDLENBckN5QyxnQ0FBYyxHQXFDdkQ7QUFyQ1ksb0RBQW9CIiwiZmlsZSI6ImNvbXBvbmVudHMvd2lkZ2V0cy9jb250YWluZXIvY29udGFpbmVyLndpZGdldC5tb2RlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbnRhaW5lck1vZGVsIH0gZnJvbSAnLi8uLi9jb3JlL2NvbnRhaW5lci5tb2RlbCc7XG5pbXBvcnQgeyBDb250YWluZXJDb2x1bW5Nb2RlbCB9IGZyb20gJy4vLi4vY29yZS9jb250YWluZXItY29sdW1uLm1vZGVsJztcbmltcG9ydCB7IEZvcm1GaWVsZFR5cGVzIH0gZnJvbSAnLi8uLi9jb3JlL2Zvcm0tZmllbGQtdHlwZXMnO1xuaW1wb3J0IHsgRm9ybUZpZWxkTW9kZWwgfSBmcm9tICcuLy4uL2NvcmUvZm9ybS1maWVsZC5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBDb250YWluZXJXaWRnZXRNb2RlbCBleHRlbmRzIENvbnRhaW5lck1vZGVsIHtcblxuICAgIGNvbHVtbnM6IENvbnRhaW5lckNvbHVtbk1vZGVsW10gPSBbXTtcbiAgICBpc0V4cGFuZGVkOiBib29sZWFuID0gdHJ1ZTtcblxuICAgIGlzR3JvdXAoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IEZvcm1GaWVsZFR5cGVzLkdST1VQO1xuICAgIH1cblxuICAgIGlzQ29sbGFwc2libGUoKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBhbGxvd0NvbGxhcHNlID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKHRoaXMuaXNHcm91cCgpICYmIHRoaXMuZmllbGQucGFyYW1zWydhbGxvd0NvbGxhcHNlJ10pIHtcbiAgICAgICAgICAgIGFsbG93Q29sbGFwc2UgPSA8Ym9vbGVhbj4gdGhpcy5maWVsZC5wYXJhbXNbJ2FsbG93Q29sbGFwc2UnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhbGxvd0NvbGxhcHNlO1xuICAgIH1cblxuICAgIGlzQ29sbGFwc2VkQnlEZWZhdWx0KCk6IGJvb2xlYW4ge1xuICAgICAgICBsZXQgY29sbGFwc2VCeURlZmF1bHQgPSBmYWxzZTtcblxuICAgICAgICBpZiAodGhpcy5pc0NvbGxhcHNpYmxlKCkgJiYgdGhpcy5maWVsZC5wYXJhbXNbJ2NvbGxhcHNlQnlEZWZhdWx0J10pIHtcbiAgICAgICAgICAgIGNvbGxhcHNlQnlEZWZhdWx0ID0gPGJvb2xlYW4+IHRoaXMuZmllbGQucGFyYW1zWydjb2xsYXBzZUJ5RGVmYXVsdCddO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNvbGxhcHNlQnlEZWZhdWx0O1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKGZpZWxkOiBGb3JtRmllbGRNb2RlbCkge1xuICAgICAgICBzdXBlcihmaWVsZCk7XG5cbiAgICAgICAgaWYgKHRoaXMuZmllbGQpIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1ucyA9IHRoaXMuZmllbGQuY29sdW1ucyB8fCBbXTtcbiAgICAgICAgICAgIHRoaXMuaXNFeHBhbmRlZCA9ICF0aGlzLmlzQ29sbGFwc2VkQnlEZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=
