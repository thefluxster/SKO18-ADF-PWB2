/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var dynamic_table_widget_model_1 = require("./../../dynamic-table.widget.model");
var TextEditorComponent = (function () {
    function TextEditorComponent() {
    }
    TextEditorComponent.prototype.ngOnInit = function () {
        this.displayName = this.table.getDisplayText(this.column);
    };
    TextEditorComponent.prototype.onValueChanged = function (row, column, event) {
        var value = event.target.value;
        row.value[column.id] = value;
    };
    return TextEditorComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", dynamic_table_widget_model_1.DynamicTableModel)
], TextEditorComponent.prototype, "table", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], TextEditorComponent.prototype, "row", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], TextEditorComponent.prototype, "column", void 0);
TextEditorComponent = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'alf-text-editor',
        template: "<div alfresco-mdl-textfield class=\"text-editor\">     <input         class=\"mdl-textfield__input\"         type=\"text\"         [value]=\"table.getCellValue(row, column)\"         (keyup)=\"onValueChanged(row, column, $event)\"         [required]=\"column.required\"         [disabled]=\"!column.editable\"         [attr.id]=\"column.id\">     <label class=\"mdl-textfield__label\" [attr.for]=\"column.id\">{{displayName}}</label> </div>",
        styles: [".text-editor {     width: 100%; }"]
    })
], TextEditorComponent);
exports.TextEditorComponent = TextEditorComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvd2lkZ2V0cy9keW5hbWljLXRhYmxlL2VkaXRvcnMvdGV4dC90ZXh0LmVkaXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7Ozs7Ozs7Ozs7O0FBRUgsc0NBQXlEO0FBQ3pELGlGQUE0RztBQVE1RyxJQUFhLG1CQUFtQjtJQUFoQztJQXNCQSxDQUFDO0lBVEcsc0NBQVEsR0FBUjtRQUNJLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCw0Q0FBYyxHQUFkLFVBQWUsR0FBb0IsRUFBRSxNQUEwQixFQUFFLEtBQVU7UUFDdkUsSUFBSSxLQUFLLEdBQTJCLEtBQUssQ0FBQyxNQUFPLENBQUMsS0FBSyxDQUFDO1FBQ3hELEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNqQyxDQUFDO0lBRUwsMEJBQUM7QUFBRCxDQXRCQSxBQXNCQyxJQUFBO0FBbkJHO0lBREMsWUFBSyxFQUFFOzhCQUNELDhDQUFpQjtrREFBQztBQUd6QjtJQURDLFlBQUssRUFBRTs7Z0RBQ2E7QUFHckI7SUFEQyxZQUFLLEVBQUU7O21EQUNtQjtBQVRsQixtQkFBbUI7SUFOL0IsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxNQUFNLENBQUMsRUFBRTtRQUNuQixRQUFRLEVBQUUsaUJBQWlCO1FBQzNCLFFBQVEsRUFBRSwwYkFBMGI7UUFDcGMsTUFBTSxFQUFFLENBQUMsbUNBQW1DLENBQUM7S0FDaEQsQ0FBQztHQUNXLG1CQUFtQixDQXNCL0I7QUF0Qlksa0RBQW1CIiwiZmlsZSI6ImNvbXBvbmVudHMvd2lkZ2V0cy9keW5hbWljLXRhYmxlL2VkaXRvcnMvdGV4dC90ZXh0LmVkaXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRHluYW1pY1RhYmxlUm93LCBEeW5hbWljVGFibGVDb2x1bW4sIER5bmFtaWNUYWJsZU1vZGVsIH0gZnJvbSAnLi8uLi8uLi9keW5hbWljLXRhYmxlLndpZGdldC5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICAgIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG4gICAgc2VsZWN0b3I6ICdhbGYtdGV4dC1lZGl0b3InLFxuICAgIHRlbXBsYXRlOiBcIjxkaXYgYWxmcmVzY28tbWRsLXRleHRmaWVsZCBjbGFzcz1cXFwidGV4dC1lZGl0b3JcXFwiPiAgICAgPGlucHV0ICAgICAgICAgY2xhc3M9XFxcIm1kbC10ZXh0ZmllbGRfX2lucHV0XFxcIiAgICAgICAgIHR5cGU9XFxcInRleHRcXFwiICAgICAgICAgW3ZhbHVlXT1cXFwidGFibGUuZ2V0Q2VsbFZhbHVlKHJvdywgY29sdW1uKVxcXCIgICAgICAgICAoa2V5dXApPVxcXCJvblZhbHVlQ2hhbmdlZChyb3csIGNvbHVtbiwgJGV2ZW50KVxcXCIgICAgICAgICBbcmVxdWlyZWRdPVxcXCJjb2x1bW4ucmVxdWlyZWRcXFwiICAgICAgICAgW2Rpc2FibGVkXT1cXFwiIWNvbHVtbi5lZGl0YWJsZVxcXCIgICAgICAgICBbYXR0ci5pZF09XFxcImNvbHVtbi5pZFxcXCI+ICAgICA8bGFiZWwgY2xhc3M9XFxcIm1kbC10ZXh0ZmllbGRfX2xhYmVsXFxcIiBbYXR0ci5mb3JdPVxcXCJjb2x1bW4uaWRcXFwiPnt7ZGlzcGxheU5hbWV9fTwvbGFiZWw+IDwvZGl2PlwiLFxuICAgIHN0eWxlczogW1wiLnRleHQtZWRpdG9yIHsgICAgIHdpZHRoOiAxMDAlOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIFRleHRFZGl0b3JDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgQElucHV0KClcbiAgICB0YWJsZTogRHluYW1pY1RhYmxlTW9kZWw7XG5cbiAgICBASW5wdXQoKVxuICAgIHJvdzogRHluYW1pY1RhYmxlUm93O1xuXG4gICAgQElucHV0KClcbiAgICBjb2x1bW46IER5bmFtaWNUYWJsZUNvbHVtbjtcblxuICAgIGRpc3BsYXlOYW1lOiBzdHJpbmc7XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5kaXNwbGF5TmFtZSA9IHRoaXMudGFibGUuZ2V0RGlzcGxheVRleHQodGhpcy5jb2x1bW4pO1xuICAgIH1cblxuICAgIG9uVmFsdWVDaGFuZ2VkKHJvdzogRHluYW1pY1RhYmxlUm93LCBjb2x1bW46IER5bmFtaWNUYWJsZUNvbHVtbiwgZXZlbnQ6IGFueSkge1xuICAgICAgICBsZXQgdmFsdWU6IGFueSA9ICg8SFRNTElucHV0RWxlbWVudD5ldmVudC50YXJnZXQpLnZhbHVlO1xuICAgICAgICByb3cudmFsdWVbY29sdW1uLmlkXSA9IHZhbHVlO1xuICAgIH1cblxufVxuIl19
