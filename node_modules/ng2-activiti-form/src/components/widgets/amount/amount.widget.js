/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = require("@angular/core");
var widget_component_1 = require("./../widget.component");
var AmountWidget = AmountWidget_1 = (function (_super) {
    __extends(AmountWidget, _super);
    function AmountWidget() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currency = AmountWidget_1.DEFAULT_CURRENCY;
        return _this;
    }
    AmountWidget.prototype.ngOnInit = function () {
        if (this.field && this.field.currency) {
            this.currency = this.field.currency;
        }
    };
    return AmountWidget;
}(widget_component_1.WidgetComponent));
AmountWidget.DEFAULT_CURRENCY = '$';
AmountWidget = AmountWidget_1 = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'amount-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield amount-widget\"      [class.amount-widget__invalid]=\"!field.isValid\">     <label [attr.for]=\"field.id\">{{field.name}}, {{currency}}</label>     <input class=\"mdl-textfield__input\"            type=\"text\"            [attr.id]=\"field.id\"            [attr.required]=\"isRequired()\"            [(ngModel)]=\"field.value\"            (ngModelChange)=\"checkVisibility(field)\"            [disabled]=\"field.readOnly\"            placeholder=\"{{field.placeholder}}\">     <span *ngIf=\"field.validationSummary\" class=\"mdl-textfield__error\">{{field.validationSummary}}</span> </div>",
        styles: [".amount-widget {     width: 100%; }   .amount-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .amount-widget__invalid .mdl-textfield__label {     color: #d50000; }  .amount-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .amount-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    })
], AmountWidget);
exports.AmountWidget = AmountWidget;
var AmountWidget_1;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvd2lkZ2V0cy9hbW91bnQvYW1vdW50LndpZGdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7Ozs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBa0Q7QUFDbEQsMERBQXdEO0FBUXhELElBQWEsWUFBWTtJQUFTLGdDQUFlO0lBTmpEO1FBQUEscUVBa0JDO1FBUkcsY0FBUSxHQUFXLGNBQVksQ0FBQyxnQkFBZ0IsQ0FBQzs7SUFRckQsQ0FBQztJQU5HLCtCQUFRLEdBQVI7UUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNwQyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO1FBQ3hDLENBQUM7SUFDTCxDQUFDO0lBRUwsbUJBQUM7QUFBRCxDQVpBLEFBWUMsQ0FaaUMsa0NBQWUsR0FZaEQ7QUFWVSw2QkFBZ0IsR0FBVyxHQUFHLENBQUM7QUFGN0IsWUFBWTtJQU54QixnQkFBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1FBQ25CLFFBQVEsRUFBRSxlQUFlO1FBQ3pCLFFBQVEsRUFBRSwybkJBQTJuQjtRQUNyb0IsTUFBTSxFQUFFLENBQUMsMFdBQTBXLENBQUM7S0FDdlgsQ0FBQztHQUNXLFlBQVksQ0FZeEI7QUFaWSxvQ0FBWSIsImZpbGUiOiJjb21wb25lbnRzL3dpZGdldHMvYW1vdW50L2Ftb3VudC53aWRnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi8uLi93aWRnZXQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICBzZWxlY3RvcjogJ2Ftb3VudC13aWRnZXQnLFxuICAgIHRlbXBsYXRlOiBcIjxkaXYgY2xhc3M9XFxcIm1kbC10ZXh0ZmllbGQgbWRsLWpzLXRleHRmaWVsZCBhbW91bnQtd2lkZ2V0XFxcIiAgICAgIFtjbGFzcy5hbW91bnQtd2lkZ2V0X19pbnZhbGlkXT1cXFwiIWZpZWxkLmlzVmFsaWRcXFwiPiAgICAgPGxhYmVsIFthdHRyLmZvcl09XFxcImZpZWxkLmlkXFxcIj57e2ZpZWxkLm5hbWV9fSwge3tjdXJyZW5jeX19PC9sYWJlbD4gICAgIDxpbnB1dCBjbGFzcz1cXFwibWRsLXRleHRmaWVsZF9faW5wdXRcXFwiICAgICAgICAgICAgdHlwZT1cXFwidGV4dFxcXCIgICAgICAgICAgICBbYXR0ci5pZF09XFxcImZpZWxkLmlkXFxcIiAgICAgICAgICAgIFthdHRyLnJlcXVpcmVkXT1cXFwiaXNSZXF1aXJlZCgpXFxcIiAgICAgICAgICAgIFsobmdNb2RlbCldPVxcXCJmaWVsZC52YWx1ZVxcXCIgICAgICAgICAgICAobmdNb2RlbENoYW5nZSk9XFxcImNoZWNrVmlzaWJpbGl0eShmaWVsZClcXFwiICAgICAgICAgICAgW2Rpc2FibGVkXT1cXFwiZmllbGQucmVhZE9ubHlcXFwiICAgICAgICAgICAgcGxhY2Vob2xkZXI9XFxcInt7ZmllbGQucGxhY2Vob2xkZXJ9fVxcXCI+ICAgICA8c3BhbiAqbmdJZj1cXFwiZmllbGQudmFsaWRhdGlvblN1bW1hcnlcXFwiIGNsYXNzPVxcXCJtZGwtdGV4dGZpZWxkX19lcnJvclxcXCI+e3tmaWVsZC52YWxpZGF0aW9uU3VtbWFyeX19PC9zcGFuPiA8L2Rpdj5cIixcbiAgICBzdHlsZXM6IFtcIi5hbW91bnQtd2lkZ2V0IHsgICAgIHdpZHRoOiAxMDAlOyB9ICAgLmFtb3VudC13aWRnZXRfX2ludmFsaWQgLm1kbC10ZXh0ZmllbGRfX2lucHV0IHsgICAgIGJvcmRlci1jb2xvcjogI2Q1MDAwMDsgfSAgLmFtb3VudC13aWRnZXRfX2ludmFsaWQgLm1kbC10ZXh0ZmllbGRfX2xhYmVsIHsgICAgIGNvbG9yOiAjZDUwMDAwOyB9ICAuYW1vdW50LXdpZGdldF9faW52YWxpZCAubWRsLXRleHRmaWVsZF9fbGFiZWw6YWZ0ZXIgeyAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Q1MDAwMDsgfSAgLmFtb3VudC13aWRnZXRfX2ludmFsaWQgLm1kbC10ZXh0ZmllbGRfX2Vycm9yIHsgICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDsgfVwiXVxufSlcbmV4cG9ydCBjbGFzcyBBbW91bnRXaWRnZXQgZXh0ZW5kcyBXaWRnZXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgc3RhdGljIERFRkFVTFRfQ1VSUkVOQ1k6IHN0cmluZyA9ICckJztcblxuICAgIGN1cnJlbmN5OiBzdHJpbmcgPSBBbW91bnRXaWRnZXQuREVGQVVMVF9DVVJSRU5DWTtcblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAodGhpcy5maWVsZCAmJiB0aGlzLmZpZWxkLmN1cnJlbmN5KSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbmN5ID0gdGhpcy5maWVsZC5jdXJyZW5jeTtcbiAgICAgICAgfVxuICAgIH1cblxufVxuIl19
