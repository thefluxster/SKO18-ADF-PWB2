/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var form_model_1 = require("./form.model");
var tab_model_1 = require("./tab.model");
var container_model_1 = require("./container.model");
describe('TabModel', function () {
    it('should setup with json config', function () {
        var json = {
            id: '<id>',
            title: '<title>',
            visibilityCondition: '<condition>'
        };
        var model = new tab_model_1.TabModel(null, json);
        expect(model.id).toBe(json.id);
        expect(model.title).toBe(json.title);
        expect(model.isVisible).toBe(true);
        expect(model.visibilityCondition).toBe(json.visibilityCondition);
    });
    it('should not setup with json config', function () {
        var model = new tab_model_1.TabModel(null, null);
        expect(model.id).toBeUndefined();
        expect(model.title).toBeUndefined();
        expect(model.isVisible).toBeDefined();
        expect(model.isVisible).toBe(true);
        expect(model.visibilityCondition).toBeUndefined();
    });
    it('should evaluate content based on fields', function () {
        var model = new tab_model_1.TabModel(null, null);
        model.fields = null;
        expect(model.hasContent()).toBeFalsy();
        model.fields = [];
        expect(model.hasContent()).toBeFalsy();
        model.fields = [new container_model_1.ContainerModel(null)];
        expect(model.hasContent()).toBeTruthy();
    });
    it('should store the form reference', function () {
        var form = new form_model_1.FormModel();
        var model = new tab_model_1.TabModel(form);
        expect(model.form).toBe(form);
    });
    it('should store original json', function () {
        var json = {};
        var model = new tab_model_1.TabModel(null, json);
        expect(model.json).toBe(json);
    });
});
//# sourceMappingURL=tab.model.spec.js.map