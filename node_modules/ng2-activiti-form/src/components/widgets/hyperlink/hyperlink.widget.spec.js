/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var hyperlink_widget_1 = require("./hyperlink.widget");
var form_model_1 = require("./../core/form.model");
var form_field_model_1 = require("./../core/form-field.model");
var widget_component_1 = require("./../widget.component");
describe('HyperlinkWidget', function () {
    var widget;
    beforeEach(function () {
        widget = new hyperlink_widget_1.HyperlinkWidget();
    });
    it('should get link text from field display text', function () {
        var text = 'hello world';
        widget.field = new form_field_model_1.FormFieldModel(new form_model_1.FormModel(), {
            displayText: text
        });
        widget.ngOnInit();
        expect(widget.linkText).toBe(text);
    });
    it('should get link text from field url', function () {
        var url = 'http://<address>';
        widget.field = new form_field_model_1.FormFieldModel(new form_model_1.FormModel(), {
            displayText: null,
            hyperlinkUrl: url
        });
        widget.ngOnInit();
        expect(widget.linkText).toBe(url);
    });
    it('should require field to get link text', function () {
        widget.field = null;
        widget.ngOnInit();
        expect(widget.linkText).toBeNull();
    });
    it('should not return link text', function () {
        widget.field = new form_field_model_1.FormFieldModel(new form_model_1.FormModel(), {
            displayText: null,
            hyperlinkUrl: null
        });
        widget.ngOnInit();
        expect(widget.linkText).toBeNull();
    });
    it('should return default url for missing field', function () {
        widget.field = null;
        widget.ngOnInit();
        expect(widget.linkUrl).toBe(widget_component_1.WidgetComponent.DEFAULT_HYPERLINK_URL);
    });
    it('should return default url for missing field property', function () {
        widget.field = new form_field_model_1.FormFieldModel(new form_model_1.FormModel(), {
            hyperlinkUrl: null
        });
        widget.ngOnInit();
        expect(widget.linkUrl).toBe(widget_component_1.WidgetComponent.DEFAULT_HYPERLINK_URL);
    });
    it('should prepend url with scheme', function () {
        var url = 'www.alfresco.com';
        widget.field = new form_field_model_1.FormFieldModel(new form_model_1.FormModel(), {
            hyperlinkUrl: url
        });
        widget.ngOnInit();
        expect(widget.linkUrl).toBe("" + widget_component_1.WidgetComponent.DEFAULT_HYPERLINK_SCHEME + url);
    });
    it('should not prepend url with scheme', function () {
        var url = 'https://<secure/address>';
        widget.field = new form_field_model_1.FormFieldModel(new form_model_1.FormModel(), {
            hyperlinkUrl: url
        });
        widget.ngOnInit();
        expect(widget.linkUrl).toBe(url);
    });
});
//# sourceMappingURL=hyperlink.widget.spec.js.map