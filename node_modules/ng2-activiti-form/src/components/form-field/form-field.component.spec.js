/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var testing_1 = require("@angular/core/testing");
var form_field_component_1 = require("./form-field.component");
var form_rendering_service_1 = require("./../../services/form-rendering.service");
var index_1 = require("./../widgets/core/index");
var text_widget_1 = require("./../widgets/text/text.widget");
var checkbox_widget_1 = require("./../widgets/checkbox/checkbox.widget");
var widget_visibility_service_1 = require("./../../services/widget-visibility.service");
describe('FormFieldComponent', function () {
    var fixture;
    var component;
    var componentHandler;
    var form;
    var formRenderingService;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            imports: [ng2_alfresco_core_1.CoreModule],
            declarations: [form_field_component_1.FormFieldComponent, text_widget_1.TextWidget, checkbox_widget_1.CheckboxWidget],
            providers: [
                form_rendering_service_1.FormRenderingService,
                widget_visibility_service_1.WidgetVisibilityService
            ]
        })
            .compileComponents();
    }));
    beforeEach(function () {
        componentHandler = jasmine.createSpyObj('componentHandler', [
            'upgradeAllRegistered',
            'upgradeElement'
        ]);
        window['componentHandler'] = componentHandler;
        fixture = testing_1.TestBed.createComponent(form_field_component_1.FormFieldComponent);
        component = fixture.componentInstance;
        formRenderingService = fixture.debugElement.injector.get(form_rendering_service_1.FormRenderingService);
        form = new index_1.FormModel();
    });
    xit('should create default component instance', function () {
        var field = new index_1.FormFieldModel(form, {
            type: index_1.FormFieldTypes.TEXT
        });
        component.field = field;
        fixture.detectChanges();
        expect(component.componentRef).toBeDefined();
        expect(component.componentRef.componentType).toBe(text_widget_1.TextWidget);
    });
    xit('should create custom component instance', function () {
        var field = new index_1.FormFieldModel(form, {
            type: index_1.FormFieldTypes.TEXT
        });
        formRenderingService.setComponentTypeResolver(index_1.FormFieldTypes.TEXT, function () { return checkbox_widget_1.CheckboxWidget; }, true);
        component.field = field;
        fixture.detectChanges();
        expect(component.componentRef).toBeDefined();
        expect(component.componentRef.componentType).toBe(checkbox_widget_1.CheckboxWidget);
    });
    it('should require field to create component', function () {
        component.field = null;
        fixture.detectChanges();
        expect(component.componentRef).toBeUndefined();
    });
    it('should require component type to be resolved', function () {
        var field = new index_1.FormFieldModel(form, {
            type: index_1.FormFieldTypes.TEXT
        });
        spyOn(formRenderingService, 'resolveComponentType').and.returnValue(null);
        component.field = field;
        fixture.detectChanges();
        expect(formRenderingService.resolveComponentType).toHaveBeenCalled();
        expect(component.componentRef).toBeUndefined();
    });
});
//# sourceMappingURL=form-field.component.spec.js.map