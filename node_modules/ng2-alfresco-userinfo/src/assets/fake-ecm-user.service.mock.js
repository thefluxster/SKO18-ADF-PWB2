/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var ecm_user_model_1 = require("../models/ecm-user.model");
exports.EcmUserModel = ecm_user_model_1.EcmUserModel;
var ecm_user_service_1 = require("../services/ecm-user.service");
exports.EcmUserService = ecm_user_service_1.EcmUserService;
var Rx_1 = require("rxjs/Rx");
exports.fakeEcmCompany = {
    organization: 'company-fake-name',
    address1: 'fake-address-1',
    address2: 'fake-address-2',
    address3: 'fake-address-3',
    postcode: 'fAk1',
    telephone: '00000000',
    fax: '11111111',
    email: 'fakeCompany@fake.com'
};
exports.fakeEcmUserNoImage = {
    id: 'fake-id',
    firstName: 'fake-first-name',
    lastName: 'fake-last-name',
    description: 'i am a fake user for test',
    avatarId: undefined,
    email: 'fakeEcm@ecmUser.com',
    skypeId: 'fake-skype-id',
    googleId: 'fake-googleId-id',
    instantMessageId: 'fake-instantMessageId-id',
    company: exports.fakeEcmCompany,
    jobTitle: 'test job',
    location: 'fake location',
    mobile: '000000000',
    telephone: '11111111',
    statusUpdatedAt: 'fake-date',
    userStatus: 'active',
    enabled: true,
    emailNotificationsEnabled: true
};
exports.fakeEcmUser = {
    id: 'fake-id',
    firstName: 'fake-first-name',
    lastName: 'fake-last-name',
    description: 'i am a fake user for test',
    avatarId: 'fake-avatar-id',
    email: 'fakeEcm@ecmUser.com',
    skypeId: 'fake-skype-id',
    googleId: 'fake-googleId-id',
    instantMessageId: 'fake-instantMessageId-id',
    company: exports.fakeEcmCompany,
    jobTitle: 'test job',
    location: 'fake location',
    mobile: '000000000',
    telephone: '11111111',
    statusUpdatedAt: 'fake-date',
    userStatus: 'active',
    enabled: true,
    emailNotificationsEnabled: true
};
exports.fakeEcmEditedUser = {
    id: 'fake-id',
    firstName: 'fake-first-name',
    lastName: 'fake-last-name',
    description: 'i am a fake user for test',
    avatarId: 'fake-avatar-id',
    email: 'fakeEcm@ecmUser.com',
    skypeId: 'fake-skype-id',
    googleId: 'fake-googleId-id',
    instantMessageId: 'fake-instantMessageId-id',
    company: exports.fakeEcmCompany,
    jobTitle: 'test job',
    location: 'fake location',
    mobile: '000000000',
    telephone: '11111111',
    statusUpdatedAt: 'fake-date',
    userStatus: 'active',
    enabled: true,
    emailNotificationsEnabled: true
};
var FakeEcmUserService = (function () {
    function FakeEcmUserService() {
        this.userNeeded = 0;
        this.usersList = [exports.fakeEcmUser, exports.fakeEcmUserNoImage, exports.fakeEcmEditedUser];
    }
    FakeEcmUserService.prototype.getUserInfo = function (userName) {
        return this.lastPromise = Rx_1.Observable.of(this.usersList[this.userNeeded]);
    };
    ;
    FakeEcmUserService.prototype.getCurrentUserInfo = function () {
        return this.getUserInfo('fake-id');
    };
    ;
    FakeEcmUserService.prototype.getUserProfileImage = function (avatarId) {
        if (avatarId) {
            return 'src/assets/images/ecmImg.gif';
        }
    };
    ;
    FakeEcmUserService.prototype.respondWithTheUserWithoutImage = function () {
        this.userNeeded = 1;
    };
    ;
    FakeEcmUserService.prototype.respondWithTheUserWithImage = function () {
        this.userNeeded = 0;
    };
    ;
    FakeEcmUserService.prototype.respondWithEditedUser = function () {
        this.userNeeded = 2;
    };
    ;
    return FakeEcmUserService;
}());
exports.FakeEcmUserService = FakeEcmUserService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9mYWtlLWVjbS11c2VyLnNlcnZpY2UubW9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7O0FBR0gsMkRBQXdEO0FBQS9DLHdDQUFBLFlBQVksQ0FBQTtBQUNyQixpRUFBOEQ7QUFBckQsNENBQUEsY0FBYyxDQUFBO0FBSXZCLDhCQUFxQztBQUUxQixRQUFBLGNBQWMsR0FBb0I7SUFDekMsWUFBWSxFQUFFLG1CQUFtQjtJQUNqQyxRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCLFFBQVEsRUFBRSxnQkFBZ0I7SUFDMUIsUUFBUSxFQUFFLGdCQUFnQjtJQUMxQixRQUFRLEVBQUUsTUFBTTtJQUNoQixTQUFTLEVBQUUsVUFBVTtJQUNyQixHQUFHLEVBQUUsVUFBVTtJQUNmLEtBQUssRUFBRSxzQkFBc0I7Q0FDaEMsQ0FBQztBQUVTLFFBQUEsa0JBQWtCLEdBQWlCO0lBQzFDLEVBQUUsRUFBRSxTQUFTO0lBQ2IsU0FBUyxFQUFFLGlCQUFpQjtJQUM1QixRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCLFdBQVcsRUFBRSwyQkFBMkI7SUFDeEMsUUFBUSxFQUFFLFNBQVM7SUFDbkIsS0FBSyxFQUFFLHFCQUFxQjtJQUM1QixPQUFPLEVBQUUsZUFBZTtJQUN4QixRQUFRLEVBQUUsa0JBQWtCO0lBQzVCLGdCQUFnQixFQUFFLDBCQUEwQjtJQUM1QyxPQUFPLEVBQUUsc0JBQWM7SUFDdkIsUUFBUSxFQUFFLFVBQVU7SUFDcEIsUUFBUSxFQUFFLGVBQWU7SUFDekIsTUFBTSxFQUFFLFdBQVc7SUFDbkIsU0FBUyxFQUFFLFVBQVU7SUFDckIsZUFBZSxFQUFFLFdBQVc7SUFDNUIsVUFBVSxFQUFFLFFBQVE7SUFDcEIsT0FBTyxFQUFFLElBQUk7SUFDYix5QkFBeUIsRUFBRSxJQUFJO0NBQ2xDLENBQUM7QUFFUyxRQUFBLFdBQVcsR0FBaUI7SUFDbkMsRUFBRSxFQUFFLFNBQVM7SUFDYixTQUFTLEVBQUUsaUJBQWlCO0lBQzVCLFFBQVEsRUFBRSxnQkFBZ0I7SUFDMUIsV0FBVyxFQUFFLDJCQUEyQjtJQUN4QyxRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCLEtBQUssRUFBRSxxQkFBcUI7SUFDNUIsT0FBTyxFQUFFLGVBQWU7SUFDeEIsUUFBUSxFQUFFLGtCQUFrQjtJQUM1QixnQkFBZ0IsRUFBRSwwQkFBMEI7SUFDNUMsT0FBTyxFQUFFLHNCQUFjO0lBQ3ZCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLFFBQVEsRUFBRSxlQUFlO0lBQ3pCLE1BQU0sRUFBRSxXQUFXO0lBQ25CLFNBQVMsRUFBRSxVQUFVO0lBQ3JCLGVBQWUsRUFBRSxXQUFXO0lBQzVCLFVBQVUsRUFBRSxRQUFRO0lBQ3BCLE9BQU8sRUFBRSxJQUFJO0lBQ2IseUJBQXlCLEVBQUUsSUFBSTtDQUNsQyxDQUFDO0FBRVMsUUFBQSxpQkFBaUIsR0FBaUI7SUFDekMsRUFBRSxFQUFFLFNBQVM7SUFDYixTQUFTLEVBQUUsaUJBQWlCO0lBQzVCLFFBQVEsRUFBRSxnQkFBZ0I7SUFDMUIsV0FBVyxFQUFFLDJCQUEyQjtJQUN4QyxRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCLEtBQUssRUFBRSxxQkFBcUI7SUFDNUIsT0FBTyxFQUFFLGVBQWU7SUFDeEIsUUFBUSxFQUFFLGtCQUFrQjtJQUM1QixnQkFBZ0IsRUFBRSwwQkFBMEI7SUFDNUMsT0FBTyxFQUFFLHNCQUFjO0lBQ3ZCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLFFBQVEsRUFBRSxlQUFlO0lBQ3pCLE1BQU0sRUFBRSxXQUFXO0lBQ25CLFNBQVMsRUFBRSxVQUFVO0lBQ3JCLGVBQWUsRUFBRSxXQUFXO0lBQzVCLFVBQVUsRUFBRSxRQUFRO0lBQ3BCLE9BQU8sRUFBRSxJQUFJO0lBQ2IseUJBQXlCLEVBQUUsSUFBSTtDQUNsQyxDQUFDO0FBRUY7SUFBQTtRQUdXLGVBQVUsR0FBRyxDQUFDLENBQUM7UUFDdEIsY0FBUyxHQUFHLENBQUMsbUJBQVcsRUFBRSwwQkFBa0IsRUFBRSx5QkFBaUIsQ0FBQyxDQUFDO0lBNEJyRSxDQUFDO0lBMUJHLHdDQUFXLEdBQVgsVUFBWSxRQUFnQjtRQUN4QixNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxlQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDN0UsQ0FBQztJQUFBLENBQUM7SUFFRiwrQ0FBa0IsR0FBbEI7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQUEsQ0FBQztJQUVGLGdEQUFtQixHQUFuQixVQUFvQixRQUFnQjtRQUNoQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ1gsTUFBTSxDQUFDLDhCQUE4QixDQUFDO1FBQzFDLENBQUM7SUFDTCxDQUFDO0lBQUEsQ0FBQztJQUVGLDJEQUE4QixHQUE5QjtRQUNJLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFBQSxDQUFDO0lBRUYsd0RBQTJCLEdBQTNCO1FBQ0ksSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUFBLENBQUM7SUFFRixrREFBcUIsR0FBckI7UUFDSSxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBQUEsQ0FBQztJQUVOLHlCQUFDO0FBQUQsQ0FoQ0EsQUFnQ0MsSUFBQTtBQWhDWSxnREFBa0IiLCJmaWxlIjoiYXNzZXRzL2Zha2UtZWNtLXVzZXIuc2VydmljZS5tb2NrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLy8gcmUtZXhwb3J0IGZvciB0ZXN0ZXIgY29udmVuaWVuY2VcbmV4cG9ydCB7IEVjbVVzZXJNb2RlbCB9IGZyb20gJy4uL21vZGVscy9lY20tdXNlci5tb2RlbCc7XG5leHBvcnQgeyBFY21Vc2VyU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2VjbS11c2VyLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBFY21Vc2VyTW9kZWwgfSBmcm9tICcuLi9tb2RlbHMvZWNtLXVzZXIubW9kZWwnO1xuaW1wb3J0IHsgRWNtQ29tcGFueU1vZGVsIH0gZnJvbSAnLi4vbW9kZWxzL2VjbS1jb21wYW55Lm1vZGVsJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL1J4JztcblxuZXhwb3J0IHZhciBmYWtlRWNtQ29tcGFueTogRWNtQ29tcGFueU1vZGVsID0ge1xuICAgIG9yZ2FuaXphdGlvbjogJ2NvbXBhbnktZmFrZS1uYW1lJyxcbiAgICBhZGRyZXNzMTogJ2Zha2UtYWRkcmVzcy0xJyxcbiAgICBhZGRyZXNzMjogJ2Zha2UtYWRkcmVzcy0yJyxcbiAgICBhZGRyZXNzMzogJ2Zha2UtYWRkcmVzcy0zJyxcbiAgICBwb3N0Y29kZTogJ2ZBazEnLFxuICAgIHRlbGVwaG9uZTogJzAwMDAwMDAwJyxcbiAgICBmYXg6ICcxMTExMTExMScsXG4gICAgZW1haWw6ICdmYWtlQ29tcGFueUBmYWtlLmNvbSdcbn07XG5cbmV4cG9ydCB2YXIgZmFrZUVjbVVzZXJOb0ltYWdlOiBFY21Vc2VyTW9kZWwgPSB7XG4gICAgaWQ6ICdmYWtlLWlkJyxcbiAgICBmaXJzdE5hbWU6ICdmYWtlLWZpcnN0LW5hbWUnLFxuICAgIGxhc3ROYW1lOiAnZmFrZS1sYXN0LW5hbWUnLFxuICAgIGRlc2NyaXB0aW9uOiAnaSBhbSBhIGZha2UgdXNlciBmb3IgdGVzdCcsXG4gICAgYXZhdGFySWQ6IHVuZGVmaW5lZCxcbiAgICBlbWFpbDogJ2Zha2VFY21AZWNtVXNlci5jb20nLFxuICAgIHNreXBlSWQ6ICdmYWtlLXNreXBlLWlkJyxcbiAgICBnb29nbGVJZDogJ2Zha2UtZ29vZ2xlSWQtaWQnLFxuICAgIGluc3RhbnRNZXNzYWdlSWQ6ICdmYWtlLWluc3RhbnRNZXNzYWdlSWQtaWQnLFxuICAgIGNvbXBhbnk6IGZha2VFY21Db21wYW55LFxuICAgIGpvYlRpdGxlOiAndGVzdCBqb2InLFxuICAgIGxvY2F0aW9uOiAnZmFrZSBsb2NhdGlvbicsXG4gICAgbW9iaWxlOiAnMDAwMDAwMDAwJyxcbiAgICB0ZWxlcGhvbmU6ICcxMTExMTExMScsXG4gICAgc3RhdHVzVXBkYXRlZEF0OiAnZmFrZS1kYXRlJyxcbiAgICB1c2VyU3RhdHVzOiAnYWN0aXZlJyxcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIGVtYWlsTm90aWZpY2F0aW9uc0VuYWJsZWQ6IHRydWVcbn07XG5cbmV4cG9ydCB2YXIgZmFrZUVjbVVzZXI6IEVjbVVzZXJNb2RlbCA9IHtcbiAgICBpZDogJ2Zha2UtaWQnLFxuICAgIGZpcnN0TmFtZTogJ2Zha2UtZmlyc3QtbmFtZScsXG4gICAgbGFzdE5hbWU6ICdmYWtlLWxhc3QtbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdpIGFtIGEgZmFrZSB1c2VyIGZvciB0ZXN0JyxcbiAgICBhdmF0YXJJZDogJ2Zha2UtYXZhdGFyLWlkJyxcbiAgICBlbWFpbDogJ2Zha2VFY21AZWNtVXNlci5jb20nLFxuICAgIHNreXBlSWQ6ICdmYWtlLXNreXBlLWlkJyxcbiAgICBnb29nbGVJZDogJ2Zha2UtZ29vZ2xlSWQtaWQnLFxuICAgIGluc3RhbnRNZXNzYWdlSWQ6ICdmYWtlLWluc3RhbnRNZXNzYWdlSWQtaWQnLFxuICAgIGNvbXBhbnk6IGZha2VFY21Db21wYW55LFxuICAgIGpvYlRpdGxlOiAndGVzdCBqb2InLFxuICAgIGxvY2F0aW9uOiAnZmFrZSBsb2NhdGlvbicsXG4gICAgbW9iaWxlOiAnMDAwMDAwMDAwJyxcbiAgICB0ZWxlcGhvbmU6ICcxMTExMTExMScsXG4gICAgc3RhdHVzVXBkYXRlZEF0OiAnZmFrZS1kYXRlJyxcbiAgICB1c2VyU3RhdHVzOiAnYWN0aXZlJyxcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIGVtYWlsTm90aWZpY2F0aW9uc0VuYWJsZWQ6IHRydWVcbn07XG5cbmV4cG9ydCB2YXIgZmFrZUVjbUVkaXRlZFVzZXI6IEVjbVVzZXJNb2RlbCA9IHtcbiAgICBpZDogJ2Zha2UtaWQnLFxuICAgIGZpcnN0TmFtZTogJ2Zha2UtZmlyc3QtbmFtZScsXG4gICAgbGFzdE5hbWU6ICdmYWtlLWxhc3QtbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdpIGFtIGEgZmFrZSB1c2VyIGZvciB0ZXN0JyxcbiAgICBhdmF0YXJJZDogJ2Zha2UtYXZhdGFyLWlkJyxcbiAgICBlbWFpbDogJ2Zha2VFY21AZWNtVXNlci5jb20nLFxuICAgIHNreXBlSWQ6ICdmYWtlLXNreXBlLWlkJyxcbiAgICBnb29nbGVJZDogJ2Zha2UtZ29vZ2xlSWQtaWQnLFxuICAgIGluc3RhbnRNZXNzYWdlSWQ6ICdmYWtlLWluc3RhbnRNZXNzYWdlSWQtaWQnLFxuICAgIGNvbXBhbnk6IGZha2VFY21Db21wYW55LFxuICAgIGpvYlRpdGxlOiAndGVzdCBqb2InLFxuICAgIGxvY2F0aW9uOiAnZmFrZSBsb2NhdGlvbicsXG4gICAgbW9iaWxlOiAnMDAwMDAwMDAwJyxcbiAgICB0ZWxlcGhvbmU6ICcxMTExMTExMScsXG4gICAgc3RhdHVzVXBkYXRlZEF0OiAnZmFrZS1kYXRlJyxcbiAgICB1c2VyU3RhdHVzOiAnYWN0aXZlJyxcbiAgICBlbmFibGVkOiB0cnVlLFxuICAgIGVtYWlsTm90aWZpY2F0aW9uc0VuYWJsZWQ6IHRydWVcbn07XG5cbmV4cG9ydCBjbGFzcyBGYWtlRWNtVXNlclNlcnZpY2Uge1xuXG4gICAgbGFzdFByb21pc2U6IE9ic2VydmFibGU8RWNtVXNlck1vZGVsPjtcbiAgICBwdWJsaWMgdXNlck5lZWRlZCA9IDA7XG4gICAgdXNlcnNMaXN0ID0gW2Zha2VFY21Vc2VyLCBmYWtlRWNtVXNlck5vSW1hZ2UsIGZha2VFY21FZGl0ZWRVc2VyXTtcblxuICAgIGdldFVzZXJJbmZvKHVzZXJOYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGFzdFByb21pc2UgPSBPYnNlcnZhYmxlLm9mKHRoaXMudXNlcnNMaXN0W3RoaXMudXNlck5lZWRlZF0pO1xuICAgIH07XG5cbiAgICBnZXRDdXJyZW50VXNlckluZm8oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFVzZXJJbmZvKCdmYWtlLWlkJyk7XG4gICAgfTtcblxuICAgIGdldFVzZXJQcm9maWxlSW1hZ2UoYXZhdGFySWQ6IHN0cmluZykge1xuICAgICAgICBpZiAoYXZhdGFySWQpIHtcbiAgICAgICAgICAgIHJldHVybiAnc3JjL2Fzc2V0cy9pbWFnZXMvZWNtSW1nLmdpZic7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmVzcG9uZFdpdGhUaGVVc2VyV2l0aG91dEltYWdlKCkge1xuICAgICAgICB0aGlzLnVzZXJOZWVkZWQgPSAxO1xuICAgIH07XG5cbiAgICByZXNwb25kV2l0aFRoZVVzZXJXaXRoSW1hZ2UoKSB7XG4gICAgICAgIHRoaXMudXNlck5lZWRlZCA9IDA7XG4gICAgfTtcblxuICAgIHJlc3BvbmRXaXRoRWRpdGVkVXNlcigpIHtcbiAgICAgICAgdGhpcy51c2VyTmVlZGVkID0gMjtcbiAgICB9O1xuXG59XG4iXX0=
