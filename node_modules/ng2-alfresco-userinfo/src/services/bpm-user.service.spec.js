/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var testing_1 = require("@angular/core/testing");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var bpm_user_service_1 = require("../services/bpm-user.service");
describe('BpmUserService', function () {
    var service;
    var authService;
    var apiService;
    beforeEach(function () {
        testing_1.TestBed.configureTestingModule({
            imports: [
                ng2_alfresco_core_1.CoreModule.forRoot()
            ],
            providers: [
                bpm_user_service_1.BpmUserService
            ]
        });
        service = testing_1.TestBed.get(bpm_user_service_1.BpmUserService);
        authService = testing_1.TestBed.get(ng2_alfresco_core_1.AlfrescoAuthenticationService);
        apiService = testing_1.TestBed.get(ng2_alfresco_core_1.AlfrescoApiService);
        jasmine.Ajax.install();
    });
    afterEach(function () {
        jasmine.Ajax.uninstall();
    });
    describe('when user is logged in', function () {
        xit('should retrieve avatar url for current user', function () {
            var path = service.getCurrentUserProfileImage();
            expect(path).toBeDefined();
            expect(path).toContain('/app/rest/admin/profile-picture');
        });
        xit('should catch errors on call for profile', function (done) {
            service.getCurrentUserInfo().subscribe(function () {
            }, function () {
                done();
            });
            jasmine.Ajax.requests.mostRecent().respondWith({
                status: 403
            });
        });
    });
});
//# sourceMappingURL=bpm-user.service.spec.js.map