/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var ecm_user_service_1 = require("./../services/ecm-user.service");
var bpm_user_service_1 = require("./../services/bpm-user.service");
var UserInfoComponent = (function () {
    function UserInfoComponent(ecmUserService, bpmUserService, authService, translateService) {
        var _this = this;
        this.ecmUserService = ecmUserService;
        this.bpmUserService = bpmUserService;
        this.authService = authService;
        this.translateService = translateService;
        this.menuOpenType = 'right';
        this.baseComponentPath = module.id.replace('components/user-info.component.js', '');
        this.anonymousImageUrl = this.baseComponentPath + '/assets/images/anonymous.gif';
        if (translateService) {
            translateService.addTranslationFolder('ng2-alfresco-userinfo', 'node_modules/ng2-alfresco-userinfo/src');
        }
        authService.loginSubject.subscribe(function (response) {
            _this.getUserInfo();
        });
    }
    UserInfoComponent.prototype.ngOnInit = function () {
        this.getUserInfo();
    };
    UserInfoComponent.prototype.getUserInfo = function () {
        this.getEcmUserInfo();
        this.getBpmUserInfo();
    };
    UserInfoComponent.prototype.isLoggedIn = function () {
        return this.authService.isLoggedIn();
    };
    UserInfoComponent.prototype.getEcmUserInfo = function () {
        var _this = this;
        if (this.authService.isEcmLoggedIn()) {
            this.ecmUserService.getCurrentUserInfo()
                .subscribe(function (res) {
                _this.ecmUser = res;
                _this.getEcmAvatar();
            });
        }
        else {
            this.ecmUser = null;
            this.ecmUserImage = null;
        }
    };
    UserInfoComponent.prototype.getBpmUserInfo = function () {
        var _this = this;
        if (this.authService.isBpmLoggedIn()) {
            this.bpmUserService.getCurrentUserInfo()
                .subscribe(function (res) {
                _this.bpmUser = res;
            });
            this.bpmUserImage = this.bpmUserService.getCurrentUserProfileImage();
        }
        else {
            this.bpmUser = null;
            this.bpmUserImage = null;
        }
    };
    UserInfoComponent.prototype.onImageLoadingError = function (event) {
        if (event) {
            var element = event.target;
            element.src = this.fallBackThumbnailImage || this.anonymousImageUrl;
        }
    };
    UserInfoComponent.prototype.stopClosing = function (event) {
        event.stopPropagation();
    };
    UserInfoComponent.prototype.getUserNameHeaderFor = function (env) {
        if (this.ecmUser && env === 'ECM') {
            return this.ecmUser.firstName || this.ecmUser.lastName;
        }
        if (this.bpmUser && env === 'BPM') {
            return this.formatValue(this.bpmUser.firstName) ||
                this.formatValue(this.bpmUser.lastName) ||
                this.formatValue(this.bpmUser.fullname);
        }
    };
    UserInfoComponent.prototype.getEcmAvatar = function () {
        this.ecmUserImage = this.ecmUserService.getUserProfileImage(this.ecmUser.avatarId);
    };
    UserInfoComponent.prototype.getUserAvatar = function () {
        return this.ecmUserImage || this.bpmUserImage;
    };
    UserInfoComponent.prototype.getBpmUserAvatar = function () {
        return this.bpmUserImage;
    };
    UserInfoComponent.prototype.getEcmUserAvatar = function () {
        return this.ecmUserImage;
    };
    UserInfoComponent.prototype.formatValue = function (value) {
        return value === 'null' ? null : value;
    };
    return UserInfoComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], UserInfoComponent.prototype, "ecmBackgroundImage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], UserInfoComponent.prototype, "bpmBackgroundImage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], UserInfoComponent.prototype, "menuOpenType", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], UserInfoComponent.prototype, "fallBackThumbnailImage", void 0);
UserInfoComponent = __decorate([
    core_1.Component({
        selector: 'ng2-alfresco-userinfo',
        moduleId: module.id,
        styles: [".profile-image {   text-align: center;   border-radius: 90%;   width: 40px;   height: 40px;   margin-right: 0%;   cursor: pointer;   border: 1px solid #999999;   vertical-align: middle;   background-color:white;; }  .button-profile {   display: inline-block;   border: 0px;   vertical-align: middle; }  .detail-user-profile-list-mdl{     padding: 0px 0; }  @media only screen and (min-device-width: 480px) {     .user-profile-list-mdl{         max-height: 450px;         min-width: 450px;         overflow: auto;         padding:0px;     } }  .header-profile{     color: rgb(255,152,0);     margin-left: 10px; }  hr.title-start {     border: 0;     height: 1px;     background: #333;     background-image: linear-gradient(to right, #ccc, #333, #ccc); }  span.role-label-user{     font-weight: 400;     line-height: 1;     letter-spacing: 0;     color: rgba(0,0,0,.87); }  .custom-role-style{     font-size: 14px;     color: #9e9e9e; }  .truncate-long-names{     text-overflow: ellipsis; } .demo-card-wide.mdl-card {     width: inherit; } .demo-card-wide > .mdl-card__title {     color: #fff;     height: 176px; } .demo-card-wide > .mdl-card__menu {     color: #fff; }  .card-title__option{     height: 100px!important; }  img.profile-picture {     background-color: white;     background-size: cover;     border-radius: 50%;     box-shadow: inset 1px 1px 3px rgba(0,0,0,0.2), 1px 1px 4px rgba(0,0,0,0.3);     height: 80px;     width: 80px;     z-index: 3;     margin-left: 0px;     margin-right: 8px; }"],
        template: "<div id=\"userinfo_container\" *ngIf=\"isLoggedIn()\">     <div *ngIf=\"ecmUser || bpmUser\">         <div class=\"button-profile\" id=\"user-profile\" data-automation-id=\"user-profile\">             <img id=\"logged-user-img\"                  [src]=\"getUserAvatar()\"                  alt=\"user-info-profile-button\"                  (error)=\"onImageLoadingError($event)\"                  class=\"profile-image\"/>         </div>         <div mdl id=\"user-profile-lists\" class=\"user-profile-list-mdl mdl-menu mdl-js-menu mdl-js-ripple-effect\"              [class.mdl-menu--bottom-left]=\"menuOpenType === 'left'? true : false\"              [class.mdl-menu--bottom-right]=\"menuOpenType === 'right'? true : false\"              for=\"user-profile\" (click)=\"stopClosing($event)\">             <div class=\"mdl-tabs mdl-js-tabs mdl-js-ripple-effect menu-container__items\">                 <div id=\"tab-bar-env\" class=\"mdl-tabs__tab-bar\" [hidden]=\"!(ecmUser && bpmUser)\">                     <a href=\"#ecm-panel\" id=\"ecm-tab\" class=\"mdl-tabs__tab is-active\">ECM</a>                     <a href=\"#bpm-panel\" id=\"bpm-tab\" class=\"mdl-tabs__tab\">BPM</a>                 </div>                 <div class=\"mdl-tabs__panel\" [class.is-active]=\"ecmUser?true:false\" id=\"ecm-panel\">                     <div class=\"detail-user-profile-list-mdl mdl-list\" *ngIf=\"ecmUser\">                         <div class=\"demo-card-wide mdl-card\">                             <div class=\"card-title__option mdl-card__title\"                                  id=\"ecm-background-image\"                                  [style.background-image]=\"'url(' + ( ecmBackgroundImage || baseComponentPath + '/assets/images/ecm-background.png')+')'\">                                 <img class=\"profile-picture\"                                      id=\"ecm-user-detail-image\"                                      alt=\"ecm-profile-image\"                                      (error)=\"onImageLoadingError($event)\"                                      [src]=\"getEcmUserAvatar()\"/>                                 <h2 class=\"mdl-card__title-text\" id=\"ecm-username\">{{getUserNameHeaderFor('ECM')}}</h2>                             </div>                             <div class=\"mdl-card__supporting-text\">                                 <li class=\"mdl-list__item mdl-list__item--two-line\">                                     <span class=\"mdl-list__item-primary-content\">                                     <span id=\"ecm-full-name\" class=\"truncate-long-names\">                                         {{ formatValue(ecmUser.firstName) }} {{ formatValue(ecmUser.lastName) }}                                     </span>                                     <span id=\"ecm-email\" class=\"mdl-list__item-sub-title\">{{ecmUser.email}}</span>                                     </span>                                     <span id=\"ecm-job-title\" class=\"mdl-list__item-secondary-content custom-role-style\">                                         <span                                             class=\"role-label-user\">{{ 'USER_PROFILE.LABELS.ECM.JOB_TITLE' | translate }}</span>                                         {{ecmUser.jobTitle?ecmUser.jobTitle:'N/A'}}                                     </span>                                 </li>                             </div>                         </div>                     </div>                 </div>                 <div class=\"mdl-tabs__panel\" [class.is-active]=\"bpmUser && !ecmUser?true:false\" id=\"bpm-panel\">                     <div class=\"detail-user-profile-list-mdl mdl-list\" *ngIf=\"bpmUser\">                         <div class=\"demo-card-wide mdl-card\">                             <div class=\"card-title__option mdl-card__title\"                                  id=\"bpm-background-image\"                                  [style.background-image]=\"'url(' + (bpmBackgroundImage || baseComponentPath + '/assets/images/bpm-background.png')+')'\">                                 <img class=\"profile-picture\"                                      id=\"bpm-user-detail-image\"                                      alt=\"bpm-profile-image\"                                      (error)=\"onImageLoadingError($event)\"                                      [src]=\"getBpmUserAvatar()\"/>                                 <h2 class=\"mdl-card__title-text\" id=\"bpm-username\">{{getUserNameHeaderFor('BPM')}}</h2>                             </div>                             <div class=\"mdl-card__supporting-text\">                                 <li class=\"mdl-list__item mdl-list__item--two-line\">                             <span class=\"mdl-list__item-primary-content\">                             <span id=\"bpm-full-name\" class=\"truncate-long-names\">                                 {{ formatValue(bpmUser.firstName) }} {{ formatValue(bpmUser.lastName) }}                             </span>                             <span id=\"bpm-email\" class=\"mdl-list__item-sub-title\">{{bpmUser.email}}</span>                             </span>                                     <span id=\"bpm-tenant\" class=\"mdl-list__item-secondary-content custom-role-style\">                                 <span class=\"role-label-user\">{{ 'USER_PROFILE.LABELS.BPM.TENANT' | translate }}</span>                                 {{bpmUser.tenantName}}                             </span>                                 </li>                             </div>                         </div>                     </div>                 </div>             </div>         </div>      </div> </div>"
    }),
    __metadata("design:paramtypes", [ecm_user_service_1.EcmUserService,
        bpm_user_service_1.BpmUserService,
        ng2_alfresco_core_1.AlfrescoAuthenticationService,
        ng2_alfresco_core_1.AlfrescoTranslationService])
], UserInfoComponent);
exports.UserInfoComponent = UserInfoComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
