!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&"undefined"!=typeof require.resolve&&"undefined"!=typeof process&&process.platform&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], ["3","7","8"], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
$__System.registerDynamic("2", ["3", "4"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var alfresco_login_component_1 = $__require("4");
    var LoginHeaderDirective = function () {
        function LoginHeaderDirective(alfrescoLoginComponent) {
            this.alfrescoLoginComponent = alfrescoLoginComponent;
        }
        LoginHeaderDirective.prototype.ngAfterContentInit = function () {
            this.alfrescoLoginComponent.headerTemplate = this.template;
        };
        return LoginHeaderDirective;
    }();
    __decorate([core_1.ContentChild(core_1.TemplateRef), __metadata("design:type", Object)], LoginHeaderDirective.prototype, "template", void 0);
    LoginHeaderDirective = __decorate([core_1.Directive({
        selector: 'login-header'
    }), __metadata("design:paramtypes", [alfresco_login_component_1.AlfrescoLoginComponent])], LoginHeaderDirective);
    exports.LoginHeaderDirective = LoginHeaderDirective;
});
$__System.registerDynamic("5", ["3", "4"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var alfresco_login_component_1 = $__require("4");
    var LoginFooterDirective = function () {
        function LoginFooterDirective(alfrescoLoginComponent) {
            this.alfrescoLoginComponent = alfrescoLoginComponent;
        }
        LoginFooterDirective.prototype.ngAfterContentInit = function () {
            this.alfrescoLoginComponent.footerTemplate = this.template;
        };
        return LoginFooterDirective;
    }();
    __decorate([core_1.ContentChild(core_1.TemplateRef), __metadata("design:type", Object)], LoginFooterDirective.prototype, "template", void 0);
    LoginFooterDirective = __decorate([core_1.Directive({
        selector: 'login-footer'
    }), __metadata("design:paramtypes", [alfresco_login_component_1.AlfrescoLoginComponent])], LoginFooterDirective);
    exports.LoginFooterDirective = LoginFooterDirective;
});
$__System.registerDynamic("6", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var FormSubmitEvent = function () {
        function FormSubmitEvent(_values) {
            this._defaultPrevented = false;
            this._values = _values;
        }
        Object.defineProperty(FormSubmitEvent.prototype, "values", {
            get: function () {
                return this._values;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FormSubmitEvent.prototype, "defaultPrevented", {
            get: function () {
                return this._defaultPrevented;
            },
            enumerable: true,
            configurable: true
        });
        FormSubmitEvent.prototype.preventDefault = function () {
            this._defaultPrevented = true;
        };
        return FormSubmitEvent;
    }();
    exports.FormSubmitEvent = FormSubmitEvent;
});
$__System.registerDynamic("4", ["3", "7", "8", "6"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("3");
    var forms_1 = $__require("7");
    var ng2_alfresco_core_1 = $__require("8");
    var form_submit_event_model_1 = $__require("6");
    var AlfrescoLoginComponent = function () {
        function AlfrescoLoginComponent(_fb, authService, settingsService, translateService, logService) {
            this._fb = _fb;
            this.authService = authService;
            this.settingsService = settingsService;
            this.translateService = translateService;
            this.logService = logService;
            this.baseComponentPath = module.id.replace('/alfresco-login.component.js', '');
            this.isPasswordShow = false;
            this.needHelpLink = '';
            this.registerLink = '';
            this.onSuccess = new core_1.EventEmitter();
            this.onError = new core_1.EventEmitter();
            this.executeSubmit = new core_1.EventEmitter();
            this.error = false;
            this.success = false;
            this.minLenght = 2;
            if (translateService) {
                translateService.addTranslationFolder('ng2-alfresco-login', 'node_modules/ng2-alfresco-login/src');
            }
            this.initFormError();
            this.initFormFieldsMessages();
        }
        AlfrescoLoginComponent.prototype.ngOnInit = function () {
            var _this = this;
            if (this.hasCustomFiledsValidation()) {
                this.form = this._fb.group(this.fieldsValidation);
            } else {
                this.initFormFieldsDefault();
                this.initFormFieldsMessagesDefault();
            }
            this.form.valueChanges.subscribe(function (data) {
                return _this.onValueChanged(data);
            });
        };
        AlfrescoLoginComponent.prototype.onSubmit = function (values) {
            if (!this.checkRequiredParams()) {
                return false;
            }
            this.settingsService.setProviders(this.providers);
            this.settingsService.csrfDisabled = this.disableCsrf;
            this.disableError();
            var args = new form_submit_event_model_1.FormSubmitEvent(this.form);
            this.executeSubmit.emit(args);
            if (args.defaultPrevented) {
                return false;
            } else {
                this.performeLogin(values);
            }
        };
        AlfrescoLoginComponent.prototype.onValueChanged = function (data) {
            this.success = false;
            this.disableError();
            for (var field in this.formError) {
                if (field) {
                    this.formError[field] = '';
                    var hasError = this.form.controls[field].errors && data[field] !== '' || this.form.controls[field].dirty && !this.form.controls[field].valid;
                    if (hasError) {
                        for (var key in this.form.controls[field].errors) {
                            if (key) {
                                this.formError[field] += this._message[field][key] + '';
                            }
                        }
                    }
                }
            }
        };
        AlfrescoLoginComponent.prototype.performeLogin = function (values) {
            var _this = this;
            this.authService.login(values.username, values.password).subscribe(function (token) {
                _this.success = true;
                _this.onSuccess.emit({ token: token, username: values.username, password: values.password });
            }, function (err) {
                _this.displayErrorMessage(err);
                _this.enableError();
                _this.onError.emit(err);
                _this.logService.error(err);
            }, function () {
                return _this.logService.info('Login done');
            });
        };
        AlfrescoLoginComponent.prototype.displayErrorMessage = function (err) {
            if (err.error && err.error.crossDomain && err.error.message.indexOf('the network is offline, Origin is not allowed by' + ' Access-Control-Allow-Origin') !== -1) {
                this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CORS';
                return;
            }
            if (err.status === 403 && err.message.indexOf('Invalid CSRF-token') !== -1) {
                this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';
                return;
            }
            if (err.status === 403 && err.message.indexOf('The system is currently in read-only mode') !== -1) {
                this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';
                return;
            }
            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';
        };
        AlfrescoLoginComponent.prototype.checkRequiredParams = function () {
            if (this.providers === undefined || this.providers === null || this.providers === '') {
                this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-PROVIDERS';
                this.enableError();
                var messageProviders = void 0;
                messageProviders = this.translateService.get(this.errorMsg);
                this.onError.emit(messageProviders.value);
                return false;
            }
            return true;
        };
        AlfrescoLoginComponent.prototype.addCustomFormError = function (field, msg) {
            this.formError[field] += msg;
        };
        AlfrescoLoginComponent.prototype.addCustomValidationError = function (field, ruleId, msg, params) {
            var _this = this;
            if (params) {
                this.translateService.get(msg, params).subscribe(function (res) {
                    _this._message[field][ruleId] = res;
                });
            } else {
                this._message[field][ruleId] = msg;
            }
        };
        AlfrescoLoginComponent.prototype.toggleShowPassword = function () {
            this.isPasswordShow = !this.isPasswordShow;
            if (this.isPasswordShow) {
                document.getElementById('password').type = 'text';
            } else {
                document.getElementById('password').type = 'password';
            }
        };
        AlfrescoLoginComponent.prototype.isErrorStyle = function (field) {
            if (typeof componentHandler !== 'undefined') {
                componentHandler.upgradeAllRegistered();
            }
            return !field.valid && field.dirty && !field.pristine;
        };
        AlfrescoLoginComponent.prototype.initFormError = function () {
            this.formError = {
                'username': '',
                'password': ''
            };
        };
        AlfrescoLoginComponent.prototype.initFormFieldsMessages = function () {
            this._message = {
                'username': {},
                'password': {}
            };
        };
        AlfrescoLoginComponent.prototype.initFormFieldsMessagesDefault = function () {
            var _this = this;
            this._message = {
                'username': {
                    'required': 'LOGIN.MESSAGES.USERNAME-REQUIRED'
                },
                'password': {
                    'required': 'LOGIN.MESSAGES.PASSWORD-REQUIRED'
                }
            };
            this.translateService.get('LOGIN.MESSAGES.USERNAME-MIN', { minLenght: this.minLenght }).subscribe(function (res) {
                _this._message['username']['minlength'] = res;
            });
        };
        AlfrescoLoginComponent.prototype.initFormFieldsDefault = function () {
            this.form = this._fb.group({
                username: ['', forms_1.Validators.compose([forms_1.Validators.required, forms_1.Validators.minLength(this.minLenght)])],
                password: ['', forms_1.Validators.required]
            });
        };
        AlfrescoLoginComponent.prototype.disableError = function () {
            this.error = false;
            this.initFormError();
        };
        AlfrescoLoginComponent.prototype.enableError = function () {
            this.error = true;
        };
        AlfrescoLoginComponent.prototype.hasCustomFiledsValidation = function () {
            return this.fieldsValidation !== undefined;
        };
        return AlfrescoLoginComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", String)], AlfrescoLoginComponent.prototype, "needHelpLink", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], AlfrescoLoginComponent.prototype, "registerLink", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], AlfrescoLoginComponent.prototype, "logoImageUrl", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], AlfrescoLoginComponent.prototype, "backgroundImageUrl", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], AlfrescoLoginComponent.prototype, "providers", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], AlfrescoLoginComponent.prototype, "fieldsValidation", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], AlfrescoLoginComponent.prototype, "disableCsrf", void 0);
    __decorate([core_1.Output(), __metadata("design:type", Object)], AlfrescoLoginComponent.prototype, "onSuccess", void 0);
    __decorate([core_1.Output(), __metadata("design:type", Object)], AlfrescoLoginComponent.prototype, "onError", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], AlfrescoLoginComponent.prototype, "executeSubmit", void 0);
    AlfrescoLoginComponent = __decorate([core_1.Component({
        selector: 'alfresco-login',
        moduleId: module.id,
        template: "<div class=\"content-grid mdl-grid content-layout login-content\"      [style.background-image]=\"'url(' + (backgroundImageUrl || baseComponentPath + '/../assets/images/background.svg') + ')'\">     <div class=\"login-card-wide mdl-card mdl-shadow--4dp\">         <form [formGroup]=\"form\" (submit)=\"onSubmit(form.value, $event)\">             <div class=\"mdl-card__title alfresco-logo\">                  <!--HEADER TEMPLATE-->                 <template *ngIf=\"headerTemplate\"                           ngFor [ngForOf]=\"[data]\"                           [ngForTemplate]=\"headerTemplate\">                 </template>                  <img  *ngIf=\"!headerTemplate\" class=\"center\"                       [src]=\"logoImageUrl || baseComponentPath + '/../assets/images/alfresco-logo.svg'\"                      alt=\"{{'LOGIN.LOGO' | translate }}\">             </div>             <div class=\"mdl-card__supporting-text\">                  <!--ERRORS AREA-->                 <div>                     <div *ngIf=\"error\" id=\"login-error\" data-automation-id=\"login-error\"                          class=\"error mdl-card__supporting-text\">{{errorMsg | translate }}</div>                     <div *ngIf=\"success\" id=\"login-success\" data-automation-id=\"login-success\" class=\"mdl-card__supporting-text\" style=\"color: blue;\">{{'LOGIN.MESSAGES.LOGIN-SUCCESS' | translate }}</div>                 </div>                   <!--USERNAME FIELD-->                 <div [ngClass]=\"{'is-invalid': isErrorStyle(form.controls.username)}\"                      class=\"center mdl-textfield mdl-js-textfield mdl-textfield--floating-label \">                     <label for=\"username\" class=\"mdl-textfield__label\">{{'LOGIN.LABEL.USERNAME' | translate }}</label>                     <input                         type=\"text\"                         class=\"mdl-textfield__input\"                         id=\"username\"                         data-automation-id=\"username\"                         [formControl]=\"form.controls['username']\"                         tabindex=\"1\"                         autocapitalize=\"none\"/>                     <span class=\"mdl-tooltip--validation\" for=\"username\" *ngIf=\"formError.username\">                             <span id=\"username-error\" class=\"mdl-textfield__error\" style=\"visibility: visible\" data-automation-id=\"username-error\">{{formError.username | translate }}</span>                     </span>                 </div>                  <!--PASSWORD FIELD-->                 <div class=\"center mdl-textfield mdl-js-textfield mdl-textfield--floating-label alfresco-login__password\">                     <i [ngClass]=\"{hide: isPasswordShow}\" [ngClass]=\"{show: !isPasswordShow}\" (click)=\"toggleShowPassword()\" data-automation-id=\"show_password\"                        class=\"icon-inline\">                         <svg style=\"width:24px;height:24px;float: right;\" viewBox=\"0 0 24 24\">                             <path fill=\"#000000\" d=\"M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z\" />                         </svg>                     </i>                     <i [ngClass]=\"{hide: !isPasswordShow}\" [ngClass]=\"{show: isPasswordShow}\" (click)=\"toggleShowPassword()\" data-automation-id=\"hide_password\"                        class=\"icon-inline\">                         <svg style=\"width:24px;height:24px;float: right;\" viewBox=\"0 0 24 24\">                             <path fill=\"#000000\" d=\"M11.83,9L15,12.16C15,12.11 15,12.05 15,12A3,3 0 0,0 12,9C11.94,9 11.89,9 11.83,9M7.53,9.8L9.08,11.35C9.03,11.56 9,11.77 9,12A3,3 0 0,0 12,15C12.22,15 12.44,14.97 12.65,14.92L14.2,16.47C13.53,16.8 12.79,17 12,17A5,5 0 0,1 7,12C7,11.21 7.2,10.47 7.53,9.8M2,4.27L4.28,6.55L4.73,7C3.08,8.3 1.78,10 1,12C2.73,16.39 7,19.5 12,19.5C13.55,19.5 15.03,19.2 16.38,18.66L16.81,19.08L19.73,22L21,20.73L3.27,3M12,7A5,5 0 0,1 17,12C17,12.64 16.87,13.26 16.64,13.82L19.57,16.75C21.07,15.5 22.27,13.86 23,12C21.27,7.61 17,4.5 12,4.5C10.6,4.5 9.26,4.75 8,5.2L10.17,7.35C10.74,7.13 11.35,7 12,7Z\" />                         </svg>                     </i>                     <label for=\"password\" class=\"mdl-textfield__label\">{{'LOGIN.LABEL.PASSWORD' | translate }}</label>                     <input type=\"password\" class=\"mdl-textfield__input\" id=\"password\" data-automation-id=\"password\" [formControl]=\"form.controls['password']\" tabindex=\"2\" />                     <span class=\"mdl-tooltip--validation\" for=\"password\" *ngIf=\"formError.password\">                             <span id=\"password-required\" class=\"mdl-textfield__error\" style=\"visibility: visible\" data-automation-id=\"password-required\">{{formError.password | translate }}</span>                     </span>                 </div>                  <!--CUSTOM CONTENT-->                 <ng-content></ng-content>                  <br>                 <button type=\"submit\" id=\"login-button\" tabindex=\"3\"                         class=\"center mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored\"                         data-automation-id=\"login-button\" [disabled]=\"!form.valid\">{{'LOGIN.BUTTON.LOGIN' | translate }}</button>                 <br>                 <div class=\"center\">                     <label class=\" mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect\" for=\"remember\">                         <input type=\"checkbox\" id=\"remember\" class=\"center mdl-checkbox__input\">                         <span id=\"login-remember\" class=\"mdl-checkbox__label\">{{'LOGIN.LABEL.REMEMBER' | translate }}</span>                     </label>                 </div>             </div>             <div class=\"mdl-card__actions mdl-card--border mdl-card__link\">                  <!--FOOTER TEMPLATE-->                 <template *ngIf=\"footerTemplate\"                           ngFor [ngForOf]=\"[data]\"                           [ngForTemplate]=\"footerTemplate\">                 </template>                 <div class=\"login-action\" *ngIf=\"!footerTemplate\">                     <div id=\"login-action-help\" class=\"login-action-left\"> <a href=\"{{needHelpLink}}\">{{'LOGIN.ACTION.HELP' | translate                         }}</a>                     </div>                     <div id=\"login-action-register\" class=\"login-action-right\"> <a href=\"{{registerLink}}\">{{'LOGIN.ACTION.REGISTER' |                         translate }}</a>                     </div>                 </div>             </div>             <div class=\"mdl-card__menu\">                 <div class=\"mdl-spinner mdl-js-spinner\"></div>             </div>         </form>     </div> </div>",
        styles: [":host {     position: absolute;     height: 100%;     width: 100%; }  :host .show {     display: block !important; }  :host .hide {     display: none !important; }  :host .icon-inline {     position: absolute;     display: block;     top: 31%;     left: 82%;     width: 30px;     overflow: hidden; }  :host .content-layout {     background-size: cover;     background-position: center;     height: 100%;     padding: 0; }  :host .login-card-wide.mdl-card {     align-self: center;     margin: auto;     border-radius: 8px;     background-color: #ffffff;     box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.24), 0 0 2px 0 rgba(0, 0, 0, 0.12); }  :host .error {     color: red;     padding: 8px;     margin-bottom: 4px;     font-size: 13px; }  :host .center {     display: block;     margin-left: auto;     margin-right: auto; }  :host .alfresco-logo {     margin-top: 5px; }  :host .alfresco-logo img {     max-height: 43px; }  :host .mdl-button--raised.mdl-button--colored {     width: 98%;     height: 36px;     border-radius: 4px; }  :host .mdl-button--raised.mdl-button--colored {     color: rgb(255, 255, 255); }  :host .login-card-wide > .mdl-card__menu {     color: #000; }  :host .mdl-card__title-text {     color: #818184; }  :host .mdl-card__link a {     opacity: 0.87;     font-size: 14px;     color: #ff9100; }  :host .login-action {     margin: 20px;     margin-bottom: 50px; }  :host .login-action-left {     float: left;     margin-left: 10px; }  :host .login-action-right {     float: right;     margin-right: 10px; }  .ng-invalid.ng-invalid.ng-touched {     border-color: rgb(222, 50, 38);     box-shadow: none; }  .ng-invalid.ng-invalid.ng-touched + label {     color: rgb(222, 50, 38);     font-size: 12px; }  .ng-invalid.ng-invalid.ng-touched + label:after {     background-color: rgb(222, 50, 38); }  .ng-invalid.ng-invalid.ng-touched ~ .mdl-tooltip--validation {     background-color: transparent;     color: red;     font-size: 12px; }  :host .is-active {     background-color: transparent;     font-size: 12px;     font-weight: normal;     line-height: 1.33;     color: #ff1744; }  .ng-invalid.ng-touched:not(:focus) + label::before {     font-family: 'Material Icons';     font-weight: normal;     font-style: normal;     font-size: 24px;     /* Preferred icon size */      display: inline-block;     width: 1em;     height: 1em;     line-height: 1;     text-transform: none;     letter-spacing: normal;     word-wrap: normal;     /* Support for all WebKit browsers. */      -webkit-font-smoothing: antialiased;     /* Support for Safari and Chrome. */      text-rendering: optimizeLegibility;     /* Support for Firefox. */      -moz-osx-font-smoothing: grayscale;     /* Support for IE. */      font-feature-settings: 'liga';     content: \"warning\";     position: absolute;     right: 0;     bottom: 20px; }  .ng-valid.ng-touched:not(:focus) + label::before {     font-family: 'Material Icons';     font-weight: normal;     font-style: normal;     font-size: 24px;     /* Preferred icon size */      display: inline-block;     width: 1em;     height: 1em;     line-height: 1;     text-transform: none;     letter-spacing: normal;     word-wrap: normal;     /* Support for all WebKit browsers. */      -webkit-font-smoothing: antialiased;     /* Support for Safari and Chrome. */      text-rendering: optimizeLegibility;     /* Support for Firefox. */      -moz-osx-font-smoothing: grayscale;     /* Support for IE. */      font-feature-settings: 'liga';     content: \"done\";     position: absolute;     right: 0;     bottom: 20px; }  .alfresco-login__password {     padding-right: 25px; }  .alfresco-login__password .icon-inline {     left: 90%; }  .alfresco-login__container {     background-size: cover;     background-position: center; }"]
    }), __metadata("design:paramtypes", [forms_1.FormBuilder, ng2_alfresco_core_1.AlfrescoAuthenticationService, ng2_alfresco_core_1.AlfrescoSettingsService, ng2_alfresco_core_1.AlfrescoTranslationService, ng2_alfresco_core_1.LogService])], AlfrescoLoginComponent);
    exports.AlfrescoLoginComponent = AlfrescoLoginComponent;
});
$__System.registerDynamic("1", ["3", "8", "2", "5", "4"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    var core_1 = $__require("3");
    var ng2_alfresco_core_1 = $__require("8");
    var login_header_directive_1 = $__require("2");
    var login_footer_directive_1 = $__require("5");
    var alfresco_login_component_1 = $__require("4");
    __export($__require("2"));
    __export($__require("5"));
    __export($__require("4"));
    exports.ALFRESCO_LOGIN_DIRECTIVES = [alfresco_login_component_1.AlfrescoLoginComponent, login_footer_directive_1.LoginFooterDirective, login_header_directive_1.LoginHeaderDirective];
    var LoginModule = LoginModule_1 = function () {
        function LoginModule() {}
        LoginModule.forRoot = function () {
            return {
                ngModule: LoginModule_1
            };
        };
        return LoginModule;
    }();
    LoginModule = LoginModule_1 = __decorate([core_1.NgModule({
        imports: [ng2_alfresco_core_1.CoreModule],
        declarations: exports.ALFRESCO_LOGIN_DIRECTIVES.slice(),
        providers: [],
        exports: exports.ALFRESCO_LOGIN_DIRECTIVES.slice()
    })], LoginModule);
    exports.LoginModule = LoginModule;
    var LoginModule_1;
    
});
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define(["@angular/core","@angular/forms","ng2-alfresco-core"], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory(require("@angular/core"), require("@angular/forms"), require("ng2-alfresco-core"));
  else
    throw new Error("Module must be loaded as AMD or CommonJS");
});
//# sourceMappingURL=ng2-alfresco-login.js.map