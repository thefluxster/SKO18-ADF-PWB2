/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DataTableAdapter, DataRow, DataColumn, DataSorting } from './datatable-adapter';
export declare class ObjectDataTableAdapter implements DataTableAdapter {
    private _sorting;
    private _rows;
    private _columns;
    selectedRow: DataRow;
    static generateSchema(data: any[]): any[];
    constructor(data: any[], schema: DataColumn[]);
    getRows(): Array<DataRow>;
    setRows(rows: Array<DataRow>): void;
    getColumns(): Array<DataColumn>;
    setColumns(columns: Array<DataColumn>): void;
    getValue(row: DataRow, col: DataColumn): any;
    getSorting(): DataSorting;
    setSorting(sorting: DataSorting): void;
    sort(key?: string, direction?: string): void;
}
export declare class ObjectDataRow implements DataRow {
    private obj;
    isSelected: boolean;
    constructor(obj: any);
    getValue(key: string): any;
    hasValue(key: string): boolean;
}
export declare class ObjectDataColumn implements DataColumn {
    key: string;
    type: string;
    sortable: boolean;
    title: string;
    srTitle: string;
    cssClass: string;
    constructor(obj: any);
}
