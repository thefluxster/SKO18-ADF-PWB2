!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},{id:r.name});t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);void 0!==c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return I[e]=s(D(e.substr(6)));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&"undefined"!=typeof require.resolve&&"undefined"!=typeof process&&process.platform&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], ["a","d","b"], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
$__System.registerDynamic("2", ["3", "4"], true, function ($__require, exports, module) {
  /*!
   * @license
   * Copyright 2016 Alfresco Software, Ltd.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("3"));
  __export($__require("4"));
});
$__System.registerDynamic("5", ["2", "6"], true, function ($__require, exports, module) {
  /*!
   * @license
   * Copyright 2016 Alfresco Software, Ltd.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("2"));
  __export($__require("6"));
});
$__System.registerDynamic("6", ["7"], true, function ($__require, exports, module) {
  /*!
   * @license
   * Copyright 2016 Alfresco Software, Ltd.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("7"));
});
$__System.registerDynamic("8", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var DataSorting = function () {
        function DataSorting(key, direction) {
            this.key = key;
            this.direction = direction;
        }
        return DataSorting;
    }();
    exports.DataSorting = DataSorting;
});
$__System.registerDynamic("9", ["a", "b", "8"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var common_1 = $__require("a");
    var ng2_alfresco_core_1 = $__require("b");
    var datatable_adapter_1 = $__require("8");
    var ObjectDataTableAdapter = function () {
        function ObjectDataTableAdapter(data, schema) {
            this._rows = [];
            this._columns = [];
            if (data && data.length > 0) {
                this._rows = data.map(function (item) {
                    return new ObjectDataRow(item);
                });
            }
            if (schema && schema.length > 0) {
                this._columns = schema.map(function (item) {
                    return new ObjectDataColumn(item);
                });
                var sortable = this._columns.filter(function (c) {
                    return c.sortable;
                });
                if (sortable.length > 0) {
                    this.sort(sortable[0].key, 'asc');
                }
            }
        }
        ObjectDataTableAdapter.generateSchema = function (data) {
            var schema = [];
            if (data && data.length) {
                var rowToExaminate = data[0];
                if (typeof rowToExaminate === 'object') {
                    for (var key in rowToExaminate) {
                        if (rowToExaminate.hasOwnProperty(key)) {
                            schema.push({
                                type: 'text',
                                key: key,
                                title: key,
                                sortable: false
                            });
                        }
                    }
                }
            }
            return schema;
        };
        ObjectDataTableAdapter.prototype.getRows = function () {
            return this._rows;
        };
        ObjectDataTableAdapter.prototype.setRows = function (rows) {
            this._rows = rows || [];
            this.sort();
        };
        ObjectDataTableAdapter.prototype.getColumns = function () {
            return this._columns;
        };
        ObjectDataTableAdapter.prototype.setColumns = function (columns) {
            this._columns = columns || [];
        };
        ObjectDataTableAdapter.prototype.getValue = function (row, col) {
            if (!row) {
                throw new Error('Row not found');
            }
            if (!col) {
                throw new Error('Column not found');
            }
            var value = row.getValue(col.key);
            if (col.type === 'date') {
                var datePipe = new common_1.DatePipe('en-US');
                var format = col.format || 'medium';
                try {
                    return datePipe.transform(value, format);
                } catch (err) {
                    console.error("DocumentList: error parsing date " + value + " to format " + format);
                }
            }
            return value;
        };
        ObjectDataTableAdapter.prototype.getSorting = function () {
            return this._sorting;
        };
        ObjectDataTableAdapter.prototype.setSorting = function (sorting) {
            this._sorting = sorting;
            if (sorting && sorting.key) {
                this._rows.sort(function (a, b) {
                    var left = a.getValue(sorting.key);
                    if (left) {
                        left = left instanceof Date ? left.valueOf().toString() : left.toString();
                    } else {
                        left = '';
                    }
                    var right = b.getValue(sorting.key);
                    if (right) {
                        right = right instanceof Date ? right.valueOf().toString() : right.toString();
                    } else {
                        right = '';
                    }
                    return sorting.direction === 'asc' ? left.localeCompare(right) : right.localeCompare(left);
                });
            }
        };
        ObjectDataTableAdapter.prototype.sort = function (key, direction) {
            var sorting = this._sorting || new datatable_adapter_1.DataSorting();
            if (key) {
                sorting.key = key;
                sorting.direction = direction || 'asc';
            }
            this.setSorting(sorting);
        };
        return ObjectDataTableAdapter;
    }();
    exports.ObjectDataTableAdapter = ObjectDataTableAdapter;
    var ObjectDataRow = function () {
        function ObjectDataRow(obj) {
            this.obj = obj;
            this.isSelected = false;
            if (!obj) {
                throw new Error('Object source not found');
            }
        }
        ObjectDataRow.prototype.getValue = function (key) {
            return ng2_alfresco_core_1.ObjectUtils.getValue(this.obj, key);
        };
        ObjectDataRow.prototype.hasValue = function (key) {
            return this.getValue(key) ? true : false;
        };
        return ObjectDataRow;
    }();
    exports.ObjectDataRow = ObjectDataRow;
    var ObjectDataColumn = function () {
        function ObjectDataColumn(obj) {
            this.key = obj.key;
            this.type = obj.type || 'text';
            this.sortable = obj.sortable;
            this.title = obj.title;
            this.srTitle = obj.srTitle;
            this.cssClass = obj.cssClass;
        }
        return ObjectDataColumn;
    }();
    exports.ObjectDataColumn = ObjectDataColumn;
});
$__System.registerDynamic("c", ["8", "9"], true, function ($__require, exports, module) {
  /*!
   * @license
   * Copyright 2016 Alfresco Software, Ltd.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  "use strict";

  var global = this || self,
      GLOBAL = global;
  function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
  }
  __export($__require("8"));
  __export($__require("9"));
});
$__System.registerDynamic("3", ["d", "c"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("d");
    var index_1 = $__require("c");
    var DataTableComponent = function () {
        function DataTableComponent() {
            this.multiselect = false;
            this.actions = false;
            this.rowClick = new core_1.EventEmitter();
            this.rowDblClick = new core_1.EventEmitter();
            this.showRowContextMenu = new core_1.EventEmitter();
            this.showRowActionsMenu = new core_1.EventEmitter();
            this.executeRowAction = new core_1.EventEmitter();
            this.isSelectAllChecked = false;
        }
        Object.defineProperty(DataTableComponent.prototype, "selectedRow", {
            get: function () {
                return this.data.selectedRow;
            },
            enumerable: true,
            configurable: true
        });
        DataTableComponent.prototype.ngOnInit = function () {
            if (!this.data) {
                this.data = new index_1.ObjectDataTableAdapter([], []);
            }
            if (componentHandler) {
                componentHandler.upgradeAllRegistered();
            }
        };
        DataTableComponent.prototype.onRowClick = function (row, e) {
            if (e) {
                e.preventDefault();
            }
            if (this.data) {
                this.data.selectedRow = row;
            }
            this.rowClick.emit({
                value: row,
                event: e
            });
        };
        DataTableComponent.prototype.onRowDblClick = function (row, e) {
            if (e) {
                e.preventDefault();
            }
            this.rowDblClick.emit({
                value: row,
                event: e
            });
        };
        DataTableComponent.prototype.onColumnHeaderClick = function (column) {
            if (column && column.sortable) {
                var current = this.data.getSorting();
                var newDirection = 'asc';
                if (current && column.key === current.key) {
                    newDirection = current.direction === 'asc' ? 'desc' : 'asc';
                }
                this.data.setSorting(new index_1.DataSorting(column.key, newDirection));
            }
        };
        DataTableComponent.prototype.onSelectAllClick = function (e) {
            if (e) {
                e.preventDefault();
            }
            this.isSelectAllChecked = !this.isSelectAllChecked;
            if (this.multiselect) {
                var rows = this.data.getRows();
                if (rows && rows.length > 0) {
                    for (var i = 0; i < rows.length; i++) {
                        rows[i].isSelected = this.isSelectAllChecked;
                    }
                }
            }
        };
        DataTableComponent.prototype.onImageLoadingError = function (event) {
            if (event && this.fallbackThumbnail) {
                var element = event.target;
                element.src = this.fallbackThumbnail;
            }
        };
        DataTableComponent.prototype.isIconValue = function (row, col) {
            if (row && col) {
                var value = row.getValue(col.key);
                return value && value.startsWith('material-icons://');
            }
            return false;
        };
        DataTableComponent.prototype.asIconValue = function (row, col) {
            if (this.isIconValue(row, col)) {
                var value = row.getValue(col.key) || '';
                return value.replace('material-icons://', '');
            }
            return null;
        };
        DataTableComponent.prototype.iconAltTextKey = function (value) {
            return 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\.[a-z]+/, '');
        };
        DataTableComponent.prototype.isColumnSorted = function (col, direction) {
            if (col && direction) {
                var sorting = this.data.getSorting();
                return sorting && sorting.key === col.key && sorting.direction === direction;
            }
            return false;
        };
        DataTableComponent.prototype.getContextMenuActions = function (row, col) {
            var args = { row: row, col: col, actions: [] };
            this.showRowContextMenu.emit({ args: args });
            return args.actions;
        };
        DataTableComponent.prototype.getRowActions = function (row, col) {
            var args = { row: row, col: col, actions: [] };
            this.showRowActionsMenu.emit({ args: args });
            return args.actions;
        };
        DataTableComponent.prototype.onExecuteRowAction = function (row, action) {
            var args = { row: row, action: action };
            this.executeRowAction.emit({ args: args });
        };
        return DataTableComponent;
    }();
    __decorate([core_1.Input(), __metadata("design:type", Object)], DataTableComponent.prototype, "data", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], DataTableComponent.prototype, "multiselect", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Boolean)], DataTableComponent.prototype, "actions", void 0);
    __decorate([core_1.Input(), __metadata("design:type", String)], DataTableComponent.prototype, "fallbackThumbnail", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], DataTableComponent.prototype, "rowClick", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], DataTableComponent.prototype, "rowDblClick", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], DataTableComponent.prototype, "showRowContextMenu", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], DataTableComponent.prototype, "showRowActionsMenu", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], DataTableComponent.prototype, "executeRowAction", void 0);
    DataTableComponent = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'alfresco-datatable',
        styles: [":host .full-width { width: 100%; }  :host .icon-cell {     font-size: 24px;     cursor: default; }  :host .image-cell {     width: 24px;     height: 24px;     cursor: default; }  :host .data-cell {     cursor: default; } :host .cell-value {}  :host .column-header {     cursor: pointer;     user-select: none;     -webkit-user-select: none;   /* Chrome/Safari/Opera */     -moz-user-select: none;      /* Firefox */     -ms-user-select: none;       /* IE/Edge */     -webkit-touch-callout: none; /* iOS Safari */ }  /* Empty folder */  :host .no-content-container {     padding: 0 !important; }  :host .no-content-container > img {     width: 100%; }  :host .ellipsis-cell > div {     position: relative;     overflow: hidden;     /*height: 1em;*/ }   /* visible content */ :host .ellipsis-cell > div > span {     display: block;     position: absolute;     max-width: 100%;     white-space: nowrap;     overflow: hidden;     text-overflow: ellipsis;     line-height: 1em;\t\t/* for vertical align of text */ }   /* cell stretching content */ :host .ellipsis-cell > div:after {     content: attr(title);     overflow: hidden;     height: 0;     display: block; }   /* Utils */  :host .non-selectable {     user-select: none;     -webkit-user-select: none;   /* Chrome/Safari/Opera */     -moz-user-select: none;      /* Firefox */     -ms-user-select: none;       /* IE/Edge */     -webkit-touch-callout: none; /* iOS Safari */ }  :host .sr-only {     position: absolute;     width: 1px;     height: 1px;     padding: 0;     margin: -1px;     overflow: hidden;     clip: rect(0,0,0,0);     border: 0; }  .hidden {     display: none; }  /* small desktop */ @media all and (max-width: 1200px) {}  /* tablet */ @media all and (max-width: 1024px) {}  /* mobile phone */ @media all and (max-width: 768px) {     .desktop-only {         display: none;     } }  @media (max-device-width: 768px){     .desktop-only {         display: none;     } }  .mdl-data-table-fix-firefox {     border-collapse: unset;     border-spacing: 0; }  .alfresco-datatable__row:focus {     outline-offset: -4px; }  .alfresco-datatable__row--selected {     color: rgb(68,138,255); }"],
        template: "<table     *ngIf=\"data\"     class=\"mdl-data-table mdl-js-data-table full-width mdl-data-table-fix-firefox\">     <thead>     <tr>         <!-- Columns -->         <th *ngIf=\"multiselect\">             <label                 class=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect mdl-data-table__select\"                 [class.is-checked]=\"isSelectAllChecked\"                 for=\"table-header\"                 (click)=\"onSelectAllClick($event)\">                 <input type=\"checkbox\" id=\"table-header\" class=\"mdl-checkbox__input\" />             </label>         </th>         <th class=\"mdl-data-table__cell--non-numeric non-selectable {{col.cssClass}}\"             *ngFor=\"let col of data.getColumns()\"             [attr.data-automation-id]=\"'auto_id_' + col.key\"             [class.column-header]=\"col.title\"             [class.mdl-data-table__header--sorted-ascending]=\"isColumnSorted(col, 'asc')\"             [class.mdl-data-table__header--sorted-descending]=\"isColumnSorted(col, 'desc')\"             (click)=\"onColumnHeaderClick(col)\">             <span *ngIf=\"col.srTitle\" class=\"sr-only\">{{col.srTitle}}</span>             <span *ngIf=\"col.title\">{{col.title}}</span>         </th>         <!-- Actions -->         <th *ngIf=\"actions\">             <span class=\"sr-only\">Actions</span>         </th>     </tr>     </thead>     <tbody>      <tr *ngFor=\"let row of data.getRows(); let idx = index\" tabindex=\"0\"         class=\"alfresco-datatable__row\"         [class.alfresco-datatable__row--selected]=\"selectedRow === row\">         <td *ngIf=\"multiselect\">             <label                 class=\"mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect mdl-data-table__select\"                 [attr.for]=\"'row[' + idx + ']'\"                 [class.is-checked]=\"row.isSelected\">                 <input type=\"checkbox\" [attr.id]=\"'row[' + idx + ']'\" class=\"mdl-checkbox__input\" [(ngModel)]=\"row.isSelected\" />             </label>         </td>         <td *ngFor=\"let col of data.getColumns()\" [ngSwitch]=\"col.type\"             class=\"mdl-data-table__cell--non-numeric non-selectable data-cell {{col.cssClass}}\"             (click)=\"onRowClick(row, $event)\"             (dblclick)=\"onRowDblClick(row, $event)\"             [context-menu]=\"getContextMenuActions(row, col)\">             <div *ngIf=\"!col.template\">                 <div *ngSwitchCase=\"'image'\" class=\"cell-value\">                     <i *ngIf=\"isIconValue(row, col)\" class=\"material-icons icon-cell\">{{asIconValue(row, col)}}</i>                     <img *ngIf=\"!isIconValue(row, col)\"                         class=\"image-cell\"                         alt=\"{{iconAltTextKey(data.getValue(row, col))|translate}}\"                         src=\"{{data.getValue(row, col)}}\"                         (error)=\"onImageLoadingError($event)\">                 </div>                 <div *ngSwitchCase=\"'date'\" class=\"cell-value\" [attr.data-automation-id]=\"'date_' + data.getValue(row, col)\">                     {{data.getValue(row, col)}}                 </div>                 <div *ngSwitchCase=\"'text'\" class=\"cell-value\" [attr.data-automation-id]=\"'text_' + data.getValue(row, col)\">                     {{data.getValue(row, col)}}                 </div>                 <span *ngSwitchDefault class=\"cell-value\">                 <!-- empty cell for unknown column type -->                 </span>             </div>             <div *ngIf=\"col.template\">                 <template ngFor [ngForOf]=\"[{ data: data, row: row, col: col }]\" [ngForTemplate]=\"col.template\"></template>             </div>         </td>          <td *ngIf=\"actions\">             <!-- action menu -->             <button [id]=\"'action_menu_' + idx\" alfresco-mdl-button class=\"mdl-button--icon\" [attr.data-automation-id]=\"actions_menu\">                 <i class=\"material-icons\">more_vert</i>             </button>             <ul alfresco-mdl-menu class=\"mdl-menu--bottom-right\"                 [attr.for]=\"'action_menu_' + idx\">                 <li class=\"mdl-menu__item\"                     [attr.data-automation-id]=\"action.title\"                     *ngFor=\"let action of getRowActions(row)\"                     (click)=\"onExecuteRowAction(row, action)\">                     {{action.title}}                 </li>             </ul>         </td>      </tr>     <tr *ngIf=\"data.getRows().length === 0\">         <td class=\"mdl-data-table__cell--non-numeric no-content-container\"             [attr.colspan]=\"1 + data.getColumns().length\">             <template *ngIf=\"noContentTemplate\"                       ngFor [ngForOf]=\"[data]\"                       [ngForTemplate]=\"noContentTemplate\">             </template>         </td>     </tr>     </tbody> </table>"
    })], DataTableComponent);
    exports.DataTableComponent = DataTableComponent;
});
$__System.registerDynamic("4", ["d", "3"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("d");
    var datatable_component_1 = $__require("3");
    var NoContentTemplateComponent = function () {
        function NoContentTemplateComponent(dataTable) {
            this.dataTable = dataTable;
        }
        NoContentTemplateComponent.prototype.ngAfterContentInit = function () {
            this.dataTable.noContentTemplate = this.template;
        };
        return NoContentTemplateComponent;
    }();
    __decorate([core_1.ContentChild(core_1.TemplateRef), __metadata("design:type", Object)], NoContentTemplateComponent.prototype, "template", void 0);
    NoContentTemplateComponent = __decorate([core_1.Directive({
        selector: 'no-content-template'
    }), __metadata("design:paramtypes", [datatable_component_1.DataTableComponent])], NoContentTemplateComponent);
    exports.NoContentTemplateComponent = NoContentTemplateComponent;
});
$__System.registerDynamic("e", [], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var PaginationData = function () {
        function PaginationData(count, totalItems, skipCount, maxItems, hasMoreItems) {
            this.count = count;
            this.hasMoreItems = hasMoreItems;
            this.totalItems = totalItems;
            this.skipCount = skipCount;
            this.maxItems = maxItems;
        }
        return PaginationData;
    }();
    exports.PaginationData = PaginationData;
});
$__System.registerDynamic("7", ["d", "e"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = this && this.__metadata || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1 = $__require("d");
    var pagination_data_1 = $__require("e");
    var PaginationComponent = PaginationComponent_1 = function () {
        function PaginationComponent() {
            this.summary = '';
            this.supportedPageSizes = [5, 10, 20, 50, 100];
            this.maxItems = PaginationComponent_1.DEFAULT_PAGE_SIZE;
            this.changePageSize = new core_1.EventEmitter();
            this.nextPage = new core_1.EventEmitter();
            this.prevPage = new core_1.EventEmitter();
        }
        PaginationComponent.prototype.ngOnInit = function () {
            if (!this.pagination) {
                this.pagination = new pagination_data_1.PaginationData(0, 0, 0, this.maxItems, true);
            }
        };
        PaginationComponent.prototype.ngOnChanges = function (changes) {
            if (changes['pagination']) {
                if (changes['pagination'].currentValue) {
                    this.pagination = changes['pagination'].currentValue;
                    this.updateSummary();
                }
            }
        };
        PaginationComponent.prototype.setPageSize = function (value) {
            this.pagination.maxItems = value;
            this.updateSummary();
            this.changePageSize.emit(this.pagination);
        };
        PaginationComponent.prototype.nextPageAvail = function () {
            return this.pagination.hasMoreItems;
        };
        PaginationComponent.prototype.prevPageAvail = function () {
            return this.pagination.skipCount > 0;
        };
        PaginationComponent.prototype.showNextPage = function () {
            this.pagination.skipCount += this.pagination.maxItems;
            this.updateSummary();
            this.nextPage.emit(this.pagination);
        };
        PaginationComponent.prototype.showPrevPage = function () {
            this.pagination.skipCount -= this.pagination.maxItems;
            this.updateSummary();
            this.prevPage.emit(this.pagination);
        };
        PaginationComponent.prototype.updateSummary = function () {
            var from = this.pagination.skipCount;
            if (from === 0) {
                from = 1;
            }
            var to = this.pagination.skipCount + this.pagination.count;
            var of = this.pagination.totalItems;
            this.summary = from + "-" + to + " of " + of;
        };
        return PaginationComponent;
    }();
    PaginationComponent.DEFAULT_PAGE_SIZE = 20;
    __decorate([core_1.Input(), __metadata("design:type", Array)], PaginationComponent.prototype, "supportedPageSizes", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Number)], PaginationComponent.prototype, "maxItems", void 0);
    __decorate([core_1.Input(), __metadata("design:type", Object)], PaginationComponent.prototype, "pagination", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], PaginationComponent.prototype, "changePageSize", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], PaginationComponent.prototype, "nextPage", void 0);
    __decorate([core_1.Output(), __metadata("design:type", core_1.EventEmitter)], PaginationComponent.prototype, "prevPage", void 0);
    PaginationComponent = PaginationComponent_1 = __decorate([core_1.Component({
        moduleId: module.id,
        selector: 'alfresco-pagination',
        template: "<div class=\"mdl-paging\">     <span class=\"mdl-paging__per-page\">         <span class=\"mdl-paging__per-page-label\">Rows per page:</span>         <span class=\"mdl-paging__per-page-value\" [attr.data-automation-id]=\"'rows_per_page_' + pageSize\">{{pagination.maxItems}}</span>         <button alfresco-mdl-button id=\"pageSizePicker\" class=\"mdl-button--icon mdl-paging__per-page-dropdown\">             <i class=\"material-icons\">arrow_drop_down</i>         </button>         <ul alfresco-mdl-menu for=\"pageSizePicker\" class=\"mdl-menu--bottom-right\">             <li *ngFor=\"let size of supportedPageSizes\"                 tabindex=\"-1\" [attr.data-value]=\"size\" class=\"mdl-menu__item\"                 (click)=\"setPageSize(size)\">                 <span>{{size}}</span>             </li>         </ul>     </span>     <span class=\"mdl-paging__count\">{{summary}}</span>     <button (click)=\"showPrevPage()\"             [disabled]=\"!prevPageAvail()\"             alfresco-mdl-button class=\"mdl-button--icon mdl-paging__prev\" [attr.data-automation-id]=\"prev_page\">         <i class=\"material-icons\">keyboard_arrow_left</i>     </button>     <button (click)=\"showNextPage()\"             [disabled]=\"!nextPageAvail()\"             alfresco-mdl-button class=\"mdl-button--icon mdl-paging__next\" [attr.data-automation-id]=\"next_page\">         <i class=\"material-icons\">keyboard_arrow_right</i>     </button> </div>",
        styles: [".mdl-paging {     color: rgba(0, 0, 0, 0.54);     display: -webkit-flex;     display: -ms-flexbox;     display: flex;     -webkit-justify-content: flex-end;     -ms-flex-pack: end;     justify-content: flex-end;     -webkit-align-items: center;     -ms-flex-align: center;     align-items: center;     height: 56px;     -webkit-flex-flow: row wrap;     -ms-flex-flow: row wrap;     flex-flow: row wrap; }  .mdl-paging > * {     -webkit-flex: none;     -ms-flex: none;     flex: none; }  .mdl-list + .mdl-paging {     margin: 0; }  .mdl-paging__per-page {     position: relative; }  .mdl-paging__per-page-label {     margin-right: 40px; }  .mdl-paging__per-page-value {     position: absolute;     right: 36px;     top: 6px; }  .mdl-paging__per-page + .mdl-paging__count {     margin-left: 24px; }  .mdl-paging .mdl-menu {     min-width: 64px; }  .mdl-paging__prev:last-child {     margin-right: 44px; }  .mdl-paging__count + .mdl-paging__prev {     margin-left: 24px; }  .mdl-paging__prev + .mdl-paging__next {     margin-left: 12px; }  .mdl-paging__count + .mdl-paging__next {     margin-left: 68px; }"]
    }), __metadata("design:paramtypes", [])], PaginationComponent);
    exports.PaginationComponent = PaginationComponent;
    var PaginationComponent_1;
});
$__System.registerDynamic("1", ["d", "b", "c", "5", "6", "3", "4", "7"], true, function ($__require, exports, module) {
    /*!
     * @license
     * Copyright 2016 Alfresco Software, Ltd.
     *
     * Licensed under the Apache License, Version 2.0 (the "License");
     * you may not use this file except in compliance with the License.
     * You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */
    "use strict";

    var global = this || self,
        GLOBAL = global;
    var __decorate = this && this.__decorate || function (decorators, target, key, desc) {
        var c = arguments.length,
            r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
            d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    function __export(m) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    var core_1 = $__require("d");
    var ng2_alfresco_core_1 = $__require("b");
    __export($__require("c"));
    __export($__require("5"));
    __export($__require("6"));
    var datatable_component_1 = $__require("3");
    var no_content_template_component_1 = $__require("4");
    var pagination_component_1 = $__require("7");
    exports.ALFRESCO_DATATABLE_DIRECTIVES = [datatable_component_1.DataTableComponent, no_content_template_component_1.NoContentTemplateComponent, pagination_component_1.PaginationComponent];
    var DataTableModule = DataTableModule_1 = function () {
        function DataTableModule() {}
        DataTableModule.forRoot = function () {
            return {
                ngModule: DataTableModule_1
            };
        };
        return DataTableModule;
    }();
    DataTableModule = DataTableModule_1 = __decorate([core_1.NgModule({
        imports: [ng2_alfresco_core_1.CoreModule],
        declarations: exports.ALFRESCO_DATATABLE_DIRECTIVES.slice(),
        exports: exports.ALFRESCO_DATATABLE_DIRECTIVES.slice()
    })], DataTableModule);
    exports.DataTableModule = DataTableModule;
    var DataTableModule_1;
    
});
})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define(["@angular/common","@angular/core","ng2-alfresco-core"], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory(require("@angular/common"), require("@angular/core"), require("ng2-alfresco-core"));
  else
    throw new Error("Module must be loaded as AMD or CommonJS");
});
//# sourceMappingURL=ng2-alfresco-datatable.js.map