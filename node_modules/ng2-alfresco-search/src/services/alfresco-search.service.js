/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Rx_1 = require("rxjs/Rx");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var AlfrescoSearchService = (function () {
    function AlfrescoSearchService(authService, apiService) {
        this.authService = authService;
        this.apiService = apiService;
    }
    AlfrescoSearchService.prototype.getNodeQueryResults = function (term, options) {
        var _this = this;
        return Rx_1.Observable.fromPromise(this.getQueryNodesPromise(term, options))
            .map(function (res) { return res; })
            .catch(function (err) { return _this.handleError(err); });
    };
    AlfrescoSearchService.prototype.getQueryNodesPromise = function (term, opts) {
        return this.apiService.getInstance().core.queriesApi.findNodes(term, opts);
    };
    AlfrescoSearchService.prototype.handleError = function (error) {
        return Rx_1.Observable.throw(error || 'Server error');
    };
    return AlfrescoSearchService;
}());
AlfrescoSearchService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoAuthenticationService,
        ng2_alfresco_core_1.AlfrescoApiService])
], AlfrescoSearchService);
exports.AlfrescoSearchService = AlfrescoSearchService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2FsZnJlc2NvLXNlYXJjaC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBMkM7QUFDM0MsOEJBQXFDO0FBQ3JDLHVEQUFzRjtBQU90RixJQUFhLHFCQUFxQjtJQUU5QiwrQkFBbUIsV0FBMEMsRUFDekMsVUFBOEI7UUFEL0IsZ0JBQVcsR0FBWCxXQUFXLENBQStCO1FBQ3pDLGVBQVUsR0FBVixVQUFVLENBQW9CO0lBQ2xELENBQUM7SUFTTSxtREFBbUIsR0FBMUIsVUFBMkIsSUFBWSxFQUFFLE9BQXVCO1FBQWhFLGlCQUlDO1FBSEcsTUFBTSxDQUFDLGVBQVUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQzthQUNsRSxHQUFHLENBQUMsVUFBQSxHQUFHLElBQUksT0FBYSxHQUFHLEVBQWhCLENBQWdCLENBQUM7YUFDNUIsS0FBSyxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsS0FBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBckIsQ0FBcUIsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFTyxvREFBb0IsR0FBNUIsVUFBNkIsSUFBWSxFQUFFLElBQW1CO1FBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMvRSxDQUFDO0lBRU8sMkNBQVcsR0FBbkIsVUFBb0IsS0FBVTtRQUMxQixNQUFNLENBQUMsZUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksY0FBYyxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0ExQkEsQUEwQkMsSUFBQTtBQTFCWSxxQkFBcUI7SUFEakMsaUJBQVUsRUFBRTtxQ0FHdUIsaURBQTZCO1FBQzdCLHNDQUFrQjtHQUh6QyxxQkFBcUIsQ0EwQmpDO0FBMUJZLHNEQUFxQiIsImZpbGUiOiJzZXJ2aWNlcy9hbGZyZXNjby1zZWFyY2guc2VydmljZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL1J4JztcbmltcG9ydCB7IEFsZnJlc2NvQXV0aGVudGljYXRpb25TZXJ2aWNlLCBBbGZyZXNjb0FwaVNlcnZpY2UgfSBmcm9tICduZzItYWxmcmVzY28tY29yZSc7XG5pbXBvcnQgeyBOb2RlUGFnaW5nIH0gZnJvbSAnYWxmcmVzY28tanMtYXBpJztcblxuLyoqXG4gKiBJbnRlcm5hbCBzZXJ2aWNlIHVzZWQgYnkgRG9jdW1lbnQgTGlzdCBjb21wb25lbnQuXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBbGZyZXNjb1NlYXJjaFNlcnZpY2Uge1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGF1dGhTZXJ2aWNlOiBBbGZyZXNjb0F1dGhlbnRpY2F0aW9uU2VydmljZSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIGFwaVNlcnZpY2U6IEFsZnJlc2NvQXBpU2VydmljZSkge1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBzZWFyY2ggYWdhaW5zdCB0aGUgcmVwb3NpdG9yeVxuICAgICAqXG4gICAgICogQHBhcmFtIHRlcm0gU2VhcmNoIHRlcm1cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBBZGRpdGlvbmFsIG9wdGlvbnMgcGFzc2VkIHRvIHRoZSBzZWFyY2hcbiAgICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxOb2RlUGFnaW5nPn0gU2VhcmNoIHJlc3VsdHNcbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0Tm9kZVF1ZXJ5UmVzdWx0cyh0ZXJtOiBzdHJpbmcsIG9wdGlvbnM/OiBTZWFyY2hPcHRpb25zKTogT2JzZXJ2YWJsZTxOb2RlUGFnaW5nPiB7XG4gICAgICAgIHJldHVybiBPYnNlcnZhYmxlLmZyb21Qcm9taXNlKHRoaXMuZ2V0UXVlcnlOb2Rlc1Byb21pc2UodGVybSwgb3B0aW9ucykpXG4gICAgICAgICAgICAubWFwKHJlcyA9PiA8Tm9kZVBhZ2luZz4gcmVzKVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB0aGlzLmhhbmRsZUVycm9yKGVycikpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0UXVlcnlOb2Rlc1Byb21pc2UodGVybTogc3RyaW5nLCBvcHRzOiBTZWFyY2hPcHRpb25zKTogUHJvbWlzZTxOb2RlUGFnaW5nPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwaVNlcnZpY2UuZ2V0SW5zdGFuY2UoKS5jb3JlLnF1ZXJpZXNBcGkuZmluZE5vZGVzKHRlcm0sIG9wdHMpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaGFuZGxlRXJyb3IoZXJyb3I6IGFueSk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgICAgIHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VhcmNoT3B0aW9ucyB7XG4gICAgc2tpcENvdW50PzogbnVtYmVyO1xuICAgIG1heEl0ZW1zPzogbnVtYmVyO1xuICAgIHJvb3ROb2RlSWQ/OiBzdHJpbmc7XG4gICAgbm9kZVR5cGU/OiBzdHJpbmc7XG4gICAgaW5jbHVkZT86IHN0cmluZ1tdO1xuICAgIG9yZGVyQnk/OiBzdHJpbmc7XG4gICAgZmllbGRzPzogc3RyaW5nW107XG59XG4iXX0=
