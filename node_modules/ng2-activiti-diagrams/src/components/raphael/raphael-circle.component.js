/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var point_1 = require("./models/point");
var raphael_base_1 = require("./raphael-base");
var raphael_service_1 = require("./raphael.service");
var RaphaelCircleDirective = (function (_super) {
    __extends(RaphaelCircleDirective, _super);
    function RaphaelCircleDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.onError = new core_1.EventEmitter();
        return _this;
    }
    RaphaelCircleDirective.prototype.ngOnInit = function () {
        var opts = { 'stroke-width': this.strokeWidth, 'fill': this.fillColors, 'stroke': this.stroke, 'fill-opacity': this.fillOpacity };
        var drawElement = this.draw(this.center, this.radius, opts);
        drawElement.node.id = this.elementId;
    };
    RaphaelCircleDirective.prototype.draw = function (center, radius, opts) {
        var circle = this.paper.circle(center.x, center.y, radius).attr(opts);
        return circle;
    };
    return RaphaelCircleDirective;
}(raphael_base_1.RaphaelBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelCircleDirective.prototype, "paper", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", point_1.Point)
], RaphaelCircleDirective.prototype, "center", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RaphaelCircleDirective.prototype, "radius", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RaphaelCircleDirective.prototype, "strokeWidth", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelCircleDirective.prototype, "fillColors", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelCircleDirective.prototype, "stroke", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelCircleDirective.prototype, "fillOpacity", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RaphaelCircleDirective.prototype, "elementId", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RaphaelCircleDirective.prototype, "onError", void 0);
RaphaelCircleDirective = __decorate([
    core_1.Directive({ selector: 'raphael-circle' }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        raphael_service_1.RaphaelService])
], RaphaelCircleDirective);
exports.RaphaelCircleDirective = RaphaelCircleDirective;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFwaGFlbC9yYXBoYWVsLWNpcmNsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUgsc0NBQTJGO0FBQzNGLHdDQUF1QztBQUN2QywrQ0FBNkM7QUFDN0MscURBQW1EO0FBR25ELElBQWEsc0JBQXNCO0lBQVMsMENBQVc7SUE0Qm5ELGdDQUFtQixVQUFzQixFQUM3QixjQUE4QjtRQUQxQyxZQUVJLGtCQUFNLFVBQVUsRUFBRSxjQUFjLENBQUMsU0FDcEM7UUFIa0IsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFGekMsYUFBTyxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDOztJQUs3QixDQUFDO0lBRUQseUNBQVEsR0FBUjtRQUVJLElBQUksSUFBSSxHQUFHLEVBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUMsQ0FBQztRQUNoSSxJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM1RCxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3pDLENBQUM7SUFFTSxxQ0FBSSxHQUFYLFVBQVksTUFBYSxFQUFFLE1BQWMsRUFBRSxJQUFTO1FBQ2hELElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEUsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsNkJBQUM7QUFBRCxDQTVDQSxBQTRDQyxDQTVDMkMsMEJBQVcsR0E0Q3REO0FBMUNHO0lBREMsWUFBSyxFQUFFOztxREFDRztBQUdYO0lBREMsWUFBSyxFQUFFOzhCQUNBLGFBQUs7c0RBQUM7QUFHZDtJQURDLFlBQUssRUFBRTs7c0RBQ087QUFHZjtJQURDLFlBQUssRUFBRTs7MkRBQ1k7QUFHcEI7SUFEQyxZQUFLLEVBQUU7OzBEQUNRO0FBR2hCO0lBREMsWUFBSyxFQUFFOztzREFDSTtBQUdaO0lBREMsWUFBSyxFQUFFOzsyREFDUztBQUdqQjtJQURDLFlBQUssRUFBRTs7eURBQ1U7QUFHbEI7SUFEQyxhQUFNLEVBQUU7O3VEQUNvQjtBQTFCcEIsc0JBQXNCO0lBRGxDLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsZ0JBQWdCLEVBQUMsQ0FBQztxQ0E2QkwsaUJBQVU7UUFDYixnQ0FBYztHQTdCakMsc0JBQXNCLENBNENsQztBQTVDWSx3REFBc0IiLCJmaWxlIjoiY29tcG9uZW50cy9yYXBoYWVsL3JhcGhhZWwtY2lyY2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBFbGVtZW50UmVmLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi9tb2RlbHMvcG9pbnQnO1xuaW1wb3J0IHsgUmFwaGFlbEJhc2UgfSBmcm9tICcuL3JhcGhhZWwtYmFzZSc7XG5pbXBvcnQgeyBSYXBoYWVsU2VydmljZSB9IGZyb20gJy4vcmFwaGFlbC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7c2VsZWN0b3I6ICdyYXBoYWVsLWNpcmNsZSd9KVxuZXhwb3J0IGNsYXNzIFJhcGhhZWxDaXJjbGVEaXJlY3RpdmUgZXh0ZW5kcyBSYXBoYWVsQmFzZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KClcbiAgICBwYXBlcjogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBjZW50ZXI6IFBvaW50O1xuXG4gICAgQElucHV0KClcbiAgICByYWRpdXM6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpXG4gICAgc3Ryb2tlV2lkdGg6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbENvbG9yczogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBzdHJva2U6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbE9wYWNpdHk6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgZWxlbWVudElkOiBzdHJpbmc7XG5cbiAgICBAT3V0cHV0KClcbiAgICBvbkVycm9yID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgICAgICAgICAgICAgcmFwaGFlbFNlcnZpY2U6IFJhcGhhZWxTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYsIHJhcGhhZWxTZXJ2aWNlKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcblxuICAgICAgICBsZXQgb3B0cyA9IHsnc3Ryb2tlLXdpZHRoJzogdGhpcy5zdHJva2VXaWR0aCwgJ2ZpbGwnOiB0aGlzLmZpbGxDb2xvcnMsICdzdHJva2UnOiB0aGlzLnN0cm9rZSwgJ2ZpbGwtb3BhY2l0eSc6IHRoaXMuZmlsbE9wYWNpdHl9O1xuICAgICAgICBsZXQgZHJhd0VsZW1lbnQgPSB0aGlzLmRyYXcodGhpcy5jZW50ZXIsIHRoaXMucmFkaXVzLCBvcHRzKTtcbiAgICAgICAgZHJhd0VsZW1lbnQubm9kZS5pZCA9IHRoaXMuZWxlbWVudElkO1xuICAgIH1cblxuICAgIHB1YmxpYyBkcmF3KGNlbnRlcjogUG9pbnQsIHJhZGl1czogbnVtYmVyLCBvcHRzOiBhbnkpIHtcbiAgICAgICAgbGV0IGNpcmNsZSA9IHRoaXMucGFwZXIuY2lyY2xlKGNlbnRlci54LCBjZW50ZXIueSwgcmFkaXVzKS5hdHRyKG9wdHMpO1xuICAgICAgICByZXR1cm4gY2lyY2xlO1xuICAgIH1cbn1cbiJdfQ==
