/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var point_1 = require("./models/point");
var raphael_base_1 = require("./raphael-base");
var raphael_service_1 = require("./raphael.service");
var RaphaelTextDirective = (function (_super) {
    __extends(RaphaelTextDirective, _super);
    function RaphaelTextDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.onError = new core_1.EventEmitter();
        return _this;
    }
    RaphaelTextDirective.prototype.ngOnInit = function () {
        if (this.text === null || this.text === undefined) {
            this.text = '';
        }
        this.draw(this.position, this.text);
    };
    RaphaelTextDirective.prototype.draw = function (position, text) {
        var textPaper = this.paper.text(position.x, position.y, text).attr({
            'text-anchor': 'middle',
            'font-family': 'Arial',
            'font-size': '11',
            'fill': '#373e48'
        });
        textPaper.transform(this.transform);
        return textPaper;
    };
    return RaphaelTextDirective;
}(raphael_base_1.RaphaelBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelTextDirective.prototype, "paper", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", point_1.Point)
], RaphaelTextDirective.prototype, "position", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RaphaelTextDirective.prototype, "transform", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RaphaelTextDirective.prototype, "text", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RaphaelTextDirective.prototype, "onError", void 0);
RaphaelTextDirective = __decorate([
    core_1.Directive({ selector: 'raphael-text' }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        raphael_service_1.RaphaelService])
], RaphaelTextDirective);
exports.RaphaelTextDirective = RaphaelTextDirective;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFwaGFlbC9yYXBoYWVsLXRleHQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7Ozs7Ozs7Ozs7Ozs7OztBQUVILHNDQUEyRjtBQUMzRix3Q0FBdUM7QUFDdkMsK0NBQTZDO0FBQzdDLHFEQUFtRDtBQUduRCxJQUFhLG9CQUFvQjtJQUFTLHdDQUFXO0lBZ0JqRCw4QkFBbUIsVUFBc0IsRUFDN0IsY0FBOEI7UUFEMUMsWUFFSSxrQkFBTSxVQUFVLEVBQUUsY0FBYyxDQUFDLFNBQ3BDO1FBSGtCLGdCQUFVLEdBQVYsVUFBVSxDQUFZO1FBRnpDLGFBQU8sR0FBRyxJQUFJLG1CQUFZLEVBQUUsQ0FBQzs7SUFLN0IsQ0FBQztJQUVELHVDQUFRLEdBQVI7UUFFSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDaEQsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7UUFDbkIsQ0FBQztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVNLG1DQUFJLEdBQVgsVUFBWSxRQUFlLEVBQUUsSUFBWTtRQUNyQyxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDO1lBQy9ELGFBQWEsRUFBRyxRQUFRO1lBQ3hCLGFBQWEsRUFBRyxPQUFPO1lBQ3ZCLFdBQVcsRUFBRyxJQUFJO1lBQ2xCLE1BQU0sRUFBRyxTQUFTO1NBQ3JCLENBQUMsQ0FBQztRQUVILFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUNMLDJCQUFDO0FBQUQsQ0F4Q0EsQUF3Q0MsQ0F4Q3lDLDBCQUFXLEdBd0NwRDtBQXRDRztJQURDLFlBQUssRUFBRTs7bURBQ0c7QUFHWDtJQURDLFlBQUssRUFBRTs4QkFDRSxhQUFLO3NEQUFDO0FBR2hCO0lBREMsWUFBSyxFQUFFOzt1REFDVTtBQUdsQjtJQURDLFlBQUssRUFBRTs7a0RBQ0s7QUFHYjtJQURDLGFBQU0sRUFBRTs7cURBQ29CO0FBZHBCLG9CQUFvQjtJQURoQyxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGNBQWMsRUFBQyxDQUFDO3FDQWlCSCxpQkFBVTtRQUNiLGdDQUFjO0dBakJqQyxvQkFBb0IsQ0F3Q2hDO0FBeENZLG9EQUFvQiIsImZpbGUiOiJjb21wb25lbnRzL3JhcGhhZWwvcmFwaGFlbC10ZXh0LmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBFbGVtZW50UmVmLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi9tb2RlbHMvcG9pbnQnO1xuaW1wb3J0IHsgUmFwaGFlbEJhc2UgfSBmcm9tICcuL3JhcGhhZWwtYmFzZSc7XG5pbXBvcnQgeyBSYXBoYWVsU2VydmljZSB9IGZyb20gJy4vcmFwaGFlbC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7c2VsZWN0b3I6ICdyYXBoYWVsLXRleHQnfSlcbmV4cG9ydCBjbGFzcyBSYXBoYWVsVGV4dERpcmVjdGl2ZSBleHRlbmRzIFJhcGhhZWxCYXNlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKVxuICAgIHBhcGVyOiBhbnk7XG5cbiAgICBASW5wdXQoKVxuICAgIHBvc2l0aW9uOiBQb2ludDtcblxuICAgIEBJbnB1dCgpXG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIHRleHQ6IHN0cmluZztcblxuICAgIEBPdXRwdXQoKVxuICAgIG9uRXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgICByYXBoYWVsU2VydmljZTogUmFwaGFlbFNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZiwgcmFwaGFlbFNlcnZpY2UpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuXG4gICAgICAgIGlmICh0aGlzLnRleHQgPT09IG51bGwgfHwgdGhpcy50ZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMudGV4dCA9ICcnO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZHJhdyh0aGlzLnBvc2l0aW9uLCB0aGlzLnRleHQpO1xuICAgIH1cblxuICAgIHB1YmxpYyBkcmF3KHBvc2l0aW9uOiBQb2ludCwgdGV4dDogc3RyaW5nKSB7XG4gICAgICAgIGxldCB0ZXh0UGFwZXIgPSB0aGlzLnBhcGVyLnRleHQocG9zaXRpb24ueCwgcG9zaXRpb24ueSwgdGV4dCkuYXR0cih7XG4gICAgICAgICAgICAndGV4dC1hbmNob3InIDogJ21pZGRsZScsXG4gICAgICAgICAgICAnZm9udC1mYW1pbHknIDogJ0FyaWFsJyxcbiAgICAgICAgICAgICdmb250LXNpemUnIDogJzExJyxcbiAgICAgICAgICAgICdmaWxsJyA6ICcjMzczZTQ4J1xuICAgICAgICB9KTtcblxuICAgICAgICB0ZXh0UGFwZXIudHJhbnNmb3JtKHRoaXMudHJhbnNmb3JtKTtcbiAgICAgICAgcmV0dXJuIHRleHRQYXBlcjtcbiAgICB9XG59XG4iXX0=
