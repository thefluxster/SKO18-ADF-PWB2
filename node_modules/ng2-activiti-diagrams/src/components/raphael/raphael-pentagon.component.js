/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var point_1 = require("./models/point");
var raphael_base_1 = require("./raphael-base");
var raphael_service_1 = require("./raphael.service");
var RaphaelPentagonDirective = (function (_super) {
    __extends(RaphaelPentagonDirective, _super);
    function RaphaelPentagonDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.onError = new core_1.EventEmitter();
        return _this;
    }
    RaphaelPentagonDirective.prototype.ngOnInit = function () {
        var opts = {
            'stroke-width': this.strokeWidth,
            'fill': this.fillColors,
            'stroke': this.stroke,
            'fill-opacity': this.fillOpacity,
            'stroke-linejoin': 'bevel'
        };
        this.draw(this.center, opts);
    };
    RaphaelPentagonDirective.prototype.draw = function (center, opts) {
        var penta = this.paper.path('M 20.327514,22.344972 L 11.259248,22.344216 L 8.4577203,13.719549' +
            ' L 15.794545,8.389969 L 23.130481,13.720774 L 20.327514,22.344972 z').attr(opts);
        penta.transform('T' + (center.x + 4) + ',' + (center.y + 4));
    };
    return RaphaelPentagonDirective;
}(raphael_base_1.RaphaelBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", point_1.Point)
], RaphaelPentagonDirective.prototype, "center", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelPentagonDirective.prototype, "fillColors", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelPentagonDirective.prototype, "stroke", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelPentagonDirective.prototype, "strokeWidth", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelPentagonDirective.prototype, "fillOpacity", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelPentagonDirective.prototype, "strokeLinejoin", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RaphaelPentagonDirective.prototype, "onError", void 0);
RaphaelPentagonDirective = __decorate([
    core_1.Directive({ selector: 'raphael-pentagon' }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        raphael_service_1.RaphaelService])
], RaphaelPentagonDirective);
exports.RaphaelPentagonDirective = RaphaelPentagonDirective;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFwaGFlbC9yYXBoYWVsLXBlbnRhZ29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBMkY7QUFDM0Ysd0NBQXVDO0FBQ3ZDLCtDQUE2QztBQUM3QyxxREFBbUQ7QUFHbkQsSUFBYSx3QkFBd0I7SUFBUyw0Q0FBVztJQXNCckQsa0NBQW1CLFVBQXNCLEVBQzdCLGNBQThCO1FBRDFDLFlBRUksa0JBQU0sVUFBVSxFQUFFLGNBQWMsQ0FBQyxTQUNwQztRQUhrQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQUZ6QyxhQUFPLEdBQUcsSUFBSSxtQkFBWSxFQUFFLENBQUM7O0lBSzdCLENBQUM7SUFFRCwyQ0FBUSxHQUFSO1FBRUksSUFBSSxJQUFJLEdBQUc7WUFDUCxjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDaEMsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO1lBQ3ZCLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTTtZQUNyQixjQUFjLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDaEMsaUJBQWlCLEVBQUUsT0FBTztTQUM3QixDQUFDO1FBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFTSx1Q0FBSSxHQUFYLFVBQVksTUFBYSxFQUFFLElBQVU7UUFDakMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsbUVBQW1FO1lBQzNGLHFFQUFxRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RGLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUNMLCtCQUFDO0FBQUQsQ0E1Q0EsQUE0Q0MsQ0E1QzZDLDBCQUFXLEdBNEN4RDtBQTFDRztJQURDLFlBQUssRUFBRTs4QkFDQSxhQUFLO3dEQUFDO0FBR2Q7SUFEQyxZQUFLLEVBQUU7OzREQUNRO0FBR2hCO0lBREMsWUFBSyxFQUFFOzt3REFDSTtBQUdaO0lBREMsWUFBSyxFQUFFOzs2REFDUztBQUdqQjtJQURDLFlBQUssRUFBRTs7NkRBQ1M7QUFHakI7SUFEQyxZQUFLLEVBQUU7O2dFQUNZO0FBR3BCO0lBREMsYUFBTSxFQUFFOzt5REFDb0I7QUFwQnBCLHdCQUF3QjtJQURwQyxnQkFBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLGtCQUFrQixFQUFDLENBQUM7cUNBdUJQLGlCQUFVO1FBQ2IsZ0NBQWM7R0F2QmpDLHdCQUF3QixDQTRDcEM7QUE1Q1ksNERBQXdCIiwiZmlsZSI6ImNvbXBvbmVudHMvcmFwaGFlbC9yYXBoYWVsLXBlbnRhZ29uLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBFbGVtZW50UmVmLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi9tb2RlbHMvcG9pbnQnO1xuaW1wb3J0IHsgUmFwaGFlbEJhc2UgfSBmcm9tICcuL3JhcGhhZWwtYmFzZSc7XG5pbXBvcnQgeyBSYXBoYWVsU2VydmljZSB9IGZyb20gJy4vcmFwaGFlbC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7c2VsZWN0b3I6ICdyYXBoYWVsLXBlbnRhZ29uJ30pXG5leHBvcnQgY2xhc3MgUmFwaGFlbFBlbnRhZ29uRGlyZWN0aXZlIGV4dGVuZHMgUmFwaGFlbEJhc2UgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpXG4gICAgY2VudGVyOiBQb2ludDtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbENvbG9yczogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBzdHJva2U6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgc3Ryb2tlV2lkdGg6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbE9wYWNpdHk6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgc3Ryb2tlTGluZWpvaW46IGFueTtcblxuICAgIEBPdXRwdXQoKVxuICAgIG9uRXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgICByYXBoYWVsU2VydmljZTogUmFwaGFlbFNlcnZpY2UpIHtcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZiwgcmFwaGFlbFNlcnZpY2UpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuXG4gICAgICAgIGxldCBvcHRzID0ge1xuICAgICAgICAgICAgJ3N0cm9rZS13aWR0aCc6IHRoaXMuc3Ryb2tlV2lkdGgsXG4gICAgICAgICAgICAnZmlsbCc6IHRoaXMuZmlsbENvbG9ycyxcbiAgICAgICAgICAgICdzdHJva2UnOiB0aGlzLnN0cm9rZSxcbiAgICAgICAgICAgICdmaWxsLW9wYWNpdHknOiB0aGlzLmZpbGxPcGFjaXR5LFxuICAgICAgICAgICAgJ3N0cm9rZS1saW5lam9pbic6ICdiZXZlbCdcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5kcmF3KHRoaXMuY2VudGVyLCBvcHRzKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZHJhdyhjZW50ZXI6IFBvaW50LCBvcHRzPzogYW55KSB7XG4gICAgICAgIGxldCBwZW50YSA9IHRoaXMucGFwZXIucGF0aCgnTSAyMC4zMjc1MTQsMjIuMzQ0OTcyIEwgMTEuMjU5MjQ4LDIyLjM0NDIxNiBMIDguNDU3NzIwMywxMy43MTk1NDknICtcbiAgICAgICAgICAgICcgTCAxNS43OTQ1NDUsOC4zODk5NjkgTCAyMy4xMzA0ODEsMTMuNzIwNzc0IEwgMjAuMzI3NTE0LDIyLjM0NDk3MiB6JykuYXR0cihvcHRzKTtcbiAgICAgICAgcGVudGEudHJhbnNmb3JtKCdUJyArIChjZW50ZXIueCArIDQpICsgJywnICsgKGNlbnRlci55ICsgNCkpO1xuICAgIH1cbn1cbiJdfQ==
