/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var point_1 = require("./../models/point");
var raphael_base_1 = require("./../raphael-base");
var raphael_service_1 = require("./../raphael.service");
var RaphaelIconScriptDirective = (function (_super) {
    __extends(RaphaelIconScriptDirective, _super);
    function RaphaelIconScriptDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.onError = new core_1.EventEmitter();
        return _this;
    }
    RaphaelIconScriptDirective.prototype.ngOnInit = function () {
        this.draw(this.position);
    };
    RaphaelIconScriptDirective.prototype.draw = function (position) {
        var path1 = this.paper.path("m 5,2 0,0.094 c 0.23706,0.064 0.53189,0.1645 0.8125,0.375 0.5582,0.4186 1.05109,1.228 1.15625,2.5312\n        l 8.03125,0 1,0 1,0 c 0,-3 -2,-3 -2,-3 l -10,0 z M 4,3 4,13 2,13 c 0,3 2,3 2,3 l 9,0 c 0,0 2,0 2,-3 L 15,6 6,6 6,5.5 C 6,4.1111\n        5.5595,3.529 5.1875,3.25 4.8155,2.971 4.5,3 4.5,3 L 4,3 z").attr({
            'stroke': this.stroke,
            'fill': this.fillColors
        });
        return path1.transform('T' + position.x + ',' + position.y);
    };
    return RaphaelIconScriptDirective;
}(raphael_base_1.RaphaelBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconScriptDirective.prototype, "paper", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", point_1.Point)
], RaphaelIconScriptDirective.prototype, "position", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RaphaelIconScriptDirective.prototype, "text", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RaphaelIconScriptDirective.prototype, "onError", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RaphaelIconScriptDirective.prototype, "strokeWidth", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconScriptDirective.prototype, "fillColors", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconScriptDirective.prototype, "stroke", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconScriptDirective.prototype, "fillOpacity", void 0);
RaphaelIconScriptDirective = __decorate([
    core_1.Directive({ selector: 'raphael-icon-script' }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        raphael_service_1.RaphaelService])
], RaphaelIconScriptDirective);
exports.RaphaelIconScriptDirective = RaphaelIconScriptDirective;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFwaGFlbC9pY29ucy9yYXBoYWVsLWljb24tc2NyaXB0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBMkY7QUFDM0YsMkNBQTBDO0FBQzFDLGtEQUFnRDtBQUNoRCx3REFBc0Q7QUFHdEQsSUFBYSwwQkFBMEI7SUFBUyw4Q0FBVztJQXlCdkQsb0NBQW1CLFVBQXNCLEVBQzdCLGNBQThCO1FBRDFDLFlBRUksa0JBQU0sVUFBVSxFQUFFLGNBQWMsQ0FBQyxTQUNwQztRQUhrQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQWR6QyxhQUFPLEdBQUcsSUFBSSxtQkFBWSxFQUFFLENBQUM7O0lBaUI3QixDQUFDO0lBRUQsNkNBQVEsR0FBUjtRQUVJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFTSx5Q0FBSSxHQUFYLFVBQVksUUFBZTtRQUN2QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxrVEFFOEIsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUM3RCxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDckIsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO1NBQzFCLENBQUMsQ0FBQztRQUNILE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0E1Q0EsQUE0Q0MsQ0E1QytDLDBCQUFXLEdBNEMxRDtBQTFDRztJQURDLFlBQUssRUFBRTs7eURBQ0c7QUFHWDtJQURDLFlBQUssRUFBRTs4QkFDRSxhQUFLOzREQUFDO0FBR2hCO0lBREMsWUFBSyxFQUFFOzt3REFDSztBQUdiO0lBREMsYUFBTSxFQUFFOzsyREFDb0I7QUFHN0I7SUFEQyxZQUFLLEVBQUU7OytEQUNZO0FBR3BCO0lBREMsWUFBSyxFQUFFOzs4REFDUTtBQUdoQjtJQURDLFlBQUssRUFBRTs7MERBQ0k7QUFHWjtJQURDLFlBQUssRUFBRTs7K0RBQ1M7QUF2QlIsMEJBQTBCO0lBRHRDLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUscUJBQXFCLEVBQUMsQ0FBQztxQ0EwQlYsaUJBQVU7UUFDYixnQ0FBYztHQTFCakMsMEJBQTBCLENBNEN0QztBQTVDWSxnRUFBMEIiLCJmaWxlIjoiY29tcG9uZW50cy9yYXBoYWVsL2ljb25zL3JhcGhhZWwtaWNvbi1zY3JpcHQuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBPbkluaXQsIEVsZW1lbnRSZWYsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLy4uL21vZGVscy9wb2ludCc7XG5pbXBvcnQgeyBSYXBoYWVsQmFzZSB9IGZyb20gJy4vLi4vcmFwaGFlbC1iYXNlJztcbmltcG9ydCB7IFJhcGhhZWxTZXJ2aWNlIH0gZnJvbSAnLi8uLi9yYXBoYWVsLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtzZWxlY3RvcjogJ3JhcGhhZWwtaWNvbi1zY3JpcHQnfSlcbmV4cG9ydCBjbGFzcyBSYXBoYWVsSWNvblNjcmlwdERpcmVjdGl2ZSBleHRlbmRzIFJhcGhhZWxCYXNlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKVxuICAgIHBhcGVyOiBhbnk7XG5cbiAgICBASW5wdXQoKVxuICAgIHBvc2l0aW9uOiBQb2ludDtcblxuICAgIEBJbnB1dCgpXG4gICAgdGV4dDogc3RyaW5nO1xuXG4gICAgQE91dHB1dCgpXG4gICAgb25FcnJvciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIEBJbnB1dCgpXG4gICAgc3Ryb2tlV2lkdGg6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbENvbG9yczogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBzdHJva2U6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbE9wYWNpdHk6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgICAgICAgICAgICAgIHJhcGhhZWxTZXJ2aWNlOiBSYXBoYWVsU2VydmljZSkge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmLCByYXBoYWVsU2VydmljZSk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG5cbiAgICAgICAgdGhpcy5kcmF3KHRoaXMucG9zaXRpb24pO1xuICAgIH1cblxuICAgIHB1YmxpYyBkcmF3KHBvc2l0aW9uOiBQb2ludCkge1xuICAgICAgICBsZXQgcGF0aDEgPSB0aGlzLnBhcGVyLnBhdGgoYG0gNSwyIDAsMC4wOTQgYyAwLjIzNzA2LDAuMDY0IDAuNTMxODksMC4xNjQ1IDAuODEyNSwwLjM3NSAwLjU1ODIsMC40MTg2IDEuMDUxMDksMS4yMjggMS4xNTYyNSwyLjUzMTJcbiAgICAgICAgbCA4LjAzMTI1LDAgMSwwIDEsMCBjIDAsLTMgLTIsLTMgLTIsLTMgbCAtMTAsMCB6IE0gNCwzIDQsMTMgMiwxMyBjIDAsMyAyLDMgMiwzIGwgOSwwIGMgMCwwIDIsMCAyLC0zIEwgMTUsNiA2LDYgNiw1LjUgQyA2LDQuMTExMVxuICAgICAgICA1LjU1OTUsMy41MjkgNS4xODc1LDMuMjUgNC44MTU1LDIuOTcxIDQuNSwzIDQuNSwzIEwgNCwzIHpgKS5hdHRyKHtcbiAgICAgICAgICAgICdzdHJva2UnOiB0aGlzLnN0cm9rZSxcbiAgICAgICAgICAgICdmaWxsJzogdGhpcy5maWxsQ29sb3JzXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcGF0aDEudHJhbnNmb3JtKCdUJyArIHBvc2l0aW9uLnggKyAnLCcgKyBwb3NpdGlvbi55KTtcbiAgICB9XG59XG4iXX0=
