/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var point_1 = require("./../models/point");
var raphael_base_1 = require("./../raphael-base");
var raphael_service_1 = require("./../raphael.service");
var RaphaelIconReceiveDirective = (function (_super) {
    __extends(RaphaelIconReceiveDirective, _super);
    function RaphaelIconReceiveDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.onError = new core_1.EventEmitter();
        return _this;
    }
    RaphaelIconReceiveDirective.prototype.ngOnInit = function () {
        this.draw(this.position);
    };
    RaphaelIconReceiveDirective.prototype.draw = function (position) {
        var path1 = this.paper.path("m 0.5,2.5 0,13 17,0 0,-13 z M 2,4 6.5,8.5 2,13 z M 4,4 14,4 9,9 z m 12,0 0,9 -4.5,-4.5 z\n         M 7.5,9.5 9,11 10.5,9.5 15,14 3,14 z").attr({
            'stroke': this.stroke,
            'fill': this.fillColors
        });
        return path1.transform('T' + position.x + ',' + position.y);
    };
    return RaphaelIconReceiveDirective;
}(raphael_base_1.RaphaelBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconReceiveDirective.prototype, "paper", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", point_1.Point)
], RaphaelIconReceiveDirective.prototype, "position", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RaphaelIconReceiveDirective.prototype, "text", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RaphaelIconReceiveDirective.prototype, "onError", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RaphaelIconReceiveDirective.prototype, "strokeWidth", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconReceiveDirective.prototype, "fillColors", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconReceiveDirective.prototype, "stroke", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconReceiveDirective.prototype, "fillOpacity", void 0);
RaphaelIconReceiveDirective = __decorate([
    core_1.Directive({ selector: 'raphael-icon-receive' }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        raphael_service_1.RaphaelService])
], RaphaelIconReceiveDirective);
exports.RaphaelIconReceiveDirective = RaphaelIconReceiveDirective;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFwaGFlbC9pY29ucy9yYXBoYWVsLWljb24tcmVjZWl2ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUgsc0NBQTJGO0FBQzNGLDJDQUEwQztBQUMxQyxrREFBZ0Q7QUFDaEQsd0RBQXNEO0FBR3RELElBQWEsMkJBQTJCO0lBQVMsK0NBQVc7SUF5QnhELHFDQUFtQixVQUFzQixFQUM3QixjQUE4QjtRQUQxQyxZQUVJLGtCQUFNLFVBQVUsRUFBRSxjQUFjLENBQUMsU0FDcEM7UUFIa0IsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFkekMsYUFBTyxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDOztJQWlCN0IsQ0FBQztJQUVELDhDQUFRLEdBQVI7UUFFSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRU0sMENBQUksR0FBWCxVQUFZLFFBQWU7UUFDdkIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMseUlBQ1UsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUN6QyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDckIsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO1NBQzFCLENBQUMsQ0FBQztRQUNILE1BQU0sQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUNMLGtDQUFDO0FBQUQsQ0EzQ0EsQUEyQ0MsQ0EzQ2dELDBCQUFXLEdBMkMzRDtBQXpDRztJQURDLFlBQUssRUFBRTs7MERBQ0c7QUFHWDtJQURDLFlBQUssRUFBRTs4QkFDRSxhQUFLOzZEQUFDO0FBR2hCO0lBREMsWUFBSyxFQUFFOzt5REFDSztBQUdiO0lBREMsYUFBTSxFQUFFOzs0REFDb0I7QUFHN0I7SUFEQyxZQUFLLEVBQUU7O2dFQUNZO0FBR3BCO0lBREMsWUFBSyxFQUFFOzsrREFDUTtBQUdoQjtJQURDLFlBQUssRUFBRTs7MkRBQ0k7QUFHWjtJQURDLFlBQUssRUFBRTs7Z0VBQ1M7QUF2QlIsMkJBQTJCO0lBRHZDLGdCQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUsc0JBQXNCLEVBQUMsQ0FBQztxQ0EwQlgsaUJBQVU7UUFDYixnQ0FBYztHQTFCakMsMkJBQTJCLENBMkN2QztBQTNDWSxrRUFBMkIiLCJmaWxlIjoiY29tcG9uZW50cy9yYXBoYWVsL2ljb25zL3JhcGhhZWwtaWNvbi1yZWNlaXZlLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpcmVjdGl2ZSwgT25Jbml0LCBFbGVtZW50UmVmLCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi8uLi9tb2RlbHMvcG9pbnQnO1xuaW1wb3J0IHsgUmFwaGFlbEJhc2UgfSBmcm9tICcuLy4uL3JhcGhhZWwtYmFzZSc7XG5pbXBvcnQgeyBSYXBoYWVsU2VydmljZSB9IGZyb20gJy4vLi4vcmFwaGFlbC5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7c2VsZWN0b3I6ICdyYXBoYWVsLWljb24tcmVjZWl2ZSd9KVxuZXhwb3J0IGNsYXNzIFJhcGhhZWxJY29uUmVjZWl2ZURpcmVjdGl2ZSBleHRlbmRzIFJhcGhhZWxCYXNlIGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKVxuICAgIHBhcGVyOiBhbnk7XG5cbiAgICBASW5wdXQoKVxuICAgIHBvc2l0aW9uOiBQb2ludDtcblxuICAgIEBJbnB1dCgpXG4gICAgdGV4dDogc3RyaW5nO1xuXG4gICAgQE91dHB1dCgpXG4gICAgb25FcnJvciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIEBJbnB1dCgpXG4gICAgc3Ryb2tlV2lkdGg6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbENvbG9yczogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBzdHJva2U6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgZmlsbE9wYWNpdHk6IGFueTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgICAgICAgICAgICAgIHJhcGhhZWxTZXJ2aWNlOiBSYXBoYWVsU2VydmljZSkge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmLCByYXBoYWVsU2VydmljZSk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG5cbiAgICAgICAgdGhpcy5kcmF3KHRoaXMucG9zaXRpb24pO1xuICAgIH1cblxuICAgIHB1YmxpYyBkcmF3KHBvc2l0aW9uOiBQb2ludCkge1xuICAgICAgICBsZXQgcGF0aDEgPSB0aGlzLnBhcGVyLnBhdGgoYG0gMC41LDIuNSAwLDEzIDE3LDAgMCwtMTMgeiBNIDIsNCA2LjUsOC41IDIsMTMgeiBNIDQsNCAxNCw0IDksOSB6IG0gMTIsMCAwLDkgLTQuNSwtNC41IHpcbiAgICAgICAgIE0gNy41LDkuNSA5LDExIDEwLjUsOS41IDE1LDE0IDMsMTQgemApLmF0dHIoe1xuICAgICAgICAgICAgJ3N0cm9rZSc6IHRoaXMuc3Ryb2tlLFxuICAgICAgICAgICAgJ2ZpbGwnOiB0aGlzLmZpbGxDb2xvcnNcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBwYXRoMS50cmFuc2Zvcm0oJ1QnICsgcG9zaXRpb24ueCArICcsJyArIHBvc2l0aW9uLnkpO1xuICAgIH1cbn1cbiJdfQ==
