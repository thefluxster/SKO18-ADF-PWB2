/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var point_1 = require("./../models/point");
var raphael_base_1 = require("./../raphael-base");
var raphael_service_1 = require("./../raphael.service");
var RaphaelIconMessageDirective = (function (_super) {
    __extends(RaphaelIconMessageDirective, _super);
    function RaphaelIconMessageDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.onError = new core_1.EventEmitter();
        return _this;
    }
    RaphaelIconMessageDirective.prototype.ngOnInit = function () {
        this.draw(this.position);
    };
    RaphaelIconMessageDirective.prototype.draw = function (position) {
        var path1 = this.paper.path("M 1 3 L 9 11 L 17 3 L 1 3 z M 1 5 L 1 13 L 5 9 L 1 5 z M 17 5 L 13 9 L 17 13 L 17 5 z M 6 10 L 1 15\n        L 17 15 L 12 10 L 9 13 L 6 10 z").attr({
            'opacity': this.fillOpacity,
            'stroke': this.stroke,
            'strokeWidth': this.strokeWidth,
            'fill': this.fillColors
        });
        return path1.transform('T' + position.x + ',' + position.y);
    };
    return RaphaelIconMessageDirective;
}(raphael_base_1.RaphaelBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconMessageDirective.prototype, "paper", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", point_1.Point)
], RaphaelIconMessageDirective.prototype, "position", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RaphaelIconMessageDirective.prototype, "text", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], RaphaelIconMessageDirective.prototype, "onError", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RaphaelIconMessageDirective.prototype, "strokeWidth", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconMessageDirective.prototype, "fillColors", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconMessageDirective.prototype, "stroke", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], RaphaelIconMessageDirective.prototype, "fillOpacity", void 0);
RaphaelIconMessageDirective = __decorate([
    core_1.Directive({ selector: 'raphael-icon-message' }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        raphael_service_1.RaphaelService])
], RaphaelIconMessageDirective);
exports.RaphaelIconMessageDirective = RaphaelIconMessageDirective;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmFwaGFlbC9pY29ucy9yYXBoYWVsLWljb24tbWVzc2FnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUgsc0NBQTJGO0FBQzNGLDJDQUEwQztBQUMxQyxrREFBZ0Q7QUFDaEQsd0RBQXNEO0FBR3RELElBQWEsMkJBQTJCO0lBQVMsK0NBQVc7SUF5QnhELHFDQUFtQixVQUFzQixFQUM3QixjQUE4QjtRQUQxQyxZQUVJLGtCQUFNLFVBQVUsRUFBRSxjQUFjLENBQUMsU0FDcEM7UUFIa0IsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFkekMsYUFBTyxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDOztJQWlCN0IsQ0FBQztJQUVELDhDQUFRLEdBQVI7UUFFSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRU0sMENBQUksR0FBWCxVQUFZLFFBQWU7UUFDdkIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsOElBQ0ksQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNuQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDM0IsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNO1lBQ3JCLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVztZQUMvQixNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVU7U0FDMUIsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBQ0wsa0NBQUM7QUFBRCxDQTdDQSxBQTZDQyxDQTdDZ0QsMEJBQVcsR0E2QzNEO0FBM0NHO0lBREMsWUFBSyxFQUFFOzswREFDRztBQUdYO0lBREMsWUFBSyxFQUFFOzhCQUNFLGFBQUs7NkRBQUM7QUFHaEI7SUFEQyxZQUFLLEVBQUU7O3lEQUNLO0FBR2I7SUFEQyxhQUFNLEVBQUU7OzREQUNvQjtBQUc3QjtJQURDLFlBQUssRUFBRTs7Z0VBQ1k7QUFHcEI7SUFEQyxZQUFLLEVBQUU7OytEQUNRO0FBR2hCO0lBREMsWUFBSyxFQUFFOzsyREFDSTtBQUdaO0lBREMsWUFBSyxFQUFFOztnRUFDUztBQXZCUiwyQkFBMkI7SUFEdkMsZ0JBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSxzQkFBc0IsRUFBQyxDQUFDO3FDQTBCWCxpQkFBVTtRQUNiLGdDQUFjO0dBMUJqQywyQkFBMkIsQ0E2Q3ZDO0FBN0NZLGtFQUEyQiIsImZpbGUiOiJjb21wb25lbnRzL3JhcGhhZWwvaWNvbnMvcmFwaGFlbC1pY29uLW1lc3NhZ2UuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRGlyZWN0aXZlLCBPbkluaXQsIEVsZW1lbnRSZWYsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuLy4uL21vZGVscy9wb2ludCc7XG5pbXBvcnQgeyBSYXBoYWVsQmFzZSB9IGZyb20gJy4vLi4vcmFwaGFlbC1iYXNlJztcbmltcG9ydCB7IFJhcGhhZWxTZXJ2aWNlIH0gZnJvbSAnLi8uLi9yYXBoYWVsLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtzZWxlY3RvcjogJ3JhcGhhZWwtaWNvbi1tZXNzYWdlJ30pXG5leHBvcnQgY2xhc3MgUmFwaGFlbEljb25NZXNzYWdlRGlyZWN0aXZlIGV4dGVuZHMgUmFwaGFlbEJhc2UgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpXG4gICAgcGFwZXI6IGFueTtcblxuICAgIEBJbnB1dCgpXG4gICAgcG9zaXRpb246IFBvaW50O1xuXG4gICAgQElucHV0KClcbiAgICB0ZXh0OiBzdHJpbmc7XG5cbiAgICBAT3V0cHV0KClcbiAgICBvbkVycm9yID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgQElucHV0KClcbiAgICBzdHJva2VXaWR0aDogbnVtYmVyO1xuXG4gICAgQElucHV0KClcbiAgICBmaWxsQ29sb3JzOiBhbnk7XG5cbiAgICBASW5wdXQoKVxuICAgIHN0cm9rZTogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBmaWxsT3BhY2l0eTogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgICAgICAgICAgICAgcmFwaGFlbFNlcnZpY2U6IFJhcGhhZWxTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYsIHJhcGhhZWxTZXJ2aWNlKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcblxuICAgICAgICB0aGlzLmRyYXcodGhpcy5wb3NpdGlvbik7XG4gICAgfVxuXG4gICAgcHVibGljIGRyYXcocG9zaXRpb246IFBvaW50KSB7XG4gICAgICAgIGxldCBwYXRoMSA9IHRoaXMucGFwZXIucGF0aChgTSAxIDMgTCA5IDExIEwgMTcgMyBMIDEgMyB6IE0gMSA1IEwgMSAxMyBMIDUgOSBMIDEgNSB6IE0gMTcgNSBMIDEzIDkgTCAxNyAxMyBMIDE3IDUgeiBNIDYgMTAgTCAxIDE1XG4gICAgICAgIEwgMTcgMTUgTCAxMiAxMCBMIDkgMTMgTCA2IDEwIHpgKS5hdHRyKHtcbiAgICAgICAgICAgICdvcGFjaXR5JzogdGhpcy5maWxsT3BhY2l0eSxcbiAgICAgICAgICAgICdzdHJva2UnOiB0aGlzLnN0cm9rZSxcbiAgICAgICAgICAgICdzdHJva2VXaWR0aCc6IHRoaXMuc3Ryb2tlV2lkdGgsXG4gICAgICAgICAgICAnZmlsbCc6IHRoaXMuZmlsbENvbG9yc1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHBhdGgxLnRyYW5zZm9ybSgnVCcgKyBwb3NpdGlvbi54ICsgJywnICsgcG9zaXRpb24ueSk7XG4gICAgfVxufVxuIl19
