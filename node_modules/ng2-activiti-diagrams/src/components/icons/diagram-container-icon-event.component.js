/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var diagram_color_service_1 = require("../../services/diagram-color.service");
var DiagramContainerIconEventTaskComponent = (function () {
    function DiagramContainerIconEventTaskComponent(elementRef, diagramColorService) {
        this.elementRef = elementRef;
        this.diagramColorService = diagramColorService;
        this.onError = new core_1.EventEmitter();
    }
    DiagramContainerIconEventTaskComponent.prototype.ngOnInit = function () {
    };
    return DiagramContainerIconEventTaskComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], DiagramContainerIconEventTaskComponent.prototype, "data", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], DiagramContainerIconEventTaskComponent.prototype, "type", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], DiagramContainerIconEventTaskComponent.prototype, "fillColor", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", Object)
], DiagramContainerIconEventTaskComponent.prototype, "onError", void 0);
DiagramContainerIconEventTaskComponent = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'diagram-container-icon-event',
        template: "<div [ngSwitch]=\"type\">     <div *ngSwitchCase=\"'timer'\">         <diagram-icon-timer [data]=\"data\"></diagram-icon-timer>     </div>     <div *ngSwitchCase=\"'error'\">         <diagram-icon-error [data]=\"data\" [fillColor]=\"fillColor\"></diagram-icon-error>     </div>     <div *ngSwitchCase=\"'signal'\">         <diagram-icon-signal [data]=\"data\" [fillColor]=\"fillColor\"></diagram-icon-signal>     </div>     <div *ngSwitchCase=\"'message'\">         <diagram-icon-message [data]=\"data\"></diagram-icon-message>     </div> </div>"
    }),
    __metadata("design:paramtypes", [core_1.ElementRef,
        diagram_color_service_1.DiagramColorService])
], DiagramContainerIconEventTaskComponent);
exports.DiagramContainerIconEventTaskComponent = DiagramContainerIconEventTaskComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvaWNvbnMvZGlhZ3JhbS1jb250YWluZXItaWNvbi1ldmVudC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7Ozs7OztBQUVILHNDQUFtRjtBQUNuRiw4RUFBMkU7QUFPM0UsSUFBYSxzQ0FBc0M7SUFhL0MsZ0RBQW1CLFVBQXNCLEVBQ3JCLG1CQUF3QztRQUR6QyxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3JCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFINUQsWUFBTyxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDO0lBR2tDLENBQUM7SUFFaEUseURBQVEsR0FBUjtJQUNBLENBQUM7SUFDTCw2Q0FBQztBQUFELENBbEJBLEFBa0JDLElBQUE7QUFoQkc7SUFEQyxZQUFLLEVBQUU7O29FQUNFO0FBR1Y7SUFEQyxZQUFLLEVBQUU7O29FQUNLO0FBR2I7SUFEQyxZQUFLLEVBQUU7O3lFQUNVO0FBR2xCO0lBREMsYUFBTSxFQUFFOzt1RUFDb0I7QUFYcEIsc0NBQXNDO0lBTGxELGdCQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDbkIsUUFBUSxFQUFFLDhCQUE4QjtRQUN4QyxRQUFRLEVBQUUsbWlCQUFtaUI7S0FDaGpCLENBQUM7cUNBY2lDLGlCQUFVO1FBQ0EsMkNBQW1CO0dBZG5ELHNDQUFzQyxDQWtCbEQ7QUFsQlksd0ZBQXNDIiwiZmlsZSI6ImNvbXBvbmVudHMvaWNvbnMvZGlhZ3JhbS1jb250YWluZXItaWNvbi1ldmVudC5jb21wb25lbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGlhZ3JhbUNvbG9yU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2RpYWdyYW0tY29sb3Iuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIG1vZHVsZUlkOiBtb2R1bGUuaWQsXG4gICAgc2VsZWN0b3I6ICdkaWFncmFtLWNvbnRhaW5lci1pY29uLWV2ZW50JyxcbiAgICB0ZW1wbGF0ZTogXCI8ZGl2IFtuZ1N3aXRjaF09XFxcInR5cGVcXFwiPiAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVxcXCIndGltZXInXFxcIj4gICAgICAgICA8ZGlhZ3JhbS1pY29uLXRpbWVyIFtkYXRhXT1cXFwiZGF0YVxcXCI+PC9kaWFncmFtLWljb24tdGltZXI+ICAgICA8L2Rpdj4gICAgIDxkaXYgKm5nU3dpdGNoQ2FzZT1cXFwiJ2Vycm9yJ1xcXCI+ICAgICAgICAgPGRpYWdyYW0taWNvbi1lcnJvciBbZGF0YV09XFxcImRhdGFcXFwiIFtmaWxsQ29sb3JdPVxcXCJmaWxsQ29sb3JcXFwiPjwvZGlhZ3JhbS1pY29uLWVycm9yPiAgICAgPC9kaXY+ICAgICA8ZGl2ICpuZ1N3aXRjaENhc2U9XFxcIidzaWduYWwnXFxcIj4gICAgICAgICA8ZGlhZ3JhbS1pY29uLXNpZ25hbCBbZGF0YV09XFxcImRhdGFcXFwiIFtmaWxsQ29sb3JdPVxcXCJmaWxsQ29sb3JcXFwiPjwvZGlhZ3JhbS1pY29uLXNpZ25hbD4gICAgIDwvZGl2PiAgICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVxcXCInbWVzc2FnZSdcXFwiPiAgICAgICAgIDxkaWFncmFtLWljb24tbWVzc2FnZSBbZGF0YV09XFxcImRhdGFcXFwiPjwvZGlhZ3JhbS1pY29uLW1lc3NhZ2U+ICAgICA8L2Rpdj4gPC9kaXY+XCJcbn0pXG5leHBvcnQgY2xhc3MgRGlhZ3JhbUNvbnRhaW5lckljb25FdmVudFRhc2tDb21wb25lbnQge1xuICAgIEBJbnB1dCgpXG4gICAgZGF0YTogYW55O1xuXG4gICAgQElucHV0KClcbiAgICB0eXBlOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIGZpbGxDb2xvcjogc3RyaW5nO1xuXG4gICAgQE91dHB1dCgpXG4gICAgb25FcnJvciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgZGlhZ3JhbUNvbG9yU2VydmljZTogRGlhZ3JhbUNvbG9yU2VydmljZSkge31cblxuICAgIG5nT25Jbml0KCkge1xuICAgIH1cbn1cbiJdfQ==
