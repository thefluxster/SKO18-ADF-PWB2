/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var Rx_1 = require("rxjs/Rx");
var http_1 = require("@angular/http");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var DiagramsService = (function () {
    function DiagramsService(authService, http, settingsService, logService) {
        this.authService = authService;
        this.http = http;
        this.settingsService = settingsService;
        this.logService = logService;
    }
    DiagramsService.prototype.getProcessDefinitionModel = function (processDefinitionId) {
        var _this = this;
        var url = this.settingsService.getBPMApiBaseUrl() + "/app/rest/process-definitions/" + processDefinitionId + "/model-json";
        var options = this.getRequestOptions();
        return this.http
            .get(url, options)
            .map(function (res) {
            var body = res.json();
            return body;
        }).catch(function (err) { return _this.handleError(err); });
    };
    DiagramsService.prototype.getHeaders = function () {
        return new http_1.Headers({
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': this.authService.getTicketBpm()
        });
    };
    DiagramsService.prototype.getRequestOptions = function (param) {
        var headers = this.getHeaders();
        return new http_1.RequestOptions({ headers: headers, withCredentials: true, search: param });
    };
    DiagramsService.prototype.handleError = function (error) {
        this.logService.error(error);
        return Rx_1.Observable.throw(error.json().error || 'Server error');
    };
    return DiagramsService;
}());
DiagramsService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [ng2_alfresco_core_1.AlfrescoAuthenticationService,
        http_1.Http,
        ng2_alfresco_core_1.AlfrescoSettingsService,
        ng2_alfresco_core_1.LogService])
], DiagramsService);
exports.DiagramsService = DiagramsService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2RpYWdyYW1zLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7Ozs7OztBQUVILHNDQUEyQztBQUMzQyw4QkFBcUM7QUFDckMsc0NBQXdFO0FBQ3hFLHVEQUF1RztBQUd2RyxJQUFhLGVBQWU7SUFFeEIseUJBQW9CLFdBQTBDLEVBQzFDLElBQVUsRUFDVixlQUF3QyxFQUN4QyxVQUFzQjtRQUh0QixnQkFBVyxHQUFYLFdBQVcsQ0FBK0I7UUFDMUMsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUNWLG9CQUFlLEdBQWYsZUFBZSxDQUF5QjtRQUN4QyxlQUFVLEdBQVYsVUFBVSxDQUFZO0lBQzFDLENBQUM7SUFFRCxtREFBeUIsR0FBekIsVUFBMEIsbUJBQTJCO1FBQXJELGlCQVNDO1FBUkcsSUFBSSxHQUFHLEdBQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsRUFBRSxzQ0FBaUMsbUJBQW1CLGdCQUFhLENBQUM7UUFDdEgsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDdkMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJO2FBQ1gsR0FBRyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUM7YUFDakIsR0FBRyxDQUFDLFVBQUMsR0FBUTtZQUNWLElBQUksSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLEtBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLEVBQXJCLENBQXFCLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRU0sb0NBQVUsR0FBakI7UUFDSSxNQUFNLENBQUMsSUFBSSxjQUFPLENBQUM7WUFDZixRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLGNBQWMsRUFBRSxrQkFBa0I7WUFDbEMsZUFBZSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFO1NBQ25ELENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSwyQ0FBaUIsR0FBeEIsVUFBeUIsS0FBVztRQUNoQyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDaEMsTUFBTSxDQUFDLElBQUkscUJBQWMsQ0FBQyxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBRU8scUNBQVcsR0FBbkIsVUFBb0IsS0FBZTtRQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QixNQUFNLENBQUMsZUFBVSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxJQUFJLGNBQWMsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFDTCxzQkFBQztBQUFELENBcENBLEFBb0NDLElBQUE7QUFwQ1ksZUFBZTtJQUQzQixpQkFBVSxFQUFFO3FDQUd3QixpREFBNkI7UUFDcEMsV0FBSTtRQUNPLDJDQUF1QjtRQUM1Qiw4QkFBVTtHQUxqQyxlQUFlLENBb0MzQjtBQXBDWSwwQ0FBZSIsImZpbGUiOiJzZXJ2aWNlcy9kaWFncmFtcy5zZXJ2aWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvUngnO1xuaW1wb3J0IHsgUmVzcG9uc2UsIEh0dHAsIEhlYWRlcnMsIFJlcXVlc3RPcHRpb25zIH0gZnJvbSAnQGFuZ3VsYXIvaHR0cCc7XG5pbXBvcnQgeyBBbGZyZXNjb0F1dGhlbnRpY2F0aW9uU2VydmljZSwgQWxmcmVzY29TZXR0aW5nc1NlcnZpY2UsIExvZ1NlcnZpY2UgfSBmcm9tICduZzItYWxmcmVzY28tY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEaWFncmFtc1NlcnZpY2Uge1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBhdXRoU2VydmljZTogQWxmcmVzY29BdXRoZW50aWNhdGlvblNlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBodHRwOiBIdHRwLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgc2V0dGluZ3NTZXJ2aWNlOiBBbGZyZXNjb1NldHRpbmdzU2VydmljZSxcbiAgICAgICAgICAgICAgICBwcml2YXRlIGxvZ1NlcnZpY2U6IExvZ1NlcnZpY2UpIHtcbiAgICB9XG5cbiAgICBnZXRQcm9jZXNzRGVmaW5pdGlvbk1vZGVsKHByb2Nlc3NEZWZpbml0aW9uSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgICAgIGxldCB1cmwgPSBgJHt0aGlzLnNldHRpbmdzU2VydmljZS5nZXRCUE1BcGlCYXNlVXJsKCl9L2FwcC9yZXN0L3Byb2Nlc3MtZGVmaW5pdGlvbnMvJHtwcm9jZXNzRGVmaW5pdGlvbklkfS9tb2RlbC1qc29uYDtcbiAgICAgICAgbGV0IG9wdGlvbnMgPSB0aGlzLmdldFJlcXVlc3RPcHRpb25zKCk7XG4gICAgICAgIHJldHVybiB0aGlzLmh0dHBcbiAgICAgICAgICAgIC5nZXQodXJsLCBvcHRpb25zKVxuICAgICAgICAgICAgLm1hcCgocmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgYm9keSA9IHJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvZHk7XG4gICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gdGhpcy5oYW5kbGVFcnJvcihlcnIpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0SGVhZGVycygpOiBIZWFkZXJzIHtcbiAgICAgICAgcmV0dXJuIG5ldyBIZWFkZXJzKHtcbiAgICAgICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiB0aGlzLmF1dGhTZXJ2aWNlLmdldFRpY2tldEJwbSgpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRSZXF1ZXN0T3B0aW9ucyhwYXJhbT86IGFueSk6IFJlcXVlc3RPcHRpb25zIHtcbiAgICAgICAgbGV0IGhlYWRlcnMgPSB0aGlzLmdldEhlYWRlcnMoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXF1ZXN0T3B0aW9ucyh7aGVhZGVyczogaGVhZGVycywgd2l0aENyZWRlbnRpYWxzOiB0cnVlLCBzZWFyY2g6IHBhcmFtfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBoYW5kbGVFcnJvcihlcnJvcjogUmVzcG9uc2UpIHtcbiAgICAgICAgdGhpcy5sb2dTZXJ2aWNlLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpLmVycm9yIHx8ICdTZXJ2ZXIgZXJyb3InKTtcbiAgICB9XG59XG4iXX0=
