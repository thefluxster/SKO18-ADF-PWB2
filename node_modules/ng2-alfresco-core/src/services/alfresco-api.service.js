/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var alfrescoApi = require("alfresco-js-api");
var alfresco_settings_service_1 = require("./alfresco-settings.service");
var storage_service_1 = require("./storage.service");
var AlfrescoApiService = (function () {
    function AlfrescoApiService(settingsService, storage) {
        var _this = this;
        this.settingsService = settingsService;
        this.storage = storage;
        this.provider = this.settingsService.getProviders();
        this.ticketEcm = this.getTicketEcm();
        this.ticketBpm = this.getTicketBpm();
        this.hostEcm = this.settingsService.ecmHost;
        this.hostBpm = this.settingsService.bpmHost;
        this.contextRoot = 'alfresco';
        this.disableCsrf = false;
        this.init();
        settingsService.bpmHostSubject.subscribe(function (hostBpm) {
            _this.hostBpm = hostBpm;
            _this.init();
        });
        settingsService.ecmHostSubject.subscribe(function (hostEcm) {
            _this.hostEcm = hostEcm;
            _this.init();
        });
        settingsService.csrfSubject.subscribe(function (disableCsrf) {
            _this.disableCsrf = disableCsrf;
            _this.init();
        });
        settingsService.providerSubject.subscribe(function (provider) {
            _this.provider = provider;
            _this.init();
        });
    }
    AlfrescoApiService.prototype.getInstance = function () {
        return this.alfrescoApi;
    };
    AlfrescoApiService.prototype.init = function () {
        this.alfrescoApi = new alfrescoApi({
            provider: this.provider,
            ticketEcm: this.ticketEcm,
            ticketBpm: this.ticketBpm,
            hostEcm: this.hostEcm,
            hostBpm: this.hostBpm,
            contextRoot: this.contextRoot,
            disableCsrf: this.disableCsrf
        });
    };
    AlfrescoApiService.prototype.getTicketEcm = function () {
        return this.storage.getItem('ticket-ECM');
    };
    AlfrescoApiService.prototype.getTicketBpm = function () {
        return this.storage.getItem('ticket-BPM');
    };
    return AlfrescoApiService;
}());
AlfrescoApiService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [alfresco_settings_service_1.AlfrescoSettingsService,
        storage_service_1.StorageService])
], AlfrescoApiService);
exports.AlfrescoApiService = AlfrescoApiService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VzL2FsZnJlc2NvLWFwaS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBMkM7QUFFM0MsNkNBQWdEO0FBQ2hELHlFQUFzRTtBQUN0RSxxREFBbUQ7QUFHbkQsSUFBYSxrQkFBa0I7SUFzQjNCLDRCQUFvQixlQUF3QyxFQUN4QyxPQUF1QjtRQUQzQyxpQkFnQ0M7UUFoQ21CLG9CQUFlLEdBQWYsZUFBZSxDQUF5QjtRQUN4QyxZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUV2QyxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sQ0FBQztRQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsT0FBTyxDQUFDO1FBQzVDLElBQUksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO1FBQzlCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBRXpCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVaLGVBQWUsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLFVBQUMsT0FBTztZQUM3QyxLQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztZQUN2QixLQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxlQUFlLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxVQUFDLE9BQU87WUFDN0MsS0FBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7WUFDdkIsS0FBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBRUgsZUFBZSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsVUFBQyxXQUFXO1lBQzlDLEtBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1lBQy9CLEtBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztRQUVILGVBQWUsQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLFVBQUMsUUFBUTtZQUMvQyxLQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztZQUN6QixLQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDaEIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBcENNLHdDQUFXLEdBQWxCO1FBQ0ksTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQztJQW9DTyxpQ0FBSSxHQUFaO1FBQ0ksSUFBSSxDQUFDLFdBQVcsR0FBZ0IsSUFBSSxXQUFXLENBQUM7WUFDNUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1lBQ3ZCLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN6QixTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQVM7WUFDekIsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1lBQ3JCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztZQUNyQixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7WUFDN0IsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXO1NBQ2hDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFNTyx5Q0FBWSxHQUFwQjtRQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBTU8seUNBQVksR0FBcEI7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVMLHlCQUFDO0FBQUQsQ0FwRkEsQUFvRkMsSUFBQTtBQXBGWSxrQkFBa0I7SUFEOUIsaUJBQVUsRUFBRTtxQ0F1QjRCLG1EQUF1QjtRQUMvQixnQ0FBYztHQXZCbEMsa0JBQWtCLENBb0Y5QjtBQXBGWSxnREFBa0IiLCJmaWxlIjoic2VydmljZXMvYWxmcmVzY28tYXBpLnNlcnZpY2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbGZyZXNjb0FwaSB9IGZyb20gICdhbGZyZXNjby1qcy1hcGknO1xuaW1wb3J0ICogYXMgYWxmcmVzY29BcGkgZnJvbSAgJ2FsZnJlc2NvLWpzLWFwaSc7XG5pbXBvcnQgeyBBbGZyZXNjb1NldHRpbmdzU2VydmljZSB9IGZyb20gJy4vYWxmcmVzY28tc2V0dGluZ3Muc2VydmljZSc7XG5pbXBvcnQgeyBTdG9yYWdlU2VydmljZSB9IGZyb20gJy4vc3RvcmFnZS5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFsZnJlc2NvQXBpU2VydmljZSB7XG5cbiAgICBwcml2YXRlIGFsZnJlc2NvQXBpOiBBbGZyZXNjb0FwaTtcblxuICAgIHByaXZhdGUgcHJvdmlkZXI6IHN0cmluZztcblxuICAgIHByaXZhdGUgdGlja2V0RWNtOiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIHRpY2tldEJwbTogc3RyaW5nO1xuXG4gICAgcHJpdmF0ZSBob3N0RWNtOiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIGhvc3RCcG06IHN0cmluZztcblxuICAgIHByaXZhdGUgY29udGV4dFJvb3Q6IHN0cmluZztcblxuICAgIHByaXZhdGUgZGlzYWJsZUNzcmY6IGJvb2xlYW47XG5cbiAgICBwdWJsaWMgZ2V0SW5zdGFuY2UoKTogQWxmcmVzY29BcGkge1xuICAgICAgICByZXR1cm4gdGhpcy5hbGZyZXNjb0FwaTtcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNldHRpbmdzU2VydmljZTogQWxmcmVzY29TZXR0aW5nc1NlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBzdG9yYWdlOiBTdG9yYWdlU2VydmljZSkge1xuXG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSB0aGlzLnNldHRpbmdzU2VydmljZS5nZXRQcm92aWRlcnMoKTtcbiAgICAgICAgdGhpcy50aWNrZXRFY20gPSB0aGlzLmdldFRpY2tldEVjbSgpO1xuICAgICAgICB0aGlzLnRpY2tldEJwbSA9IHRoaXMuZ2V0VGlja2V0QnBtKCk7XG4gICAgICAgIHRoaXMuaG9zdEVjbSA9IHRoaXMuc2V0dGluZ3NTZXJ2aWNlLmVjbUhvc3Q7XG4gICAgICAgIHRoaXMuaG9zdEJwbSA9IHRoaXMuc2V0dGluZ3NTZXJ2aWNlLmJwbUhvc3Q7XG4gICAgICAgIHRoaXMuY29udGV4dFJvb3QgPSAnYWxmcmVzY28nO1xuICAgICAgICB0aGlzLmRpc2FibGVDc3JmID0gZmFsc2U7XG5cbiAgICAgICAgdGhpcy5pbml0KCk7XG5cbiAgICAgICAgc2V0dGluZ3NTZXJ2aWNlLmJwbUhvc3RTdWJqZWN0LnN1YnNjcmliZSgoaG9zdEJwbSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5ob3N0QnBtID0gaG9zdEJwbTtcbiAgICAgICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB9KTtcblxuICAgICAgICBzZXR0aW5nc1NlcnZpY2UuZWNtSG9zdFN1YmplY3Quc3Vic2NyaWJlKChob3N0RWNtKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmhvc3RFY20gPSBob3N0RWNtO1xuICAgICAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNldHRpbmdzU2VydmljZS5jc3JmU3ViamVjdC5zdWJzY3JpYmUoKGRpc2FibGVDc3JmKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRpc2FibGVDc3JmID0gZGlzYWJsZUNzcmY7XG4gICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2V0dGluZ3NTZXJ2aWNlLnByb3ZpZGVyU3ViamVjdC5zdWJzY3JpYmUoKHByb3ZpZGVyKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnByb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbml0KCkge1xuICAgICAgICB0aGlzLmFsZnJlc2NvQXBpID0gPEFsZnJlc2NvQXBpPm5ldyBhbGZyZXNjb0FwaSh7XG4gICAgICAgICAgICBwcm92aWRlcjogdGhpcy5wcm92aWRlcixcbiAgICAgICAgICAgIHRpY2tldEVjbTogdGhpcy50aWNrZXRFY20sXG4gICAgICAgICAgICB0aWNrZXRCcG06IHRoaXMudGlja2V0QnBtLFxuICAgICAgICAgICAgaG9zdEVjbTogdGhpcy5ob3N0RWNtLFxuICAgICAgICAgICAgaG9zdEJwbTogdGhpcy5ob3N0QnBtLFxuICAgICAgICAgICAgY29udGV4dFJvb3Q6IHRoaXMuY29udGV4dFJvb3QsXG4gICAgICAgICAgICBkaXNhYmxlQ3NyZjogdGhpcy5kaXNhYmxlQ3NyZlxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbWV0aG9kIHJldHVybiB0aGUgRUNNIHRpY2tldCBzdG9yZWQgaW4gdGhlIFN0b3JhZ2VcbiAgICAgKiBAcmV0dXJucyB0aWNrZXRcbiAgICAgKi9cbiAgICBwcml2YXRlIGdldFRpY2tldEVjbSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlLmdldEl0ZW0oJ3RpY2tldC1FQ00nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgbWV0aG9kIHJldHVybiB0aGUgQlBNIHRpY2tldCBzdG9yZWQgaW4gdGhlIFN0b3JhZ2VcbiAgICAgKiBAcmV0dXJucyB0aWNrZXRcbiAgICAgKi9cbiAgICBwcml2YXRlIGdldFRpY2tldEJwbSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5zdG9yYWdlLmdldEl0ZW0oJ3RpY2tldC1CUE0nKTtcbiAgICB9XG5cbn1cbiJdfQ==
