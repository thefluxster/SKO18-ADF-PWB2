/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var context_menu_directive_1 = require("./context-menu.directive");
var context_menu_service_1 = require("./context-menu.service");
describe('ContextMenuDirective', function () {
    var contextMenuService;
    var directive;
    beforeEach(function () {
        contextMenuService = new context_menu_service_1.ContextMenuService();
        directive = new context_menu_directive_1.ContextMenuDirective(contextMenuService);
    });
    it('should show menu via service', function (done) {
        contextMenuService.show.subscribe(function () {
            done();
        });
        directive.links = [{}];
        directive.onShowContextMenu(null);
    });
    it('should prevent default behavior', function () {
        var event = new MouseEvent('click');
        spyOn(event, 'preventDefault').and.callThrough();
        directive.onShowContextMenu(event);
        expect(event.preventDefault).toHaveBeenCalled();
    });
    it('should forward event to service', function () {
        var event = new MouseEvent('click');
        contextMenuService.show.subscribe(function (e) {
            expect(e.event).toBeDefined();
            expect(e.event).toBe(event);
        });
        directive.onShowContextMenu(event);
    });
    it('should forward menu items to service', function () {
        var links = [{}, {}];
        directive.links = links;
        contextMenuService.show.subscribe(function (e) {
            expect(e.obj).toBeDefined();
            expect(e.obj).toBe(links);
        });
        directive.onShowContextMenu(null);
    });
});
//# sourceMappingURL=context-menu.directive.spec.js.map