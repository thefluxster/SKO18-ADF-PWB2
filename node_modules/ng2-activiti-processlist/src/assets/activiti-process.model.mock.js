/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var process_instance_model_1 = require("../models/process-instance.model");
var ProcessList = (function () {
    function ProcessList(data) {
        this.data = data || [];
    }
    return ProcessList;
}());
exports.ProcessList = ProcessList;
var SingleProcessList = (function (_super) {
    __extends(SingleProcessList, _super);
    function SingleProcessList(name) {
        var _this = this;
        var instance = new process_instance_model_1.ProcessInstance({
            id: '123',
            name: name
        });
        _this = _super.call(this, [instance]) || this;
        return _this;
    }
    return SingleProcessList;
}(ProcessList));
exports.SingleProcessList = SingleProcessList;
exports.exampleProcess = new process_instance_model_1.ProcessInstance({
    id: '123',
    name: 'Process 123',
    started: '2016-11-10T03:37:30.010+0000',
    startedBy: {
        id: 1001,
        firstName: 'Bob',
        lastName: 'Jones',
        email: 'bob@app.activiti.com'
    }
});
exports.exampleProcessNoName = new process_instance_model_1.ProcessInstance({
    id: '123',
    name: null,
    started: '2016-11-10T03:37:30.010+0000',
    startedBy: {
        id: 1001,
        firstName: 'Bob',
        lastName: 'Jones',
        email: 'bob@app.activiti.com'
    },
    processDefinitionName: 'My Process'
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0cy9hY3Rpdml0aS1wcm9jZXNzLm1vZGVsLm1vY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7O0FBRUgsMkVBQW1FO0FBRW5FO0lBT0kscUJBQVksSUFBd0I7UUFDaEMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFDTCxrQkFBQztBQUFELENBVkEsQUFVQyxJQUFBO0FBVlksa0NBQVc7QUFZeEI7SUFBdUMscUNBQVc7SUFDOUMsMkJBQVksSUFBYTtRQUF6QixpQkFNQztRQUxHLElBQUksUUFBUSxHQUFHLElBQUksd0NBQWUsQ0FBQztZQUMvQixFQUFFLEVBQUUsS0FBSztZQUNULElBQUksRUFBRSxJQUFJO1NBQ2IsQ0FBQyxDQUFDO1FBQ0gsUUFBQSxrQkFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFNBQUM7O0lBQ3RCLENBQUM7SUFDTCx3QkFBQztBQUFELENBUkEsQUFRQyxDQVJzQyxXQUFXLEdBUWpEO0FBUlksOENBQWlCO0FBVW5CLFFBQUEsY0FBYyxHQUFHLElBQUksd0NBQWUsQ0FBQztJQUM1QyxFQUFFLEVBQUUsS0FBSztJQUNULElBQUksRUFBRSxhQUFhO0lBQ25CLE9BQU8sRUFBRSw4QkFBOEI7SUFDdkMsU0FBUyxFQUFFO1FBQ1AsRUFBRSxFQUFFLElBQUk7UUFDUixTQUFTLEVBQUUsS0FBSztRQUNoQixRQUFRLEVBQUUsT0FBTztRQUNqQixLQUFLLEVBQUUsc0JBQXNCO0tBQ2hDO0NBQ0osQ0FBQyxDQUFDO0FBRVEsUUFBQSxvQkFBb0IsR0FBRyxJQUFJLHdDQUFlLENBQUM7SUFDbEQsRUFBRSxFQUFFLEtBQUs7SUFDVCxJQUFJLEVBQUUsSUFBSTtJQUNWLE9BQU8sRUFBRSw4QkFBOEI7SUFDdkMsU0FBUyxFQUFFO1FBQ1AsRUFBRSxFQUFFLElBQUk7UUFDUixTQUFTLEVBQUUsS0FBSztRQUNoQixRQUFRLEVBQUUsT0FBTztRQUNqQixLQUFLLEVBQUUsc0JBQXNCO0tBQ2hDO0lBQ0QscUJBQXFCLEVBQUUsWUFBWTtDQUN0QyxDQUFDLENBQUMiLCJmaWxlIjoiYXNzZXRzL2FjdGl2aXRpLXByb2Nlc3MubW9kZWwubW9jay5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE2IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFByb2Nlc3NJbnN0YW5jZSB9IGZyb20gJy4uL21vZGVscy9wcm9jZXNzLWluc3RhbmNlLm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIFByb2Nlc3NMaXN0IHtcblxuICAgIGRhdGE6IFByb2Nlc3NJbnN0YW5jZVtdO1xuICAgIHNpemU6IG51bWJlcjtcbiAgICBzdGFydDogbnVtYmVyO1xuICAgIHRvdGFsOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPzogUHJvY2Vzc0luc3RhbmNlW10pIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YSB8fCBbXTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBTaW5nbGVQcm9jZXNzTGlzdCBleHRlbmRzIFByb2Nlc3NMaXN0IHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lPzogc3RyaW5nKSB7XG4gICAgICAgIGxldCBpbnN0YW5jZSA9IG5ldyBQcm9jZXNzSW5zdGFuY2Uoe1xuICAgICAgICAgICAgaWQ6ICcxMjMnLFxuICAgICAgICAgICAgbmFtZTogbmFtZVxuICAgICAgICB9KTtcbiAgICAgICAgc3VwZXIoW2luc3RhbmNlXSk7XG4gICAgfVxufVxuXG5leHBvcnQgdmFyIGV4YW1wbGVQcm9jZXNzID0gbmV3IFByb2Nlc3NJbnN0YW5jZSh7XG4gICAgaWQ6ICcxMjMnLFxuICAgIG5hbWU6ICdQcm9jZXNzIDEyMycsXG4gICAgc3RhcnRlZDogJzIwMTYtMTEtMTBUMDM6Mzc6MzAuMDEwKzAwMDAnLFxuICAgIHN0YXJ0ZWRCeToge1xuICAgICAgICBpZDogMTAwMSxcbiAgICAgICAgZmlyc3ROYW1lOiAnQm9iJyxcbiAgICAgICAgbGFzdE5hbWU6ICdKb25lcycsXG4gICAgICAgIGVtYWlsOiAnYm9iQGFwcC5hY3Rpdml0aS5jb20nXG4gICAgfVxufSk7XG5cbmV4cG9ydCB2YXIgZXhhbXBsZVByb2Nlc3NOb05hbWUgPSBuZXcgUHJvY2Vzc0luc3RhbmNlKHtcbiAgICBpZDogJzEyMycsXG4gICAgbmFtZTogbnVsbCxcbiAgICBzdGFydGVkOiAnMjAxNi0xMS0xMFQwMzozNzozMC4wMTArMDAwMCcsXG4gICAgc3RhcnRlZEJ5OiB7XG4gICAgICAgIGlkOiAxMDAxLFxuICAgICAgICBmaXJzdE5hbWU6ICdCb2InLFxuICAgICAgICBsYXN0TmFtZTogJ0pvbmVzJyxcbiAgICAgICAgZW1haWw6ICdib2JAYXBwLmFjdGl2aXRpLmNvbSdcbiAgICB9LFxuICAgIHByb2Nlc3NEZWZpbml0aW9uTmFtZTogJ015IFByb2Nlc3MnXG59KTtcbiJdfQ==
