/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';
import { Observable } from 'rxjs/Rx';
import { AlfrescoTranslationService, LogService } from 'ng2-alfresco-core';
import { FilterProcessRepresentationModel } from './../models/filter-process.model';
import { ActivitiProcessService } from './../services/activiti-process.service';
export declare class ActivitiProcessFilters implements OnInit, OnChanges {
    private translate;
    private activiti;
    private logService;
    filterClick: EventEmitter<FilterProcessRepresentationModel>;
    onSuccess: EventEmitter<FilterProcessRepresentationModel[]>;
    onError: EventEmitter<any>;
    appId: number;
    appName: string;
    private filterObserver;
    filter$: Observable<FilterProcessRepresentationModel>;
    currentFilter: FilterProcessRepresentationModel;
    filters: FilterProcessRepresentationModel[];
    constructor(translate: AlfrescoTranslationService, activiti: ActivitiProcessService, logService: LogService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    getFilters(appId?: number, appName?: string): void;
    getFiltersByAppId(appId?: number): void;
    getFiltersByAppName(appName: string): void;
    selectFilter(filter: FilterProcessRepresentationModel): void;
    selectFirstFilter(): void;
    getCurrentFilter(): FilterProcessRepresentationModel;
    isFilterListEmpty(): boolean;
    private resetFilter();
}
