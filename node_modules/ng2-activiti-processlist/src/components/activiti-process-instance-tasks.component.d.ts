/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { OnInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { Observable } from 'rxjs/Rx';
import { AlfrescoTranslationService, LogService } from 'ng2-alfresco-core';
import { ActivitiProcessService } from './../services/activiti-process.service';
import { TaskDetailsModel, TaskDetailsEvent } from 'ng2-activiti-tasklist';
import { ProcessInstance } from '../models/process-instance.model';
export declare class ActivitiProcessInstanceTasks implements OnInit, OnChanges {
    private translate;
    private activitiProcess;
    private logService;
    processInstanceDetails: ProcessInstance;
    showRefreshButton: boolean;
    activeTasks: TaskDetailsModel[];
    completedTasks: TaskDetailsModel[];
    private taskObserver;
    private completedTaskObserver;
    task$: Observable<TaskDetailsModel>;
    completedTask$: Observable<TaskDetailsModel>;
    message: string;
    processId: string;
    dialog: any;
    startDialog: any;
    taskdetails: any;
    taskClick: EventEmitter<TaskDetailsEvent>;
    constructor(translate: AlfrescoTranslationService, activitiProcess: ActivitiProcessService, logService: LogService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    load(processId: string): void;
    loadActive(processId: string): void;
    loadCompleted(processId: string): void;
    hasStartFormDefined(): boolean;
    getUserFullName(user: any): string;
    getFormatDate(value: any, format: string): string;
    clickTask($event: any, task: TaskDetailsModel): void;
    clickStartTask(): void;
    showStartDialog(): void;
    closeSartDialog(): void;
    onRefreshClicked(): void;
}
