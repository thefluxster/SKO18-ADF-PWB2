/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var FilterProcessRepresentationModel = (function () {
    function FilterProcessRepresentationModel(obj) {
        this.appId = obj && obj.appId || null;
        this.name = obj && obj.name || null;
        this.recent = obj && obj.recent || false;
        this.icon = obj && obj.icon || null;
        this.filter = obj && obj.filter || null;
        this.index = obj && obj.index;
    }
    FilterProcessRepresentationModel.prototype.hasFilter = function () {
        return this.filter ? true : false;
    };
    return FilterProcessRepresentationModel;
}());
exports.FilterProcessRepresentationModel = FilterProcessRepresentationModel;
var ProcessFilterParamRepresentationModel = (function () {
    function ProcessFilterParamRepresentationModel(obj) {
        this.state = obj && obj.state || null;
        this.sort = obj && obj.sort || null;
    }
    return ProcessFilterParamRepresentationModel;
}());
exports.ProcessFilterParamRepresentationModel = ProcessFilterParamRepresentationModel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy9maWx0ZXItcHJvY2Vzcy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7O0FBU0g7SUFTSSwwQ0FBWSxHQUFTO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUM7SUFDbEMsQ0FBQztJQUVELG9EQUFTLEdBQVQ7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFDTCx1Q0FBQztBQUFELENBckJBLEFBcUJDLElBQUE7QUFyQlksNEVBQWdDO0FBOEI3QztJQUlJLCtDQUFZLEdBQVM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUM7UUFDdEMsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7SUFDeEMsQ0FBQztJQUNMLDRDQUFDO0FBQUQsQ0FSQSxBQVFDLElBQUE7QUFSWSxzRkFBcUMiLCJmaWxlIjoibW9kZWxzL2ZpbHRlci1wcm9jZXNzLm1vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTYgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKlxuICogVGhpcyBvYmplY3QgcmVwcmVzZW50IHRoZSBmaWx0ZXIuXG4gKlxuICpcbiAqIEByZXR1cm5zIHtGaWx0ZXJQcm9jZXNzUmVwcmVzZW50YXRpb25Nb2RlbH0gLlxuICovXG5leHBvcnQgY2xhc3MgRmlsdGVyUHJvY2Vzc1JlcHJlc2VudGF0aW9uTW9kZWwge1xuICAgIGlkOiBudW1iZXI7XG4gICAgYXBwSWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcmVjZW50OiBib29sZWFuO1xuICAgIGljb246IHN0cmluZztcbiAgICBmaWx0ZXI6IFByb2Nlc3NGaWx0ZXJQYXJhbVJlcHJlc2VudGF0aW9uTW9kZWw7XG4gICAgaW5kZXg6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICB0aGlzLmFwcElkID0gb2JqICYmIG9iai5hcHBJZCB8fCBudWxsO1xuICAgICAgICB0aGlzLm5hbWUgPSBvYmogJiYgb2JqLm5hbWUgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5yZWNlbnQgPSBvYmogJiYgb2JqLnJlY2VudCB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29uID0gb2JqICYmIG9iai5pY29uIHx8IG51bGw7XG4gICAgICAgIHRoaXMuZmlsdGVyID0gb2JqICYmIG9iai5maWx0ZXIgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5pbmRleCA9IG9iaiAmJiBvYmouaW5kZXg7XG4gICAgfVxuXG4gICAgaGFzRmlsdGVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIgPyB0cnVlIDogZmFsc2U7XG4gICAgfVxufVxuXG4vKipcbiAqXG4gKiBUaGlzIG9iamVjdCByZXByZXNlbnQgdGhlIHBhcmFtZXRlcnMgb2YgYSBwcm9jZXNzIGZpbHRlci5cbiAqXG4gKlxuICogQHJldHVybnMge1Byb2Nlc3NGaWx0ZXJQYXJhbVJlcHJlc2VudGF0aW9uTW9kZWx9IC5cbiAqL1xuZXhwb3J0IGNsYXNzIFByb2Nlc3NGaWx0ZXJQYXJhbVJlcHJlc2VudGF0aW9uTW9kZWwge1xuICAgIHN0YXRlOiBzdHJpbmc7XG4gICAgc29ydDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBvYmogJiYgb2JqLnN0YXRlIHx8IG51bGw7XG4gICAgICAgIHRoaXMuc29ydCA9IG9iaiAmJiBvYmouc29ydCB8fCBudWxsO1xuICAgIH1cbn1cbiJdfQ==
