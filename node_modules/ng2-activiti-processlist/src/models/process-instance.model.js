/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var ProcessInstance = (function () {
    function ProcessInstance(data) {
        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;
        this.ended = data && data.ended !== undefined ? data.ended : null;
        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;
        this.id = data && data.id !== undefined ? data.id : null;
        this.name = data && data.name !== undefined ? data.name : null;
        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;
        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;
        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;
        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;
        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;
        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;
        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;
        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;
        this.started = data && data.started !== undefined ? data.started : null;
        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;
        this.suspended = data && data.suspended !== undefined ? data.suspended : null;
        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;
        this.variables = data && data.variables !== undefined ? data.variables : null;
    }
    return ProcessInstance;
}());
exports.ProcessInstance = ProcessInstance;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy9wcm9jZXNzLWluc3RhbmNlLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRzs7QUFFSDtJQXFCSSx5QkFBWSxJQUFVO1FBQ2xCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3BGLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xFLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLHdCQUF3QixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxDQUFDO1FBQzNILElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFFLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3pELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQy9ELElBQUksQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLHlCQUF5QixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMseUJBQXlCLEdBQUcsSUFBSSxDQUFDO1FBQzlILElBQUksQ0FBQyw2QkFBNkIsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLDZCQUE2QixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsNkJBQTZCLEdBQUcsSUFBSSxDQUFDO1FBQzFJLElBQUksQ0FBQyw0QkFBNEIsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLDRCQUE0QixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsNEJBQTRCLEdBQUcsSUFBSSxDQUFDO1FBQ3ZJLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLG1CQUFtQixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO1FBQzVHLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLG9CQUFvQixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxDQUFDO1FBQy9HLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLHFCQUFxQixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBQ2xILElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLHdCQUF3QixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxDQUFDO1FBQzNILElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLGdCQUFnQixLQUFLLFNBQVMsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQ25HLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3hFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQzlFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQzlFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQzNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxTQUFTLEtBQUssU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO0lBQ2xGLENBQUM7SUFFTCxzQkFBQztBQUFELENBMUNBLEFBMENDLElBQUE7QUExQ1ksMENBQWUiLCJmaWxlIjoibW9kZWxzL3Byb2Nlc3MtaW5zdGFuY2UubW9kZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5leHBvcnQgY2xhc3MgUHJvY2Vzc0luc3RhbmNlIHtcblxuICAgIHB1YmxpYyBidXNpbmVzc0tleTogc3RyaW5nO1xuICAgIHB1YmxpYyBlbmRlZDogYW55O1xuICAgIHB1YmxpYyBncmFwaGljYWxOb3RhdGlvbkRlZmluZWQ6IGJvb2xlYW47XG4gICAgcHVibGljIGlkOiBzdHJpbmc7XG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbiAgICBwdWJsaWMgcHJvY2Vzc0RlZmluaXRpb25DYXRlZ29yeTogc3RyaW5nO1xuICAgIHB1YmxpYyBwcm9jZXNzRGVmaW5pdGlvbkRlcGxveW1lbnRJZDogc3RyaW5nO1xuICAgIHB1YmxpYyBwcm9jZXNzRGVmaW5pdGlvbkRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgcHVibGljIHByb2Nlc3NEZWZpbml0aW9uSWQ6IHN0cmluZztcbiAgICBwdWJsaWMgcHJvY2Vzc0RlZmluaXRpb25LZXk6IHN0cmluZztcbiAgICBwdWJsaWMgcHJvY2Vzc0RlZmluaXRpb25OYW1lOiBzdHJpbmc7XG4gICAgcHVibGljIHByb2Nlc3NEZWZpbml0aW9uVmVyc2lvbjogbnVtYmVyO1xuICAgIHB1YmxpYyBzdGFydEZvcm1EZWZpbmVkOiBib29sZWFuO1xuICAgIHB1YmxpYyBzdGFydGVkOiBzdHJpbmc7XG4gICAgcHVibGljIHN0YXJ0ZWRCeTogYW55O1xuICAgIHB1YmxpYyBzdXNwZW5kZWQ6IGJvb2xlYW47XG4gICAgcHVibGljIHRlbmFudElkOiBzdHJpbmc7XG4gICAgcHVibGljIHZhcmlhYmxlczogYW55O1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT86IGFueSkge1xuICAgICAgICB0aGlzLmJ1c2luZXNzS2V5ID0gZGF0YSAmJiBkYXRhLmJ1c2luZXNzS2V5ICE9PSB1bmRlZmluZWQgPyBkYXRhLmJ1c2luZXNzS2V5IDogbnVsbDtcbiAgICAgICAgdGhpcy5lbmRlZCA9IGRhdGEgJiYgZGF0YS5lbmRlZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5lbmRlZCA6IG51bGw7XG4gICAgICAgIHRoaXMuZ3JhcGhpY2FsTm90YXRpb25EZWZpbmVkID0gZGF0YSAmJiBkYXRhLmdyYXBoaWNhbE5vdGF0aW9uRGVmaW5lZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5ncmFwaGljYWxOb3RhdGlvbkRlZmluZWQgOiBudWxsO1xuICAgICAgICB0aGlzLmlkID0gZGF0YSAmJiBkYXRhLmlkICE9PSB1bmRlZmluZWQgPyBkYXRhLmlkIDogbnVsbDtcbiAgICAgICAgdGhpcy5uYW1lID0gZGF0YSAmJiBkYXRhLm5hbWUgIT09IHVuZGVmaW5lZCA/IGRhdGEubmFtZSA6IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25DYXRlZ29yeSA9IGRhdGEgJiYgZGF0YS5wcm9jZXNzRGVmaW5pdGlvbkNhdGVnb3J5ICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uQ2F0ZWdvcnkgOiBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkIDogbnVsbDtcbiAgICAgICAgdGhpcy5wcm9jZXNzRGVmaW5pdGlvbkRlc2NyaXB0aW9uID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uRGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZCA/IGRhdGEucHJvY2Vzc0RlZmluaXRpb25EZXNjcmlwdGlvbiA6IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25JZCA9IGRhdGEgJiYgZGF0YS5wcm9jZXNzRGVmaW5pdGlvbklkICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uSWQgOiBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NEZWZpbml0aW9uS2V5ID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uS2V5ICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uS2V5IDogbnVsbDtcbiAgICAgICAgdGhpcy5wcm9jZXNzRGVmaW5pdGlvbk5hbWUgPSBkYXRhICYmIGRhdGEucHJvY2Vzc0RlZmluaXRpb25OYW1lICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uTmFtZSA6IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25WZXJzaW9uID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uVmVyc2lvbiAhPT0gdW5kZWZpbmVkID8gZGF0YS5wcm9jZXNzRGVmaW5pdGlvblZlcnNpb24gOiBudWxsO1xuICAgICAgICB0aGlzLnN0YXJ0Rm9ybURlZmluZWQgPSBkYXRhICYmIGRhdGEuc3RhcnRGb3JtRGVmaW5lZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5zdGFydEZvcm1EZWZpbmVkIDogbnVsbDtcbiAgICAgICAgdGhpcy5zdGFydGVkID0gZGF0YSAmJiBkYXRhLnN0YXJ0ZWQgIT09IHVuZGVmaW5lZCA/IGRhdGEuc3RhcnRlZCA6IG51bGw7XG4gICAgICAgIHRoaXMuc3RhcnRlZEJ5ID0gZGF0YSAmJiBkYXRhLnN0YXJ0ZWRCeSAhPT0gdW5kZWZpbmVkID8gZGF0YS5zdGFydGVkQnkgOiBudWxsO1xuICAgICAgICB0aGlzLnN1c3BlbmRlZCA9IGRhdGEgJiYgZGF0YS5zdXNwZW5kZWQgIT09IHVuZGVmaW5lZCA/IGRhdGEuc3VzcGVuZGVkIDogbnVsbDtcbiAgICAgICAgdGhpcy50ZW5hbnRJZCA9IGRhdGEgJiYgZGF0YS50ZW5hbnRJZCAhPT0gdW5kZWZpbmVkID8gZGF0YS50ZW5hbnRJZCA6IG51bGw7XG4gICAgICAgIHRoaXMudmFyaWFibGVzID0gZGF0YSAmJiBkYXRhLnZhcmlhYmxlcyAhPT0gdW5kZWZpbmVkID8gZGF0YS52YXJpYWJsZXMgOiBudWxsO1xuICAgIH1cblxufVxuIl19
