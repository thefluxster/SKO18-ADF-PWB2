/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var widget_component_1 = require("./../widget.component");
var DropdownWidget = (function (_super) {
    __extends(DropdownWidget, _super);
    function DropdownWidget() {
        var _this = _super.call(this) || this;
        _this.fieldChanged = new core_1.EventEmitter();
        _this.showDefaultOption = true;
        _this.required = false;
        _this.defaultOptionText = 'Choose One';
        return _this;
    }
    DropdownWidget.prototype.ngOnInit = function () {
        if (this.required) {
            this.formGroup.get(this.controllerName).setValidators(forms_1.Validators.required);
        }
    };
    return DropdownWidget;
}(widget_component_1.WidgetComponent));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], DropdownWidget.prototype, "field", void 0);
__decorate([
    core_1.Input('group'),
    __metadata("design:type", forms_1.FormGroup)
], DropdownWidget.prototype, "formGroup", void 0);
__decorate([
    core_1.Input('controllerName'),
    __metadata("design:type", String)
], DropdownWidget.prototype, "controllerName", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], DropdownWidget.prototype, "fieldChanged", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DropdownWidget.prototype, "showDefaultOption", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DropdownWidget.prototype, "required", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], DropdownWidget.prototype, "defaultOptionText", void 0);
DropdownWidget = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'dropdown-widget',
        template: "<div class=\"dropdown-widget\" [formGroup]=\"formGroup\">     <label class=\"dropdown-widget__label\" [attr.for]=\"field.id\">{{field.nameKey | translate}}</label>     <select [formControlName]=\"controllerName\" [attr.id]=\"'select-' + field.id\" class=\"dropdown-widget__select\"             [(ngModel)]=\"field.value\" (ngModelChange)=\"changeValue($event)\">         <option *ngIf=\"showDefaultOption\" value=\"null\">{{defaultOptionText}}</option>         <option *ngFor=\"let opt of field.options\" [value]=\"opt.id\">{{opt.label}}</option>     </select> </div>",
        styles: [".dropdown-widget {     width: 100%; }  .dropdown-widget__select {     width: 100%; }  .dropdown-widget__invalid .dropdown-widget__select {     border-color: #d50000; }  .dropdown-widget__invalid .dropdown-widget__label {     color: #d50000; }  .dropdown-widget__invalid .dropdown-widget__label:after {     background-color: #d50000; }  .dropdown-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }),
    __metadata("design:paramtypes", [])
], DropdownWidget);
exports.DropdownWidget = DropdownWidget;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvd2lkZ2V0cy9kcm9wZG93bi9kcm9wZG93bi53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUgsc0NBQXVFO0FBQ3ZFLHdDQUF1RDtBQUN2RCwwREFBd0Q7QUFReEQsSUFBYSxjQUFjO0lBQVMsa0NBQWU7SUF1Qi9DO1FBQUEsWUFDSSxpQkFBTyxTQUNWO1FBYkQsa0JBQVksR0FBc0IsSUFBSSxtQkFBWSxFQUFPLENBQUM7UUFHMUQsdUJBQWlCLEdBQVksSUFBSSxDQUFDO1FBR2xDLGNBQVEsR0FBWSxLQUFLLENBQUM7UUFHMUIsdUJBQWlCLEdBQVcsWUFBWSxDQUFDOztJQUl6QyxDQUFDO0lBRUQsaUNBQVEsR0FBUjtRQUNJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxhQUFhLENBQUMsa0JBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMvRSxDQUFDO0lBQ0wsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0FoQ0EsQUFnQ0MsQ0FoQ21DLGtDQUFlLEdBZ0NsRDtBQTdCRztJQURDLFlBQUssRUFBRTs7NkNBQ0c7QUFHWDtJQURDLFlBQUssQ0FBQyxPQUFPLENBQUM7OEJBQ0csaUJBQVM7aURBQUM7QUFHNUI7SUFEQyxZQUFLLENBQUMsZ0JBQWdCLENBQUM7O3NEQUNNO0FBRzlCO0lBREMsYUFBTSxFQUFFOzhCQUNLLG1CQUFZO29EQUFnQztBQUcxRDtJQURDLFlBQUssRUFBRTs7eURBQzBCO0FBR2xDO0lBREMsWUFBSyxFQUFFOztnREFDa0I7QUFHMUI7SUFEQyxZQUFLLEVBQUU7O3lEQUNpQztBQXJCaEMsY0FBYztJQU4xQixnQkFBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLE1BQU0sQ0FBQyxFQUFFO1FBQ25CLFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsUUFBUSxFQUFFLHlqQkFBeWpCO1FBQ25rQixNQUFNLEVBQUUsQ0FBQyx5YUFBeWEsQ0FBQztLQUN0YixDQUFDOztHQUNXLGNBQWMsQ0FnQzFCO0FBaENZLHdDQUFjIiwiZmlsZSI6ImNvbXBvbmVudHMvd2lkZ2V0cy9kcm9wZG93bi9kcm9wZG93bi53aWRnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi8uLi93aWRnZXQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcbiAgICBzZWxlY3RvcjogJ2Ryb3Bkb3duLXdpZGdldCcsXG4gICAgdGVtcGxhdGU6IFwiPGRpdiBjbGFzcz1cXFwiZHJvcGRvd24td2lkZ2V0XFxcIiBbZm9ybUdyb3VwXT1cXFwiZm9ybUdyb3VwXFxcIj4gICAgIDxsYWJlbCBjbGFzcz1cXFwiZHJvcGRvd24td2lkZ2V0X19sYWJlbFxcXCIgW2F0dHIuZm9yXT1cXFwiZmllbGQuaWRcXFwiPnt7ZmllbGQubmFtZUtleSB8IHRyYW5zbGF0ZX19PC9sYWJlbD4gICAgIDxzZWxlY3QgW2Zvcm1Db250cm9sTmFtZV09XFxcImNvbnRyb2xsZXJOYW1lXFxcIiBbYXR0ci5pZF09XFxcIidzZWxlY3QtJyArIGZpZWxkLmlkXFxcIiBjbGFzcz1cXFwiZHJvcGRvd24td2lkZ2V0X19zZWxlY3RcXFwiICAgICAgICAgICAgIFsobmdNb2RlbCldPVxcXCJmaWVsZC52YWx1ZVxcXCIgKG5nTW9kZWxDaGFuZ2UpPVxcXCJjaGFuZ2VWYWx1ZSgkZXZlbnQpXFxcIj4gICAgICAgICA8b3B0aW9uICpuZ0lmPVxcXCJzaG93RGVmYXVsdE9wdGlvblxcXCIgdmFsdWU9XFxcIm51bGxcXFwiPnt7ZGVmYXVsdE9wdGlvblRleHR9fTwvb3B0aW9uPiAgICAgICAgIDxvcHRpb24gKm5nRm9yPVxcXCJsZXQgb3B0IG9mIGZpZWxkLm9wdGlvbnNcXFwiIFt2YWx1ZV09XFxcIm9wdC5pZFxcXCI+e3tvcHQubGFiZWx9fTwvb3B0aW9uPiAgICAgPC9zZWxlY3Q+IDwvZGl2PlwiLFxuICAgIHN0eWxlczogW1wiLmRyb3Bkb3duLXdpZGdldCB7ICAgICB3aWR0aDogMTAwJTsgfSAgLmRyb3Bkb3duLXdpZGdldF9fc2VsZWN0IHsgICAgIHdpZHRoOiAxMDAlOyB9ICAuZHJvcGRvd24td2lkZ2V0X19pbnZhbGlkIC5kcm9wZG93bi13aWRnZXRfX3NlbGVjdCB7ICAgICBib3JkZXItY29sb3I6ICNkNTAwMDA7IH0gIC5kcm9wZG93bi13aWRnZXRfX2ludmFsaWQgLmRyb3Bkb3duLXdpZGdldF9fbGFiZWwgeyAgICAgY29sb3I6ICNkNTAwMDA7IH0gIC5kcm9wZG93bi13aWRnZXRfX2ludmFsaWQgLmRyb3Bkb3duLXdpZGdldF9fbGFiZWw6YWZ0ZXIgeyAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Q1MDAwMDsgfSAgLmRyb3Bkb3duLXdpZGdldF9faW52YWxpZCAubWRsLXRleHRmaWVsZF9fZXJyb3IgeyAgICAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50OyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIERyb3Bkb3duV2lkZ2V0IGV4dGVuZHMgV2lkZ2V0Q29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpXG4gICAgZmllbGQ6IGFueTtcblxuICAgIEBJbnB1dCgnZ3JvdXAnKVxuICAgIHB1YmxpYyBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcblxuICAgIEBJbnB1dCgnY29udHJvbGxlck5hbWUnKVxuICAgIHB1YmxpYyBjb250cm9sbGVyTmFtZTogc3RyaW5nO1xuXG4gICAgQE91dHB1dCgpXG4gICAgZmllbGRDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgQElucHV0KClcbiAgICBzaG93RGVmYXVsdE9wdGlvbjogYm9vbGVhbiA9IHRydWU7XG5cbiAgICBASW5wdXQoKVxuICAgIHJlcXVpcmVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIGRlZmF1bHRPcHRpb25UZXh0OiBzdHJpbmcgPSAnQ2hvb3NlIE9uZSc7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMucmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9ybUdyb3VwLmdldCh0aGlzLmNvbnRyb2xsZXJOYW1lKS5zZXRWYWxpZGF0b3JzKFZhbGlkYXRvcnMucmVxdWlyZWQpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19
