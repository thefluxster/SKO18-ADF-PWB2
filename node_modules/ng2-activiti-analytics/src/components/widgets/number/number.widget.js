/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var widget_component_1 = require("./../widget.component");
var forms_1 = require("@angular/forms");
var NumberWidget = (function (_super) {
    __extends(NumberWidget, _super);
    function NumberWidget(elementRef) {
        var _this = _super.call(this) || this;
        _this.elementRef = elementRef;
        _this.required = false;
        return _this;
    }
    NumberWidget.prototype.ngOnInit = function () {
        if (this.required) {
            this.formGroup.get(this.controllerName).setValidators(forms_1.Validators.required);
        }
    };
    NumberWidget.prototype.setupMaterialComponents = function (handler) {
        if (handler) {
            handler.upgradeAllRegistered();
            if (this.elementRef && this.hasValue()) {
                var container = this.elementRef.nativeElement.querySelector('.mdl-textfield');
                if (container && container.MaterialTextfield) {
                    container.MaterialTextfield.change(this.field.value.toString());
                }
            }
            return true;
        }
        return false;
    };
    return NumberWidget;
}(widget_component_1.WidgetComponent));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], NumberWidget.prototype, "field", void 0);
__decorate([
    core_1.Input('group'),
    __metadata("design:type", forms_1.FormGroup)
], NumberWidget.prototype, "formGroup", void 0);
__decorate([
    core_1.Input('controllerName'),
    __metadata("design:type", String)
], NumberWidget.prototype, "controllerName", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], NumberWidget.prototype, "required", void 0);
NumberWidget = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'number-widget',
        template: "<div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label number-widget\" [formGroup]=\"formGroup\">     <input formControlName=\"{{controllerName}}\" class=\"mdl-textfield__input\"            type=\"text\"            pattern=\"-?[0-9]*(\\.[0-9]+)?\"            [attr.id]=\"field.id\"            [value]=\"field.value\"            [(ngModel)]=\"field.value\"            (ngModelChange)=\"changeValue(field)\">     <label class=\"mdl-textfield__label\" [attr.for]=\"field.id\">{{field.nameKey | translate}}</label> </div>",
        styles: [".number-widget {     width: 100%; }  .number-widget__invalid .mdl-textfield__input {     border-color: #d50000; }  .number-widget__invalid .mdl-textfield__label {     color: #d50000; }  .number-widget__invalid .mdl-textfield__label:after {     background-color: #d50000; }  .number-widget__invalid .mdl-textfield__error {     visibility: visible !important; }"]
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], NumberWidget);
exports.NumberWidget = NumberWidget;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvd2lkZ2V0cy9udW1iZXIvbnVtYmVyLndpZGdldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFSCxzQ0FBNkQ7QUFDN0QsMERBQXdEO0FBQ3hELHdDQUF1RDtBQVF2RCxJQUFhLFlBQVk7SUFBUyxnQ0FBZTtJQWM3QyxzQkFBbUIsVUFBc0I7UUFBekMsWUFDSSxpQkFBTyxTQUNWO1FBRmtCLGdCQUFVLEdBQVYsVUFBVSxDQUFZO1FBRnpDLGNBQVEsR0FBWSxLQUFLLENBQUM7O0lBSTFCLENBQUM7SUFFRCwrQkFBUSxHQUFSO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDaEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxrQkFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQy9FLENBQUM7SUFDTCxDQUFDO0lBRUQsOENBQXVCLEdBQXZCLFVBQXdCLE9BQVk7UUFFaEMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNWLE9BQU8sQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1lBQy9CLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDckMsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQzlFLEVBQUUsQ0FBQyxDQUFDLFNBQVMsSUFBSSxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO29CQUMzQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7Z0JBQ3BFLENBQUM7WUFDTCxDQUFDO1lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQztRQUNoQixDQUFDO1FBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBQ0wsbUJBQUM7QUFBRCxDQXRDQSxBQXNDQyxDQXRDaUMsa0NBQWUsR0FzQ2hEO0FBbkNHO0lBREMsWUFBSyxFQUFFOzsyQ0FDRztBQUdYO0lBREMsWUFBSyxDQUFDLE9BQU8sQ0FBQzs4QkFDRyxpQkFBUzsrQ0FBQztBQUc1QjtJQURDLFlBQUssQ0FBQyxnQkFBZ0IsQ0FBQzs7b0RBQ007QUFHOUI7SUFEQyxZQUFLLEVBQUU7OzhDQUNrQjtBQVpqQixZQUFZO0lBTnhCLGdCQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDbkIsUUFBUSxFQUFFLGVBQWU7UUFDekIsUUFBUSxFQUFFLDBoQkFBMGhCO1FBQ3BpQixNQUFNLEVBQUUsQ0FBQyx5V0FBeVcsQ0FBQztLQUN0WCxDQUFDO3FDQWVpQyxpQkFBVTtHQWRoQyxZQUFZLENBc0N4QjtBQXRDWSxvQ0FBWSIsImZpbGUiOiJjb21wb25lbnRzL3dpZGdldHMvbnVtYmVyL251bWJlci53aWRnZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNiBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBXaWRnZXRDb21wb25lbnQgfSBmcm9tICcuLy4uL3dpZGdldC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxuICAgIHNlbGVjdG9yOiAnbnVtYmVyLXdpZGdldCcsXG4gICAgdGVtcGxhdGU6IFwiPGRpdiBjbGFzcz1cXFwibWRsLXRleHRmaWVsZCBtZGwtanMtdGV4dGZpZWxkIG1kbC10ZXh0ZmllbGQtLWZsb2F0aW5nLWxhYmVsIG51bWJlci13aWRnZXRcXFwiIFtmb3JtR3JvdXBdPVxcXCJmb3JtR3JvdXBcXFwiPiAgICAgPGlucHV0IGZvcm1Db250cm9sTmFtZT1cXFwie3tjb250cm9sbGVyTmFtZX19XFxcIiBjbGFzcz1cXFwibWRsLXRleHRmaWVsZF9faW5wdXRcXFwiICAgICAgICAgICAgdHlwZT1cXFwidGV4dFxcXCIgICAgICAgICAgICBwYXR0ZXJuPVxcXCItP1swLTldKihcXFxcLlswLTldKyk/XFxcIiAgICAgICAgICAgIFthdHRyLmlkXT1cXFwiZmllbGQuaWRcXFwiICAgICAgICAgICAgW3ZhbHVlXT1cXFwiZmllbGQudmFsdWVcXFwiICAgICAgICAgICAgWyhuZ01vZGVsKV09XFxcImZpZWxkLnZhbHVlXFxcIiAgICAgICAgICAgIChuZ01vZGVsQ2hhbmdlKT1cXFwiY2hhbmdlVmFsdWUoZmllbGQpXFxcIj4gICAgIDxsYWJlbCBjbGFzcz1cXFwibWRsLXRleHRmaWVsZF9fbGFiZWxcXFwiIFthdHRyLmZvcl09XFxcImZpZWxkLmlkXFxcIj57e2ZpZWxkLm5hbWVLZXkgfCB0cmFuc2xhdGV9fTwvbGFiZWw+IDwvZGl2PlwiLFxuICAgIHN0eWxlczogW1wiLm51bWJlci13aWRnZXQgeyAgICAgd2lkdGg6IDEwMCU7IH0gIC5udW1iZXItd2lkZ2V0X19pbnZhbGlkIC5tZGwtdGV4dGZpZWxkX19pbnB1dCB7ICAgICBib3JkZXItY29sb3I6ICNkNTAwMDA7IH0gIC5udW1iZXItd2lkZ2V0X19pbnZhbGlkIC5tZGwtdGV4dGZpZWxkX19sYWJlbCB7ICAgICBjb2xvcjogI2Q1MDAwMDsgfSAgLm51bWJlci13aWRnZXRfX2ludmFsaWQgLm1kbC10ZXh0ZmllbGRfX2xhYmVsOmFmdGVyIHsgICAgIGJhY2tncm91bmQtY29sb3I6ICNkNTAwMDA7IH0gIC5udW1iZXItd2lkZ2V0X19pbnZhbGlkIC5tZGwtdGV4dGZpZWxkX19lcnJvciB7ICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7IH1cIl1cbn0pXG5leHBvcnQgY2xhc3MgTnVtYmVyV2lkZ2V0IGV4dGVuZHMgV2lkZ2V0Q29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpXG4gICAgZmllbGQ6IGFueTtcblxuICAgIEBJbnB1dCgnZ3JvdXAnKVxuICAgIHB1YmxpYyBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcblxuICAgIEBJbnB1dCgnY29udHJvbGxlck5hbWUnKVxuICAgIHB1YmxpYyBjb250cm9sbGVyTmFtZTogc3RyaW5nO1xuXG4gICAgQElucHV0KClcbiAgICByZXF1aXJlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMucmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9ybUdyb3VwLmdldCh0aGlzLmNvbnRyb2xsZXJOYW1lKS5zZXRWYWxpZGF0b3JzKFZhbGlkYXRvcnMucmVxdWlyZWQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0dXBNYXRlcmlhbENvbXBvbmVudHMoaGFuZGxlcjogYW55KTogYm9vbGVhbiB7XG4gICAgICAgIC8vIHdvcmthcm91bmQgZm9yIE1ETCBpc3N1ZXMgd2l0aCBkeW5hbWljIGNvbXBvbmVudHNcbiAgICAgICAgaWYgKGhhbmRsZXIpIHtcbiAgICAgICAgICAgIGhhbmRsZXIudXBncmFkZUFsbFJlZ2lzdGVyZWQoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLmVsZW1lbnRSZWYgJiYgdGhpcy5oYXNWYWx1ZSgpKSB7XG4gICAgICAgICAgICAgICAgbGV0IGNvbnRhaW5lciA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tZGwtdGV4dGZpZWxkJyk7XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRhaW5lciAmJiBjb250YWluZXIuTWF0ZXJpYWxUZXh0ZmllbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGFpbmVyLk1hdGVyaWFsVGV4dGZpZWxkLmNoYW5nZSh0aGlzLmZpZWxkLnZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4iXX0=
