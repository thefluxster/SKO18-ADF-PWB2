/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter, OnInit, OnChanges, SimpleChanges, OnDestroy, AfterViewChecked } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { AlfrescoTranslationService, LogService } from 'ng2-alfresco-core';
import { AnalyticsService } from '../services/analytics.service';
import { ReportParametersModel, ReportQuery } from '../models/report.model';
export declare class AnalyticsReportParametersComponent implements OnInit, OnChanges, OnDestroy, AfterViewChecked {
    private translateService;
    private analyticsService;
    private formBuilder;
    private logService;
    static FORMAT_DATE_ACTIVITI: string;
    appId: string;
    reportId: string;
    debug: boolean;
    onSuccess: EventEmitter<{}>;
    onError: EventEmitter<{}>;
    onEdit: EventEmitter<{}>;
    onFormValueChanged: EventEmitter<{}>;
    onDropdownChanged: EventEmitter<{}>;
    onSuccessReportParams: EventEmitter<{}>;
    onSuccessParamOpt: EventEmitter<{}>;
    reportParameters: ReportParametersModel;
    reportForm: FormGroup;
    private dropDownSub;
    private reportParamsSub;
    private paramOpts;
    private isEditable;
    private hideParameters;
    constructor(translateService: AlfrescoTranslationService, analyticsService: AnalyticsService, formBuilder: FormBuilder, logService: LogService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    initForm(): void;
    getReportParams(reportId: string): void;
    private retrieveParameterOptions(parameters, appId, reportId?, processDefinitionId?);
    onProcessDefinitionChanges(field: any): void;
    submit(values: any): void;
    onValueChanged(values: any): void;
    convertMomentDate(date: string): string;
    convertNumber(value: string): number;
    convertFormValuesToReportParamQuery(values: any): ReportQuery;
    ngOnDestroy(): void;
    editEnable(): void;
    editDisable(): void;
    editTitle(): void;
    ngAfterViewChecked(): void;
    toggleParameters(): void;
    isParametersHide(): boolean;
}
