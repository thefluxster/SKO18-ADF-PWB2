/*!
 * @license
 * Copyright 2016 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
"use strict";
var testing_1 = require("@angular/core/testing");
var Rx_1 = require("rxjs/Rx");
var ng2_charts_1 = require("ng2-charts/ng2-charts");
var ng2_alfresco_core_1 = require("ng2-alfresco-core");
var ng2_activiti_diagrams_1 = require("ng2-activiti-diagrams");
var analytics_report_list_component_1 = require("../components/analytics-report-list.component");
var analytics_component_1 = require("../components/analytics.component");
var analytics_generator_component_1 = require("../components/analytics-generator.component");
var analytics_report_parameters_component_1 = require("../components/analytics-report-parameters.component");
var analytics_report_heat_map_component_1 = require("../components/analytics-report-heat-map.component");
var index_1 = require("../components/widgets/index");
var analytics_service_1 = require("../services/analytics.service");
exports.ANALYTICS_DIRECTIVES = [
    analytics_component_1.AnalyticsComponent,
    analytics_generator_component_1.AnalyticsGeneratorComponent,
    analytics_report_parameters_component_1.AnalyticsReportParametersComponent,
    analytics_report_list_component_1.AnalyticsReportListComponent,
    analytics_report_heat_map_component_1.AnalyticsReportHeatMapComponent,
    index_1.WIDGET_DIRECTIVES
];
exports.ANALYTICS_PROVIDERS = [
    analytics_service_1.AnalyticsService
];
describe('AnalyticsComponent', function () {
    var component;
    var fixture;
    var debug;
    var element;
    var componentHandler;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            imports: [
                ng2_alfresco_core_1.CoreModule.forRoot(),
                ng2_activiti_diagrams_1.DiagramsModule.forRoot()
            ],
            declarations: exports.ANALYTICS_DIRECTIVES.concat(ng2_charts_1.CHART_DIRECTIVES),
            providers: exports.ANALYTICS_PROVIDERS.slice()
        }).compileComponents();
        var translateService = testing_1.TestBed.get(ng2_alfresco_core_1.AlfrescoTranslationService);
        spyOn(translateService, 'addTranslationFolder').and.stub();
        spyOn(translateService, 'get').and.callFake(function (key) { return Rx_1.Observable.of(key); });
    }));
    beforeEach(function () {
        fixture = testing_1.TestBed.createComponent(analytics_component_1.AnalyticsComponent);
        component = fixture.componentInstance;
        debug = fixture.debugElement;
        element = fixture.nativeElement;
        fixture.detectChanges();
        componentHandler = jasmine.createSpyObj('componentHandler', [
            'upgradeAllRegistered'
        ]);
        window['componentHandler'] = componentHandler;
    });
    describe('Rendering tests', function () {
        beforeEach(function () {
            jasmine.Ajax.install();
        });
        afterEach(function () {
            jasmine.Ajax.uninstall();
        });
    });
});
//# sourceMappingURL=analytics.component.spec.js.map